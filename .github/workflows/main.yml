name: Main
on: [push]
env:
  TWITCH_CLI_VERSION: "1.1.15"
  HOMEBREW_NO_ENV_HINTS: true
  HOMEBREW_NO_INSTALL_CLEANUP: true
  NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ 'netstandard2.1', 'net6.0', 'net7.0' ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install Dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ github.run_number }}_${{ matrix.dotnet }}
          path: "/home/runner/work/SimpleTwitch/SimpleTwitch/src/*/bin/Release/${{ matrix.dotnet-version }}/*"
          retention-days: 1

  #test:
  #  name: Test
  #  needs: build
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      dotnet: [ 'net6.0', 'netstandard2.1' ]
  #  steps:
  #    - uses: actions/checkout@v3
  #    - name: Download Build Artifacts
  #      uses: actions/download-artifact@v3
  #      with:
  #        name: build-${{ github.run_number }}_${{ matrix.dotnet }}
  #    - name: Install Brew
  #      run: |
  #        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  #        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/runner/.bash_profile
  #        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  #    - name: Install Twitch CLI
  #      run: "/home/linuxbrew/.linuxbrew/bin/brew install twitchdev/twitch/twitch-cli"
  #    - name: Initialize Mock API
  #      run: "/home/linuxbrew/.linuxbrew/Cellar/twitch-cli/$TWITCH_CLI_VERSION/bin/twitch mock-api start &"
  #    - name: Setup .NET Core SDK ${{ matrix.dotnet }}
  #      uses: actions/setup-dotnet@v3
  #      with:
  #        dotnet-version: ${{ matrix.dotnet-version }}
  #    - name: Install Dependencies
  #      run: dotnet restore
  #    - name: Test
  #      run: dotnet test --no-restore --verbosity normal

  publish_develop:
    if: github.ref == 'refs/heads/main' # Change to develop branch later
    name: Publish to GitHub
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK net6.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          source-url: https://nuget.pkg.github.com/AuxLabs/index.json
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-${{ github.run_number }}_net6.0
          path: "./src"
      - name: Install Dependencies
        run: dotnet restore
      - name: Create Packages
        run: |
          dotnet pack "./src/AuxLabs.SimpleTwitch.Core/AuxLabs.SimpleTwitch.Core.csproj" -c "Release" -o "./pkgs" --no-build /p:BuildNumber="$GITHUB_RUN_NUMBER"
          dotnet pack "./src/AuxLabs.SimpleTwitch.Rest/AuxLabs.SimpleTwitch.Rest.csproj" -c "Release" -o "./pkgs" --no-build /p:BuildNumber="$GITHUB_RUN_NUMBER"
          dotnet pack "./src/AuxLabs.SimpleTwitch.WebSockets/AuxLabs.SimpleTwitch.WebSockets.csproj" -c "Release" -o "./pkgs" --no-build /p:BuildNumber="$GITHUB_RUN_NUMBER"
          dotnet pack "./src/AuxLabs.SimpleTwitch.Chat/AuxLabs.SimpleTwitch.Chat.csproj" -c "Release" -o "./pkgs" --no-build /p:BuildNumber="$GITHUB_RUN_NUMBER"
          dotnet pack "./src/AuxLabs.SimpleTwitch.PubSub/AuxLabs.SimpleTwitch.PubSub.csproj" -c "Release" -o "./pkgs" --no-build /p:BuildNumber="$GITHUB_RUN_NUMBER"
          dotnet pack "./src/AuxLabs.SimpleTwitch.EventSub/AuxLabs.SimpleTwitch.EventSub.csproj" -c "Release" -o "./pkgs" --no-build /p:BuildNumber="$GITHUB_RUN_NUMBER"
          dotnet pack "./src/AuxLabs.SimpleTwitch.EventSub.WebSocket/AuxLabs.SimpleTwitch.EventSub.WebSocket.csproj" -c "Release" -o "./pkgs" --no-build /p:BuildNumber="$GITHUB_RUN_NUMBER"
      - name: Publish
        run: dotnet nuget push "./pkgs/*.nupkg" -k "$NUGET_AUTH_TOKEN"

# Add a publish release to nuget job later

  publish_docs:
    if: github.ref == 'refs/heads/main'
    name: Publish Documentation
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
      - name: Install
        run: dotnet tool install -g docfx
      - name: Build
        run: docfx docs/docfx.json
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: docs/_site
