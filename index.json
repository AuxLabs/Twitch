{
  "api/AuxLabs.SimpleTwitch.Chat.Badge.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.Badge.html",
    "title": "Struct Badge | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct Badge Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public readonly struct Badge Constructors | Improve this Doc View Source Badge(string, string) Declaration public Badge(string name, string version = \"1\") Parameters Type Name Description string name string version Properties | Improve this Doc View Source Name The badge's name. Declaration public string Name { get; } Property Value Type Description string | Improve this Doc View Source Version Information relating to the badge. Declaration public string Version { get; } Property Value Type Description string Methods | Improve this Doc View Source Parse(string, out Badge) Declaration public static void Parse(string value, out Badge badge) Parameters Type Name Description string value Badge badge | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides System.ValueType.ToString() | Improve this Doc View Source TryParseMany(string, out IReadOnlyCollection<Badge>) Declaration public static bool TryParseMany(string value, out IReadOnlyCollection<Badge> badges) Parameters Type Name Description string value System.Collections.Generic.IReadOnlyCollection<T><Badge> badges Returns Type Description bool"
  },
  "api/AuxLabs.SimpleTwitch.Chat.BaseTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.BaseTags.html",
    "title": "Class BaseTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BaseTags Inheritance object QueryMap<string> QueryMap BaseTags ClearChatTags ClearMessageTags GlobalUserStateTags MessageTags NoticeTags RoomStateTags SendMessageTags WhisperTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.CreateQueryMap() QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public abstract class BaseTags : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Methods | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Fill a dictionary with tags in their query format. Declaration public abstract void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Chat.BitsBadgeTierTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.BitsBadgeTierTags.html",
    "title": "Class BitsBadgeTierTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsBadgeTierTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags BitsBadgeTierTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class BitsBadgeTierTags : UserNoticeTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source BitsThreshold The tier of the Bits badge the user just earned. Declaration public int BitsThreshold { get; set; } Property Value Type Description int Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides UserNoticeTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides UserNoticeTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.CapabilityRequest.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.CapabilityRequest.html",
    "title": "Class CapabilityRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CapabilityRequest Inheritance object IrcPayload CapabilityRequest Implements IPayload Inherited Members IrcPayload.IsHelloEvent IrcPayload.Tags IrcPayload.Prefix IrcPayload.Command IrcPayload.CommandRaw IrcPayload.Parameters IrcPayload.ToString() IrcPayload.TagsTypeSelector IrcPayload.UserNoticeTypeSelector object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class CapabilityRequest : IrcPayload, IPayload Constructors | Improve this Doc View Source CapabilityRequest(bool, bool, bool) Declaration public CapabilityRequest(bool membership, bool commands, bool tags) Parameters Type Name Description bool membership bool commands bool tags Properties | Improve this Doc View Source HasData Declaration public bool HasData { get; } Property Value Type Description bool Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.Chat.ClearChatEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.ClearChatEventArgs.html",
    "title": "Class ClearChatEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearChatEventArgs Inheritance object ClearChatEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class ClearChatEventArgs Constructors | Improve this Doc View Source ClearChatEventArgs(IReadOnlyCollection<string>) Declaration public ClearChatEventArgs(IReadOnlyCollection<string> parameters) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName The channel's name. Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Tags The tags for this event, if provided. Declaration public ClearChatTags Tags { get; set; } Property Value Type Description ClearChatTags | Improve this Doc View Source UserName The user whose messages were cleared from chat. Declaration public string UserName { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static ClearChatEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description ClearChatEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.Chat.ClearChatTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.ClearChatTags.html",
    "title": "Class ClearChatTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearChatTags Inheritance object QueryMap<string> QueryMap BaseTags ClearChatTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class ClearChatTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Properties | Improve this Doc View Source BanDuration The message includes this tag if the user was put in a timeout. Declaration public TimeSpan? BanDuration { get; set; } Property Value Type Description TimeSpan? | Improve this Doc View Source ChannelId The ID of the channel where the messages were removed from. Declaration public string ChannelId { get; set; } Property Value Type Description string | Improve this Doc View Source TargetUserId The ID of the user that was banned or put in a timeout. Declaration public string TargetUserId { get; set; } Property Value Type Description string | Improve this Doc View Source Timestamp The date and time this event occurred. Declaration public DateTime Timestamp { get; set; } Property Value Type Description System.DateTime Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Chat.ClearMessageEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.ClearMessageEventArgs.html",
    "title": "Class ClearMessageEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearMessageEventArgs Inheritance object ClearMessageEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class ClearMessageEventArgs Constructors | Improve this Doc View Source ClearMessageEventArgs(IReadOnlyCollection<string>) Declaration public ClearMessageEventArgs(IReadOnlyCollection<string> parameters) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source Tags Declaration public ClearMessageTags Tags { get; set; } Property Value Type Description ClearMessageTags Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static ClearMessageEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description ClearMessageEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.Chat.ClearMessageTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.ClearMessageTags.html",
    "title": "Class ClearMessageTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearMessageTags Inheritance object QueryMap<string> QueryMap BaseTags ClearMessageTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class ClearMessageTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Properties | Improve this Doc View Source ChannelId The ID of the channel (chat room) where the message was removed from. Declaration public string ChannelId { get; set; } Property Value Type Description string | Improve this Doc View Source TargetMessageId A UUID that identifies the message that was removed. Declaration public string TargetMessageId { get; set; } Property Value Type Description string | Improve this Doc View Source Timestamp The date and time this event occurred. Declaration public DateTime Timestamp { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source UserName The name of the user who sent the message. Declaration public string UserName { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Chat.DefaultIrcSerializer.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.DefaultIrcSerializer.html",
    "title": "Class DefaultIrcSerializer | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DefaultIrcSerializer Inheritance object DefaultIrcSerializer Implements ISerializer<IrcPayload> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public sealed class DefaultIrcSerializer : ISerializer<IrcPayload> Constructors | Improve this Doc View Source DefaultIrcSerializer(bool) Declaration public DefaultIrcSerializer(bool throwOnMismatchedTags = false) Parameters Type Name Description bool throwOnMismatchedTags Methods | Improve this Doc View Source Read(ref ReadOnlySpan<byte>) Declaration public IrcPayload Read(ref ReadOnlySpan<byte> data) Parameters Type Name Description System.ReadOnlySpan<T><byte> data Returns Type Description IrcPayload | Improve this Doc View Source Write(IrcPayload) Declaration public ReadOnlyMemory<byte> Write(IrcPayload msg) Parameters Type Name Description IrcPayload msg Returns Type Description System.ReadOnlyMemory<T><byte> Implements ISerializer<TPayload>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.EmotePosition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.EmotePosition.html",
    "title": "Struct EmotePosition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct EmotePosition Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public readonly struct EmotePosition Constructors | Improve this Doc View Source EmotePosition(string, Range) Declaration public EmotePosition(string id, Range range) Parameters Type Name Description string id System.Range range Properties | Improve this Doc View Source Id An ID that uniquely identifies this emote Declaration public string Id { get; } Property Value Type Description string | Improve this Doc View Source Range The position of this emote in a message Declaration public Range Range { get; } Property Value Type Description System.Range Methods | Improve this Doc View Source Parse(string, string, out EmotePosition) Declaration public static void Parse(string id, string range, out EmotePosition emote) Parameters Type Name Description string id string range EmotePosition emote | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides System.ValueType.ToString() | Improve this Doc View Source TryParseMany(string, out IReadOnlyCollection<EmotePosition>) Declaration public static bool TryParseMany(string value, out IReadOnlyCollection<EmotePosition> emotes) Parameters Type Name Description string value System.Collections.Generic.IReadOnlyCollection<T><EmotePosition> emotes Returns Type Description bool"
  },
  "api/AuxLabs.SimpleTwitch.Chat.GlobalUserStateTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.GlobalUserStateTags.html",
    "title": "Class GlobalUserStateTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GlobalUserStateTags Inheritance object QueryMap<string> QueryMap BaseTags GlobalUserStateTags UserStateTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IChatUser IUser IEntity<string> Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class GlobalUserStateTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IChatUser, IUser, IEntity<string> Properties | Improve this Doc View Source BadgeInfo Contains metadata related to the chat badges in the badges tag. Declaration public string BadgeInfo { get; set; } Property Value Type Description string Remarks Currently, this tag contains metadata only for subscriber badges, to indicate the number of months the user has been a subscriber. | Improve this Doc View Source Badges A collection of badges the user has. Declaration public IReadOnlyCollection<Badge> Badges { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><Badge> | Improve this Doc View Source Color The color of the user’s name in the chat room. Declaration public Color Color { get; set; } Property Value Type Description System.Drawing.Color | Improve this Doc View Source DisplayName The user’s display name. Declaration public string DisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source EmoteSets A collection of IDs that identify the emote sets that the user has access to. Declaration public IReadOnlyCollection<string> EmoteSets { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><string> | Improve this Doc View Source IsTurbo Indicates whether the user has site-wide commercial free mode enabled. Declaration public bool IsTurbo { get; set; } Property Value Type Description bool | Improve this Doc View Source UserId The user’s ID. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserType The type of user. Declaration public UserType UserType { get; set; } Property Value Type Description UserType Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Explicit Interface Implementations | Improve this Doc View Source IChatUser.Color Declaration Color? IChatUser.Color { get; } Returns Type Description System.Drawing.Color? | Improve this Doc View Source IEntity<string>.Id Declaration string IEntity<string>.Id { get; } Returns Type Description string | Improve this Doc View Source IUser.Name Declaration string IUser.Name { get; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IChatUser IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.html",
    "title": "Namespace AuxLabs.SimpleTwitch.Chat | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.SimpleTwitch.Chat Classes BaseTags BitsBadgeTierTags CapabilityRequest ClearChatEventArgs ClearChatTags ClearMessageEventArgs ClearMessageTags DefaultIrcSerializer GlobalUserStateTags IrcPayload JoinChannelRequest MembershipEventArgs MessageEventArgs MessageTags NamesEventArgs NoticeEventArgs NoticeTags PartChannelRequest RaidTags RitualTags RoomStateEventArgs RoomStateTags SendMessageRequest SendMessageTags SubscriptionGiftTags SubscriptionGiftUpgradeAnonymousTags SubscriptionGiftUpgradeTags SubscriptionTags TwitchChatApiClient TwitchChatApiConfig UserNoticeEventArgs UserNoticeTags UserStateEventArgs UserStateTags WhisperEventArgs WhisperTags Structs Badge EmotePosition IrcPrefix Interfaces IChatUser IChatUserRelation Enums IrcCommand IrcTokenType MessageType NoticeType RitualType SubscriptionType UserNoticeType UserType"
  },
  "api/AuxLabs.SimpleTwitch.Chat.IChatUser.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.IChatUser.html",
    "title": "Interface IChatUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IChatUser Inherited Members IUser.Name IUser.DisplayName IEntity<string>.Id Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public interface IChatUser : IUser, IEntity<string> Properties | Improve this Doc View Source Color Declaration Color? Color { get; } Property Value Type Description System.Drawing.Color?"
  },
  "api/AuxLabs.SimpleTwitch.Chat.IChatUserRelation.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.IChatUserRelation.html",
    "title": "Interface IChatUserRelation | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IChatUserRelation Inherited Members IChatUser.Color IUserRelation.RelatedId IUserRelation.RelatedName IUserRelation.RelatedDisplayName IUser.Name IUser.DisplayName IEntity<string>.Id Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public interface IChatUserRelation : IChatUser, IUserRelation, IUser, IEntity<string>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.IrcCommand.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.IrcCommand.html",
    "title": "Enum IrcCommand | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum IrcCommand Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum IrcCommand Fields Name Description CapabilityAcknowledge CapabilityDenied CapabilityRequest ClearChat ClearMessage GlobalUserState Join Message Names NamesEnd NamesList Nickname Notice Part Password Ping Pong Reconnect RoomState RPL_Created RPL_Motd RPL_MotdEnd RPL_MotdStart RPL_MyInfo RPL_Welcome RPL_YourHost Unknown UserNotice UserState Whisper Extension Methods EnumHelper.GetEnumMemberValue<IrcCommand>(IrcCommand)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.IrcPayload.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.IrcPayload.html",
    "title": "Class IrcPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class IrcPayload Inheritance object IrcPayload CapabilityRequest JoinChannelRequest PartChannelRequest SendMessageRequest Implements IPayload Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class IrcPayload : IPayload Constructors | Improve this Doc View Source IrcPayload() Declaration public IrcPayload() | Improve this Doc View Source IrcPayload(IrcCommand, params string[]) Declaration public IrcPayload(IrcCommand ircCommand, params string[] parameters) Parameters Type Name Description IrcCommand ircCommand string[] parameters | Improve this Doc View Source IrcPayload(string, IrcCommand, params string[]) Declaration public IrcPayload(string prefix, IrcCommand ircCommand, params string[] parameters) Parameters Type Name Description string prefix IrcCommand ircCommand string[] parameters Properties | Improve this Doc View Source Command Declaration public IrcCommand Command { get; set; } Property Value Type Description IrcCommand | Improve this Doc View Source CommandRaw Declaration public string CommandRaw { get; set; } Property Value Type Description string | Improve this Doc View Source IsHelloEvent Declaration public bool IsHelloEvent { get; } Property Value Type Description bool | Improve this Doc View Source Parameters Declaration public IReadOnlyCollection<string> Parameters { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><string> | Improve this Doc View Source Prefix Declaration public IrcPrefix? Prefix { get; set; } Property Value Type Description IrcPrefix? | Improve this Doc View Source Tags Declaration public BaseTags Tags { get; set; } Property Value Type Description BaseTags | Improve this Doc View Source TagsTypeSelector Declaration public static Dictionary<IrcCommand, Type> TagsTypeSelector { get; } Property Value Type Description System.Collections.Generic.Dictionary<TKey, TValue><IrcCommand, System.Type> | Improve this Doc View Source UserNoticeTypeSelector Declaration public static Dictionary<UserNoticeType, Type> UserNoticeTypeSelector { get; } Property Value Type Description System.Collections.Generic.Dictionary<TKey, TValue><UserNoticeType, System.Type> Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.Chat.IrcPrefix.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.IrcPrefix.html",
    "title": "Struct IrcPrefix | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct IrcPrefix Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public struct IrcPrefix Constructors | Improve this Doc View Source IrcPrefix(string) Declaration public IrcPrefix(string prefix) Parameters Type Name Description string prefix Properties | Improve this Doc View Source Host Declaration public readonly string Host { get; } Property Value Type Description string | Improve this Doc View Source Nickname Declaration public readonly string Nickname { get; } Property Value Type Description string | Improve this Doc View Source Username Declaration public readonly string Username { get; } Property Value Type Description string Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides System.ValueType.ToString()"
  },
  "api/AuxLabs.SimpleTwitch.Chat.IrcTokenType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.IrcTokenType.html",
    "title": "Enum IrcTokenType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum IrcTokenType Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum IrcTokenType Fields Name Description ChannelIndicator CommandEnd None ParameterIndicator PrefixEnd PrefixHostIndicator PrefixIndicator PrefixUsernameIndicator Remainder ServerIndicator TagEnd TagEscapedSpace TagIndicator TagKeyValueEnd TagKeyValueSeparator Extension Methods EnumHelper.GetEnumMemberValue<IrcTokenType>(IrcTokenType)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.JoinChannelRequest.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.JoinChannelRequest.html",
    "title": "Class JoinChannelRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class JoinChannelRequest Inheritance object IrcPayload JoinChannelRequest Implements IPayload Inherited Members IrcPayload.IsHelloEvent IrcPayload.Tags IrcPayload.Prefix IrcPayload.Command IrcPayload.CommandRaw IrcPayload.Parameters IrcPayload.ToString() IrcPayload.TagsTypeSelector IrcPayload.UserNoticeTypeSelector object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class JoinChannelRequest : IrcPayload, IPayload Constructors | Improve this Doc View Source JoinChannelRequest() Declaration public JoinChannelRequest() | Improve this Doc View Source JoinChannelRequest(string) Declaration public JoinChannelRequest(string channelName) Parameters Type Name Description string channelName Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.Chat.MembershipEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.MembershipEventArgs.html",
    "title": "Class MembershipEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MembershipEventArgs Inheritance object MembershipEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class MembershipEventArgs Constructors | Improve this Doc View Source MembershipEventArgs(IrcPrefix, IReadOnlyCollection<string>) Declaration public MembershipEventArgs(IrcPrefix prefix, IReadOnlyCollection<string> parameters) Parameters Type Name Description IrcPrefix prefix System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source UserName Declaration public string UserName { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static MembershipEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description MembershipEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.Chat.MessageEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.MessageEventArgs.html",
    "title": "Class MessageEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MessageEventArgs Inheritance object MessageEventArgs Implements IChatUserRelation IChatUser IUserRelation IUser IChannel IEntity<string> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class MessageEventArgs : IChatUserRelation, IChatUser, IUserRelation, IUser, IChannel, IEntity<string> Constructors | Improve this Doc View Source MessageEventArgs(IrcPrefix?, IReadOnlyCollection<string>) Declaration public MessageEventArgs(IrcPrefix? prefix, IReadOnlyCollection<string> parameters) Parameters Type Name Description IrcPrefix? prefix System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source Tags Declaration public MessageTags Tags { get; set; } Property Value Type Description MessageTags | Improve this Doc View Source UserName Declaration public string UserName { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static MessageEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description MessageEventArgs Explicit Interface Implementations | Improve this Doc View Source IChatUser.Color Declaration Color? IChatUser.Color { get; } Returns Type Description System.Drawing.Color? | Improve this Doc View Source IChannel.Name Declaration string IChannel.Name { get; } Returns Type Description string | Improve this Doc View Source IEntity<string>.Id Declaration string IEntity<string>.Id { get; } Returns Type Description string | Improve this Doc View Source IUser.DisplayName Declaration string IUser.DisplayName { get; } Returns Type Description string | Improve this Doc View Source IUser.Name Declaration string IUser.Name { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedDisplayName Declaration string IUserRelation.RelatedDisplayName { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedId Declaration string IUserRelation.RelatedId { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedName Declaration string IUserRelation.RelatedName { get; } Returns Type Description string Implements IChatUserRelation IChatUser IUserRelation IUser IChannel IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.MessageTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.MessageTags.html",
    "title": "Class MessageTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MessageTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class MessageTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source Action The message value when someone uses the /me chat command Declaration public string Action { get; set; } Property Value Type Description string | Improve this Doc View Source BadgeInfo Contains metadata related to the chat badges in the badges tag. Currently, this tag contains metadata only for subscriber badges, to indicate the number of months the user has been a subscriber. Declaration public string BadgeInfo { get; set; } Property Value Type Description string | Improve this Doc View Source Badges A collection of badges the user has. Declaration public IReadOnlyCollection<Badge> Badges { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><Badge> | Improve this Doc View Source Bits The amount of Bits the user cheered. Only a Bits cheer message includes this tag. Declaration public int Bits { get; set; } Property Value Type Description int | Improve this Doc View Source ChannelId An ID that identifies the channel. Declaration public string ChannelId { get; set; } Property Value Type Description string | Improve this Doc View Source Color The color of the user’s name in the chat room. Declaration public Color Color { get; set; } Property Value Type Description System.Drawing.Color | Improve this Doc View Source CustomRewardId Declaration public string CustomRewardId { get; set; } Property Value Type Description string | Improve this Doc View Source DisplayName The user’s display name. Declaration public string DisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source Emotes A collection of emotes and their position in the message. Declaration public IReadOnlyCollection<EmotePosition> Emotes { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><EmotePosition> | Improve this Doc View Source Flags Declaration public string Flags { get; set; } Property Value Type Description string | Improve this Doc View Source Id An ID that uniquely identifies the message. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source IsEmoteOnly Indicates whether this message contains only emotes Declaration public bool IsEmoteOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source IsFirstMessage Indicates whether this is the user's first message in the channel Declaration public bool IsFirstMessage { get; set; } Property Value Type Description bool | Improve this Doc View Source IsMod Indicates whether the user is a moderator. Declaration public bool IsMod { get; set; } Property Value Type Description bool | Improve this Doc View Source IsReturningChatter Indicates whether this is a returning chat user Declaration public bool IsReturningChatter { get; set; } Property Value Type Description bool | Improve this Doc View Source IsSubscriber Indicates whether the user is a subscriber. Declaration public bool IsSubscriber { get; set; } Property Value Type Description bool | Improve this Doc View Source IsTurbo Indicates whether the user has site-wide commercial free mode enabled. Declaration public bool IsTurbo { get; set; } Property Value Type Description bool | Improve this Doc View Source IsVIP Indicates whether the user is a VIP. Declaration public bool IsVIP { get; set; } Property Value Type Description bool | Improve this Doc View Source Name The user’s login name. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source Nonce A unique value used to identify requests Declaration public string Nonce { get; set; } Property Value Type Description string | Improve this Doc View Source ReplyParentDisplayName The display name of the sender of the parent message. Declaration public string ReplyParentDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source ReplyParentMessage The text of the parent message. Declaration public string ReplyParentMessage { get; set; } Property Value Type Description string | Improve this Doc View Source ReplyParentMessageId An ID that uniquely identifies the parent message that this message is replying to. Declaration public string ReplyParentMessageId { get; set; } Property Value Type Description string | Improve this Doc View Source ReplyParentUserId An ID that identifies the sender of the parent message. Declaration public string ReplyParentUserId { get; set; } Property Value Type Description string | Improve this Doc View Source ReplyParentUserName The login name of the sender of the parent message. Declaration public string ReplyParentUserName { get; set; } Property Value Type Description string | Improve this Doc View Source Timestamp The date and time that the message was sent. Declaration public DateTimeOffset Timestamp { get; set; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Type A value that indicates if a messag has unique properties Declaration public MessageType Type { get; set; } Property Value Type Description MessageType | Improve this Doc View Source UserId The ID of the user that sent the message. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserType The type of user. Declaration public UserType UserType { get; set; } Property Value Type Description UserType Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Explicit Interface Implementations | Improve this Doc View Source IUserRelation.RelatedDisplayName Declaration string IUserRelation.RelatedDisplayName { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedId Declaration string IUserRelation.RelatedId { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedName Declaration string IUserRelation.RelatedName { get; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.MessageType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.MessageType.html",
    "title": "Enum MessageType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum MessageType Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum MessageType Fields Name Description Highlighted Normal Extension Methods EnumHelper.GetEnumMemberValue<MessageType>(MessageType)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.NamesEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.NamesEventArgs.html",
    "title": "Class NamesEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class NamesEventArgs Inheritance object NamesEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class NamesEventArgs Constructors | Improve this Doc View Source NamesEventArgs(IReadOnlyCollection<string>) Declaration public NamesEventArgs(IReadOnlyCollection<string> parameters) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Names Declaration public IReadOnlyCollection<string> Names { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><string>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.NoticeEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.NoticeEventArgs.html",
    "title": "Class NoticeEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class NoticeEventArgs Inheritance object NoticeEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class NoticeEventArgs Constructors | Improve this Doc View Source NoticeEventArgs(IReadOnlyCollection<string>) Declaration public NoticeEventArgs(IReadOnlyCollection<string> parameters) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source Tags Declaration public NoticeTags Tags { get; set; } Property Value Type Description NoticeTags Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static NoticeEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description NoticeEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.Chat.NoticeTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.NoticeTags.html",
    "title": "Class NoticeTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class NoticeTags Inheritance object QueryMap<string> QueryMap BaseTags NoticeTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class NoticeTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Properties | Improve this Doc View Source NoticeType A value to determine the action’s outcome. Declaration public NoticeType NoticeType { get; set; } Property Value Type Description NoticeType | Improve this Doc View Source TargetUserId The ID of the user that the action targeted. If specified. Declaration public string TargetUserId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Chat.NoticeType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.NoticeType.html",
    "title": "Enum NoticeType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum NoticeType Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum NoticeType Fields Name Description AlreadyBanned AlreadyEmoteOnlyOff AlreadyEmoteOnlyOn AlreadyFollowersOff AlreadyFollowersOn AlreadyR9kOff AlreadyR9kOn AlreadySlowOff AlreadySlowOn AlreadySubsOff AlreadySubsOn BadBanAdmin BadBanAnonymous BadBanBroadcaster BadBanMod BadBanSelf BadBanStaff BadCommercialError BadDeleteMessageBroadcaster BadDeleteMessageModerator BadModAlreadyMod BadModBanned BadSlowDuration BadTimeoutAdmin BadTimeoutAnonymous BadTimeoutBroadcaster BadTimeoutDuration BadTimeoutModerator BadTimeoutSelf BadTimeoutStaff BadUnbanNoBan BadUnmodMod BadUnvipNotVip BadVipAlreadyBanned BadVipMaxReached BadVipUnavailable BadVipVip BanSuccess ColorChanged CommandNotRecognized CommandsAvailable CommandUnavailable CommercialSuccess DeleteMessageSuccess DeleteStaffMessageSuccess EmoteOnlyOff EmoteOnlyOn FollowersOff FollowersOn FollowersOnZero InvalidUser MessageBadCharacters MessageBanned MessageChannelBlocked MessageChannelSuspended MessageDuplicate MessageEmoteOnly MessageFollowersOnly MessageFollowersOnlyFollowed MessageFollowersOnlyZero MessageR9k MessageRatelimited MessageRejected MessageRejectedMandatory MessageRequiresVerifiedEmail MessageRequiresVerifiedPhone MessageSlowmode MessageSubsOnly MessageSuspended MessageTimedout ModSuccess NoHelp NoMods NoPermission NoVips R9kOff R9kOn RaidErrorAlreadyRaiding RaidErrorForbidden RaidErrorMaxViewers RaidErrorSelf RaidErrorUnexpected RaidNoticeMature RaidNoticeRestricted RoomMods SlowOff SlowOn SubsOff SubsOn TimeoutNone TimeoutSuccess TOSBan TurboOnlyColor UnbanSuccess Unknown UnmodSuccess UnraidErrorNotActive UnraidErrorUnexpected UnraidSuccess UntimeoutBanned UntimeoutSuccess UnvipSuccess UsageBan UsageClear UsageColor UsageCommercial UsageDelete UsageDisconnect UsageEmoteOnlyOff UsageEmoteOnlyOn UsageFollowersOff UsageFollowersOn UsageHelp UsageMarker UsageMe UsageMod UsageMods UsageR9kOff UsageR9kOn UsageRaid UsageSlowOff UsageSlowOn UsageSubsOff UsageSubsOn UsageTimeout UsageUnban UsageUnmod UsageUnraid UsageUntimeout UsageUnvip UsageUser UsageVip UsageVips UsageWhisper VipsSuccess VipSuccess WhisperBanned WhisperBannedRecipient WhisperInvalidLogin WhisperInvalidSelf WhisperRatelimitedMinute WhisperRatelimitedSecond WhisperRestricted WhisperRestrictedRecipient Extension Methods EnumHelper.GetEnumMemberValue<NoticeType>(NoticeType)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.PartChannelRequest.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.PartChannelRequest.html",
    "title": "Class PartChannelRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PartChannelRequest Inheritance object IrcPayload PartChannelRequest Implements IPayload Inherited Members IrcPayload.IsHelloEvent IrcPayload.Tags IrcPayload.Prefix IrcPayload.Command IrcPayload.CommandRaw IrcPayload.Parameters IrcPayload.ToString() IrcPayload.TagsTypeSelector IrcPayload.UserNoticeTypeSelector object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class PartChannelRequest : IrcPayload, IPayload Constructors | Improve this Doc View Source PartChannelRequest() Declaration public PartChannelRequest() | Improve this Doc View Source PartChannelRequest(string) Declaration public PartChannelRequest(string channelName) Parameters Type Name Description string channelName Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.Chat.RaidTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.RaidTags.html",
    "title": "Class RaidTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RaidTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags RaidTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class RaidTags : UserNoticeTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source ProfileImageUrl The profile image of the broadcaster raiding this channel. Declaration public string ProfileImageUrl { get; set; } Property Value Type Description string | Improve this Doc View Source RaiderDisplayName The display name of the broadcaster raiding this channel. Declaration public string RaiderDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source RaiderLogin The login name of the broadcaster raiding this channel. Declaration public string RaiderLogin { get; set; } Property Value Type Description string | Improve this Doc View Source RaiderViewerCount The number of viewers raiding this channel from the broadcaster’s channel. Declaration public int RaiderViewerCount { get; set; } Property Value Type Description int Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides UserNoticeTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides UserNoticeTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.RitualTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.RitualTags.html",
    "title": "Class RitualTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RitualTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags RitualTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class RitualTags : UserNoticeTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source RitualType The name of the ritual being celebrated. Declaration public RitualType RitualType { get; set; } Property Value Type Description RitualType Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides UserNoticeTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides UserNoticeTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.RitualType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.RitualType.html",
    "title": "Enum RitualType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum RitualType Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum RitualType Fields Name Description NewChatter Unknown Extension Methods EnumHelper.GetEnumMemberValue<RitualType>(RitualType)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.RoomStateEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.RoomStateEventArgs.html",
    "title": "Class RoomStateEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RoomStateEventArgs Inheritance object RoomStateEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class RoomStateEventArgs Constructors | Improve this Doc View Source RoomStateEventArgs(IReadOnlyCollection<string>) Declaration public RoomStateEventArgs(IReadOnlyCollection<string> parameters) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Tags Declaration public RoomStateTags Tags { get; set; } Property Value Type Description RoomStateTags Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static RoomStateEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description RoomStateEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.Chat.RoomStateTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.RoomStateTags.html",
    "title": "Class RoomStateTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RoomStateTags Inheritance object QueryMap<string> QueryMap BaseTags RoomStateTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class RoomStateTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Properties | Improve this Doc View Source ChannelId An ID that identifies the channel. Declaration public string ChannelId { get; set; } Property Value Type Description string | Improve this Doc View Source FollowersOnlyMinutes Indicates how long, in minutes, the user must have followed the broadcaster before posting chat messages. Declaration public int FollowersOnlyMinutes { get; set; } Property Value Type Description int | Improve this Doc View Source IsEmoteOnly Indicates whether the chat room allows only messages with emotes. Declaration public bool IsEmoteOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source IsFollowersOnly Indicates whether only followers can post messages in the chat room. Declaration public bool IsFollowersOnly { get; } Property Value Type Description bool | Improve this Doc View Source IsRituals Declaration public bool IsRituals { get; set; } Property Value Type Description bool | Improve this Doc View Source IsSlowEnabled Indicates whether users must wait between sending messages. Declaration public bool IsSlowEnabled { get; } Property Value Type Description bool | Improve this Doc View Source IsSubscribersOnly Indicates whether only subscribers and moderators can chat in the chat room. Declaration public bool IsSubscribersOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source IsUniqueEnabled Indicates whether a user’s messages must be unique. Declaration public bool IsUniqueEnabled { get; set; } Property Value Type Description bool | Improve this Doc View Source SlowSeconds Indicates how long, in seconds, users must wait between sending messages. Declaration public int SlowSeconds { get; set; } Property Value Type Description int Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Chat.SendMessageRequest.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.SendMessageRequest.html",
    "title": "Class SendMessageRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SendMessageRequest Inheritance object IrcPayload SendMessageRequest Implements IPayload Inherited Members IrcPayload.IsHelloEvent IrcPayload.Tags IrcPayload.Prefix IrcPayload.Command IrcPayload.CommandRaw IrcPayload.Parameters IrcPayload.ToString() IrcPayload.TagsTypeSelector IrcPayload.UserNoticeTypeSelector object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class SendMessageRequest : IrcPayload, IPayload Constructors | Improve this Doc View Source SendMessageRequest(string, string, string) Declaration public SendMessageRequest(string channelName, string message, string replyMessageId = null) Parameters Type Name Description string channelName string message string replyMessageId Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.Chat.SendMessageTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.SendMessageTags.html",
    "title": "Class SendMessageTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SendMessageTags Inheritance object QueryMap<string> QueryMap BaseTags SendMessageTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class SendMessageTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Constructors | Improve this Doc View Source SendMessageTags(string) Declaration public SendMessageTags(string replyMessageId) Parameters Type Name Description string replyMessageId Properties | Improve this Doc View Source ReplyMessageId The id of the message to reply to Declaration public string ReplyMessageId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Chat.SubscriptionGiftTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.SubscriptionGiftTags.html",
    "title": "Class SubscriptionGiftTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags SubscriptionGiftTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class SubscriptionGiftTags : UserNoticeTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source GiftedMonths The number of months gifted as part of a single, multi-month gift. Declaration public int GiftedMonths { get; set; } Property Value Type Description int | Improve this Doc View Source RecipientDisplayName The display name of the subscription gift recipient. Declaration public string RecipientDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source RecipientId The user ID of the subscription gift recipient. Declaration public string RecipientId { get; set; } Property Value Type Description string | Improve this Doc View Source RecipientName The user name of the subscription gift recipient. Declaration public string RecipientName { get; set; } Property Value Type Description string | Improve this Doc View Source SubscriptionName The display name of the subscription plan. This may be a default name or one created by the channel owner. Declaration public string SubscriptionName { get; set; } Property Value Type Description string | Improve this Doc View Source SubscriptionType The type of subscription plan being used. Declaration public SubscriptionType SubscriptionType { get; set; } Property Value Type Description SubscriptionType | Improve this Doc View Source TotalMonths The total number of months the user has subscribed. Declaration public int TotalMonths { get; set; } Property Value Type Description int Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides UserNoticeTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides UserNoticeTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.SubscriptionGiftUpgradeAnonymousTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.SubscriptionGiftUpgradeAnonymousTags.html",
    "title": "Class SubscriptionGiftUpgradeAnonymousTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftUpgradeAnonymousTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags SubscriptionGiftUpgradeAnonymousTags SubscriptionGiftUpgradeTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class SubscriptionGiftUpgradeAnonymousTags : UserNoticeTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source PromoGiftName The subscriptions promo, if any, that is ongoing. Declaration public string PromoGiftName { get; set; } Property Value Type Description string | Improve this Doc View Source PromoGiftTotal The number of gifts the gifter has given. Declaration public int PromoGiftTotal { get; set; } Property Value Type Description int Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides UserNoticeTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides UserNoticeTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.SubscriptionGiftUpgradeTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.SubscriptionGiftUpgradeTags.html",
    "title": "Class SubscriptionGiftUpgradeTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftUpgradeTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags SubscriptionGiftUpgradeAnonymousTags SubscriptionGiftUpgradeTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members SubscriptionGiftUpgradeAnonymousTags.PromoGiftTotal SubscriptionGiftUpgradeAnonymousTags.PromoGiftName UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class SubscriptionGiftUpgradeTags : SubscriptionGiftUpgradeAnonymousTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source SenderDisplayName The display name of the user who gifted the subscription. Declaration public string SenderDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source SenderLogin The login name of the user who gifted the subscription. Declaration public string SenderLogin { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides SubscriptionGiftUpgradeAnonymousTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides SubscriptionGiftUpgradeAnonymousTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.SubscriptionTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.SubscriptionTags.html",
    "title": "Class SubscriptionTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags SubscriptionTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class SubscriptionTags : UserNoticeTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source IsStreakShared Indicates whether the user wants their streaks shared. Declaration public bool IsStreakShared { get; set; } Property Value Type Description bool | Improve this Doc View Source StreakMonths The number of consecutive months the user has subscribed. Declaration public int StreakMonths { get; set; } Property Value Type Description int | Improve this Doc View Source SubscriptionName The display name of the subscription plan. This may be a default name or one created by the channel owner Declaration public string SubscriptionName { get; set; } Property Value Type Description string | Improve this Doc View Source SubscriptionType The type of subscription plan being used. Declaration public SubscriptionType SubscriptionType { get; set; } Property Value Type Description SubscriptionType | Improve this Doc View Source TotalMonths The total number of months the user has subscribed. Declaration public int TotalMonths { get; set; } Property Value Type Description int Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides UserNoticeTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides UserNoticeTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.SubscriptionType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.SubscriptionType.html",
    "title": "Enum SubscriptionType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum SubscriptionType Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum SubscriptionType Fields Name Description Prime Tier1 Tier2 Tier3 Unknown Extension Methods EnumHelper.GetEnumMemberValue<SubscriptionType>(SubscriptionType)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.TwitchChatApiClient.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.TwitchChatApiClient.html",
    "title": "Class TwitchChatApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchChatApiClient Inheritance object BaseSocketClient<IrcPayload> TwitchChatApiClient Inherited Members BaseSocketClient<IrcPayload>.Connected BaseSocketClient<IrcPayload>.Disconnected BaseSocketClient<IrcPayload>.DeserializationError BaseSocketClient<IrcPayload>.UnknownEventReceived BaseSocketClient<IrcPayload>.PayloadReceived BaseSocketClient<IrcPayload>.PayloadSent BaseSocketClient<IrcPayload>.State BaseSocketClient<IrcPayload>.ReceivedData BaseSocketClient<IrcPayload>.OnUnknownEventReceived(IrcPayload) BaseSocketClient<IrcPayload>.Run(string) BaseSocketClient<IrcPayload>.RunAsync(string) BaseSocketClient<IrcPayload>.Stop() BaseSocketClient<IrcPayload>.StopAsync() BaseSocketClient<IrcPayload>.Dispose() BaseSocketClient<IrcPayload>.Send(IrcPayload) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class TwitchChatApiClient : BaseSocketClient<IrcPayload> Constructors | Improve this Doc View Source TwitchChatApiClient(TwitchChatApiConfig) Declaration public TwitchChatApiClient(TwitchChatApiConfig config = null) Parameters Type Name Description TwitchChatApiConfig config | Improve this Doc View Source TwitchChatApiClient(string, TwitchChatApiConfig) Declaration public TwitchChatApiClient(string url, TwitchChatApiConfig config = null) Parameters Type Name Description string url TwitchChatApiConfig config Fields | Improve this Doc View Source CommandsRequested Declaration public readonly bool CommandsRequested Field Value Type Description bool | Improve this Doc View Source MembershipRequested Declaration public readonly bool MembershipRequested Field Value Type Description bool | Improve this Doc View Source ShouldHandleEvents Declaration public readonly bool ShouldHandleEvents Field Value Type Description bool | Improve this Doc View Source TagsRequested Declaration public readonly bool TagsRequested Field Value Type Description bool | Improve this Doc View Source ThrowOnMismatchedTags Declaration public readonly bool ThrowOnMismatchedTags Field Value Type Description bool | Improve this Doc View Source ThrowOnUnknownEvent Declaration public readonly bool ThrowOnUnknownEvent Field Value Type Description bool Properties | Improve this Doc View Source Serializer Declaration protected override ISerializer<IrcPayload> Serializer { get; } Property Value Type Description ISerializer<IrcPayload> Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.Chat.IrcPayload>.Serializer Methods | Improve this Doc View Source HandleEvent(IrcPayload, TaskCompletionSource<bool>) Declaration protected override void HandleEvent(IrcPayload payload, TaskCompletionSource<bool> readySignal) Parameters Type Name Description IrcPayload payload System.Threading.Tasks.TaskCompletionSource<TResult><bool> readySignal Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.Chat.IrcPayload>.HandleEvent(AuxLabs.SimpleTwitch.Chat.IrcPayload, System.Threading.Tasks.TaskCompletionSource<bool>) | Improve this Doc View Source Run() Declaration public override void Run() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.Chat.IrcPayload>.Run() | Improve this Doc View Source RunAsync() Declaration public override Task RunAsync() Returns Type Description System.Threading.Tasks.Task Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.Chat.IrcPayload>.RunAsync() | Improve this Doc View Source SendHeartbeat() Declaration protected override void SendHeartbeat() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.Chat.IrcPayload>.SendHeartbeat() | Improve this Doc View Source SendHeartbeatAck() Declaration protected override void SendHeartbeatAck() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.Chat.IrcPayload>.SendHeartbeatAck() | Improve this Doc View Source SendIdentify() Declaration protected override void SendIdentify() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.Chat.IrcPayload>.SendIdentify() | Improve this Doc View Source SetIdentity(string, string) Declaration public TwitchChatApiClient SetIdentity(string username, string token) Parameters Type Name Description string username string token Returns Type Description TwitchChatApiClient Events | Improve this Doc View Source CapabilityAcknowledged Triggered after successful authentication. Declaration public event Action<IReadOnlyCollection<string>> CapabilityAcknowledged Event Type Type Description System.Action<T><System.Collections.Generic.IReadOnlyCollection<T><string>> | Improve this Doc View Source CapabilityDenied Triggered when authenticating with invalid capabilities Declaration public event Action<IReadOnlyCollection<string>> CapabilityDenied Event Type Type Description System.Action<T><System.Collections.Generic.IReadOnlyCollection<T><string>> | Improve this Doc View Source ChannelJoined Triggered when a user joins a channel. Declaration public event Action<MembershipEventArgs> ChannelJoined Event Type Type Description System.Action<T><MembershipEventArgs> | Improve this Doc View Source ChannelLeft Triggered when a user leaves a channel. Declaration public event Action<MembershipEventArgs> ChannelLeft Event Type Type Description System.Action<T><MembershipEventArgs> | Improve this Doc View Source ChatCleared Triggered when someone removes all messages from the channel or from a specified user. Declaration public event Action<ClearChatEventArgs> ChatCleared Event Type Type Description System.Action<T><ClearChatEventArgs> | Improve this Doc View Source GlobalUserStateReceived Triggered after authenticated with the server. Indicates the authenticated user's chat settings. Declaration public event Action<GlobalUserStateTags> GlobalUserStateReceived Event Type Type Description System.Action<T><GlobalUserStateTags> | Improve this Doc View Source MessageCleared Triggered when someone removes a single message from the chat room. Declaration public event Action<ClearMessageEventArgs> MessageCleared Event Type Type Description System.Action<T><ClearMessageEventArgs> | Improve this Doc View Source MessageReceived Triggered when a message is received in a channel. Declaration public event Action<MessageEventArgs> MessageReceived Event Type Type Description System.Action<T><MessageEventArgs> | Improve this Doc View Source NamesReceived Triggered after joining a channel, lists current active chatters. Declaration public event Action<NamesEventArgs> NamesReceived Event Type Type Description System.Action<T><NamesEventArgs> | Improve this Doc View Source NoticeReceived Triggered to indicate the outcome of an action. Declaration public event Action<NoticeEventArgs> NoticeReceived Event Type Type Description System.Action<T><NoticeEventArgs> | Improve this Doc View Source Reconnect Triggered when the Twitch IRC server needs to terminate the connection. Declaration public event Action Reconnect Event Type Type Description System.Action | Improve this Doc View Source RoomStateReceived Triggered when you join a channel or when the channel’s chat settings change. Indicates the chat's current settings. Declaration public event Action<RoomStateEventArgs> RoomStateReceived Event Type Type Description System.Action<T><RoomStateEventArgs> | Improve this Doc View Source UserNoticeReceived Triggered when events relating to a user in a channel occur. e.g. subscriptions, gifts, raids... Declaration public event Action<UserNoticeEventArgs> UserNoticeReceived Event Type Type Description System.Action<T><UserNoticeEventArgs> | Improve this Doc View Source UserStateReceived Triggered when the bot joins a channel. Indicates the authenticated user's state in said channel. Declaration public event Action<UserStateEventArgs> UserStateReceived Event Type Type Description System.Action<T><UserStateEventArgs> | Improve this Doc View Source WhisperReceived Triggered when a whisper is received. Declaration public event Action<WhisperEventArgs> WhisperReceived Event Type Type Description System.Action<T><WhisperEventArgs>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.TwitchChatApiConfig.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.TwitchChatApiConfig.html",
    "title": "Class TwitchChatApiConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchChatApiConfig Inheritance object TwitchChatApiConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class TwitchChatApiConfig Properties | Improve this Doc View Source IrcSerializer Specify a custom serializer for chat irc messages. Declaration public ISerializer<IrcPayload> IrcSerializer { get; set; } Property Value Type Description ISerializer<IrcPayload> | Improve this Doc View Source RequestCommands Lets your bot send messages that include Twitch chat commands and receive Twitch-specific messages. Declaration public bool RequestCommands { get; set; } Property Value Type Description bool | Improve this Doc View Source RequestMembership Lets your bot receive JOIN and PART events when users join and leave the chat room. Declaration public bool RequestMembership { get; set; } Property Value Type Description bool | Improve this Doc View Source RequestTags Adds additional metadata to the command and membership messages. Declaration public bool RequestTags { get; set; } Property Value Type Description bool | Improve this Doc View Source ShouldHandleEvents Should the client forward event types to their respective events. Declaration public bool ShouldHandleEvents { get; set; } Property Value Type Description bool | Improve this Doc View Source ThrowOnMismatchedTags Should an exception be raised if an event provides unhandled tags Declaration public bool ThrowOnMismatchedTags { get; set; } Property Value Type Description bool | Improve this Doc View Source ThrowOnUnknownEvent Should an exception be raised if an unhandled event is received from twitch. Declaration public bool ThrowOnUnknownEvent { get; set; } Property Value Type Description bool"
  },
  "api/AuxLabs.SimpleTwitch.Chat.UserNoticeEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.UserNoticeEventArgs.html",
    "title": "Class UserNoticeEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserNoticeEventArgs Inheritance object UserNoticeEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class UserNoticeEventArgs Constructors | Improve this Doc View Source UserNoticeEventArgs(IReadOnlyCollection<string>) Declaration public UserNoticeEventArgs(IReadOnlyCollection<string> parameters) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source Tags Declaration public UserNoticeTags Tags { get; set; } Property Value Type Description UserNoticeTags Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static UserNoticeEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description UserNoticeEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.Chat.UserNoticeTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.UserNoticeTags.html",
    "title": "Class UserNoticeTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserNoticeTags Inheritance object QueryMap<string> QueryMap BaseTags MessageTags UserNoticeTags BitsBadgeTierTags RaidTags RitualTags SubscriptionGiftTags SubscriptionGiftUpgradeAnonymousTags SubscriptionTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IUserRelation IUser IEntity<string> Inherited Members MessageTags.Id MessageTags.CustomRewardId MessageTags.ChannelId MessageTags.Type MessageTags.Timestamp MessageTags.UserId MessageTags.UserType MessageTags.DisplayName MessageTags.Name MessageTags.Color MessageTags.Badges MessageTags.BadgeInfo MessageTags.Bits MessageTags.Emotes MessageTags.Action MessageTags.IsMod MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsEmoteOnly MessageTags.IsFirstMessage MessageTags.IsReturningChatter MessageTags.ReplyParentMessageId MessageTags.ReplyParentUserId MessageTags.ReplyParentUserName MessageTags.ReplyParentDisplayName MessageTags.ReplyParentMessage MessageTags.Nonce MessageTags.Flags MessageTags.IUserRelation.RelatedId MessageTags.IUserRelation.RelatedName MessageTags.IUserRelation.RelatedDisplayName QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class UserNoticeTags : MessageTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source NoticeType The type of notice. Declaration public UserNoticeType NoticeType { get; set; } Property Value Type Description UserNoticeType | Improve this Doc View Source SystemMessage The message Twitch shows in the chat room for this notice. Declaration public string SystemMessage { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides MessageTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides MessageTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.UserNoticeType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.UserNoticeType.html",
    "title": "Enum UserNoticeType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum UserNoticeType Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum UserNoticeType Fields Name Description Announcement BitsBadgeTier Raid Resubscription RewardGift Ritual Subscription SubscriptionGift SubscriptionGiftUpgrade SubscriptionGiftUpgradeAnonymous SubscriptionMysteryGift Unknown Unraid Extension Methods EnumHelper.GetEnumMemberValue<UserNoticeType>(UserNoticeType)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.UserStateEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.UserStateEventArgs.html",
    "title": "Class UserStateEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserStateEventArgs Inheritance object UserStateEventArgs Implements IChatUser IUser IEntity<string> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class UserStateEventArgs : IChatUser, IUser, IEntity<string> Constructors | Improve this Doc View Source UserStateEventArgs(IReadOnlyCollection<string>) Declaration public UserStateEventArgs(IReadOnlyCollection<string> parameters) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description string | Improve this Doc View Source Tags Declaration public UserStateTags Tags { get; set; } Property Value Type Description UserStateTags Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static UserStateEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description UserStateEventArgs Explicit Interface Implementations | Improve this Doc View Source IChatUser.Color Declaration Color? IChatUser.Color { get; } Returns Type Description System.Drawing.Color? | Improve this Doc View Source IEntity<string>.Id Declaration string IEntity<string>.Id { get; } Returns Type Description string | Improve this Doc View Source IUser.DisplayName Declaration string IUser.DisplayName { get; } Returns Type Description string | Improve this Doc View Source IUser.Name Declaration string IUser.Name { get; } Returns Type Description string Implements IChatUser IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.UserStateTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.UserStateTags.html",
    "title": "Class UserStateTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserStateTags Inheritance object QueryMap<string> QueryMap BaseTags GlobalUserStateTags UserStateTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IChatUser IUser IEntity<string> Inherited Members GlobalUserStateTags.UserId GlobalUserStateTags.UserType GlobalUserStateTags.DisplayName GlobalUserStateTags.Color GlobalUserStateTags.Badges GlobalUserStateTags.BadgeInfo GlobalUserStateTags.EmoteSets GlobalUserStateTags.IsTurbo GlobalUserStateTags.IEntity<string>.Id GlobalUserStateTags.IUser.Name GlobalUserStateTags.IChatUser.Color QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class UserStateTags : GlobalUserStateTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IChatUser, IUser, IEntity<string> Properties | Improve this Doc View Source IsModerator Indicates whether the user is a moderator Declaration public bool IsModerator { get; set; } Property Value Type Description bool | Improve this Doc View Source IsSubscriber Indicates whether the user is a subscriber. Declaration public bool IsSubscriber { get; set; } Property Value Type Description bool | Improve this Doc View Source MessageId An ID that uniquely identifies a message, if one was sent. Declaration public string MessageId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides GlobalUserStateTags.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides GlobalUserStateTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IChatUser IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Chat.UserType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.UserType.html",
    "title": "Enum UserType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum UserType Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public enum UserType Fields Name Description Admin GlobalModerator Normal Staff Extension Methods EnumHelper.GetEnumMemberValue<UserType>(UserType)"
  },
  "api/AuxLabs.SimpleTwitch.Chat.WhisperEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.WhisperEventArgs.html",
    "title": "Class WhisperEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WhisperEventArgs Inheritance object WhisperEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class WhisperEventArgs Constructors | Improve this Doc View Source WhisperEventArgs(IrcPrefix?, IReadOnlyCollection<string>) Declaration public WhisperEventArgs(IrcPrefix? prefix, IReadOnlyCollection<string> parameters) Parameters Type Name Description IrcPrefix? prefix System.Collections.Generic.IReadOnlyCollection<T><string> parameters Properties | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source ReceiverName Declaration public string ReceiverName { get; set; } Property Value Type Description string | Improve this Doc View Source SenderName Declaration public string SenderName { get; set; } Property Value Type Description string | Improve this Doc View Source Tags Declaration public WhisperTags Tags { get; set; } Property Value Type Description WhisperTags Methods | Improve this Doc View Source Create(IrcPayload) Declaration public static WhisperEventArgs Create(IrcPayload payload) Parameters Type Name Description IrcPayload payload Returns Type Description WhisperEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.Chat.WhisperTags.html": {
    "href": "api/AuxLabs.SimpleTwitch.Chat.WhisperTags.html",
    "title": "Class WhisperTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WhisperTags Inheritance object QueryMap<string> QueryMap BaseTags WhisperTags Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Chat Assembly: AuxLabs.SimpleTwitch.Chat.dll Syntax public class WhisperTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Properties | Improve this Doc View Source Action The message value when someone uses the /me chat command Declaration public string Action { get; set; } Property Value Type Description string | Improve this Doc View Source Badges A collection of badges the user has. Declaration public IReadOnlyCollection<Badge> Badges { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><Badge> | Improve this Doc View Source Color The color of the user’s name in the chat room. Declaration public Color Color { get; set; } Property Value Type Description System.Drawing.Color | Improve this Doc View Source DisplayName The user’s display name. Declaration public string DisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source Emotes A collection of emotes and their position in the message. Declaration public IReadOnlyCollection<EmotePosition> Emotes { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><EmotePosition> | Improve this Doc View Source Id An ID that uniquely identifies the message. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source IsTurbo Indicates whether the user has site-wide commercial free mode enabled. Declaration public bool IsTurbo { get; set; } Property Value Type Description bool | Improve this Doc View Source ThreadId An ID that uniquely identifies the whisper thread. Declaration public string ThreadId { get; set; } Property Value Type Description string | Improve this Doc View Source UserId The ID of the user that sent the message. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserType The type of user. Declaration public UserType UserType { get; set; } Property Value Type Description UserType Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() | Improve this Doc View Source LoadQueryMap(IReadOnlyDictionary<string, string>) Declaration public override void LoadQueryMap(IReadOnlyDictionary<string, string> map) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, string> map Overrides BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>) Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.EmoteFormat.html": {
    "href": "api/AuxLabs.SimpleTwitch.EmoteFormat.html",
    "title": "Enum EmoteFormat | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteFormat Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax [Flags] public enum EmoteFormat Fields Name Description Animated Static Extension Methods EnumHelper.GetEnumMemberValue<EmoteFormat>(EmoteFormat)"
  },
  "api/AuxLabs.SimpleTwitch.EnumHelper.html": {
    "href": "api/AuxLabs.SimpleTwitch.EnumHelper.html",
    "title": "Class EnumHelper | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EnumHelper Inheritance object EnumHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public static class EnumHelper Methods | Improve this Doc View Source GetEnumMemberValue<T>(T) Declaration public static string GetEnumMemberValue<T>(this T value) where T : Enum Parameters Type Name Description T value Returns Type Description string Type Parameters Name Description T | Improve this Doc View Source GetValueFromEnumMember<T>(string) Declaration public static T GetValueFromEnumMember<T>(string value) where T : Enum Parameters Type Name Description string value Returns Type Description T Type Parameters Name Description T"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.AuthorizationGrantedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.AuthorizationGrantedEventArgs.html",
    "title": "Class AuthorizationGrantedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationGrantedEventArgs Inheritance object AuthorizationGrantedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class AuthorizationGrantedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.AuthorizationRevokedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.AuthorizationRevokedEventArgs.html",
    "title": "Class AuthorizationRevokedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationRevokedEventArgs Inheritance object AuthorizationRevokedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class AuthorizationRevokedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.BanEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.BanEventArgs.html",
    "title": "Class BanEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BanEventArgs Inheritance object BanEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class BanEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.BaseRequest.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.BaseRequest.html",
    "title": "Class BaseRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BaseRequest Inheritance object BaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class BaseRequest Properties | Improve this Doc View Source Condition Declaration public IEventCondition Condition { get; set; } Property Value Type Description IEventCondition | Improve this Doc View Source Transport Declaration public Transport Transport { get; set; } Property Value Type Description Transport | Improve this Doc View Source Type Declaration public string Type { get; set; } Property Value Type Description string | Improve this Doc View Source Version Declaration public string Version { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.BitsTransactionEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.BitsTransactionEventArgs.html",
    "title": "Class BitsTransactionEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsTransactionEventArgs Inheritance object BitsTransactionEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class BitsTransactionEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.CampaignEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.CampaignEndedEventArgs.html",
    "title": "Class CampaignEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignEndedEventArgs Inheritance object CampaignEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class CampaignEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.CampaignProgressEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.CampaignProgressEventArgs.html",
    "title": "Class CampaignProgressEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignProgressEventArgs Inheritance object CampaignProgressEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class CampaignProgressEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.CampaignStartedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.CampaignStartedEventArgs.html",
    "title": "Class CampaignStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignStartedEventArgs Inheritance object CampaignStartedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class CampaignStartedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.ChannelUpdateEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.ChannelUpdateEventArgs.html",
    "title": "Class ChannelUpdateEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelUpdateEventArgs Inheritance object ChannelUpdateEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class ChannelUpdateEventArgs Properties | Improve this Doc View Source BroadcasterDisplayName Declaration public string BroadcasterDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterName Declaration public string BroadcasterName { get; set; } Property Value Type Description string | Improve this Doc View Source CategoryId Declaration public string CategoryId { get; set; } Property Value Type Description string | Improve this Doc View Source CategoryName Declaration public string CategoryName { get; set; } Property Value Type Description string | Improve this Doc View Source IsMature Declaration public bool IsMature { get; set; } Property Value Type Description bool | Improve this Doc View Source Language Declaration public string Language { get; set; } Property Value Type Description string | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.CheerEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.CheerEventArgs.html",
    "title": "Class CheerEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheerEventArgs Inheritance object CheerEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class CheerEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.DonationEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.DonationEventArgs.html",
    "title": "Class DonationEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DonationEventArgs Inheritance object DonationEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class DonationEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.EntitlementGrantEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.EntitlementGrantEventArgs.html",
    "title": "Class EntitlementGrantEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EntitlementGrantEventArgs Inheritance object EntitlementGrantEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class EntitlementGrantEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.EventSubcription.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.EventSubcription.html",
    "title": "Class EventSubcription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubcription Inheritance object EventSubcription Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class EventSubcription Properties | Improve this Doc View Source Conditions Subscription-specific parameters. Declaration public IReadOnlyCollection<IEventCondition> Conditions { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><IEventCondition> | Improve this Doc View Source Cost How much the subscription counts against your limit. Declaration public int Cost { get; set; } Property Value Type Description int | Improve this Doc View Source CreatedAt The time the notification was created. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Id Your client ID. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Status The status of the subscription. Declaration public EventSubStatus Status { get; set; } Property Value Type Description EventSubStatus | Improve this Doc View Source Transport Information about the transport used for this subscription. Declaration public Transport Transport { get; set; } Property Value Type Description Transport | Improve this Doc View Source Type The notification’s subscription type. Declaration public EventSubType Type { get; } Property Value Type Description EventSubType | Improve this Doc View Source TypeRaw The notification’s subscription type in raw string form. Declaration public string TypeRaw { get; set; } Property Value Type Description string | Improve this Doc View Source Version The version of the subscription. Declaration public string Version { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.EventSubPayload-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.EventSubPayload-1.html",
    "title": "Class EventSubPayload<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubPayload<T> Inheritance object EventSubPayload<T> EventSubPayload Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class EventSubPayload<T> Type Parameters Name Description T Properties | Improve this Doc View Source Challenge Declaration public string Challenge { get; set; } Property Value Type Description string | Improve this Doc View Source Event Declaration public T Event { get; set; } Property Value Type Description T | Improve this Doc View Source EventTypeSelector Declaration public static Dictionary<EventSubType, Type> EventTypeSelector { get; } Property Value Type Description System.Collections.Generic.Dictionary<TKey, TValue><EventSubType, System.Type> | Improve this Doc View Source Session Declaration public Session Session { get; set; } Property Value Type Description Session | Improve this Doc View Source Subscription Declaration public EventSubcription Subscription { get; set; } Property Value Type Description EventSubcription"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.EventSubPayload.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.EventSubPayload.html",
    "title": "Class EventSubPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubPayload Inheritance object EventSubPayload<object> EventSubPayload Inherited Members EventSubPayload<object>.Challenge EventSubPayload<object>.Session EventSubPayload<object>.Subscription EventSubPayload<object>.Event EventSubPayload<object>.EventTypeSelector object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class EventSubPayload : EventSubPayload<object>"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload-1.html",
    "title": "Class EventSubWebSocketPayload<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubWebSocketPayload<T> Inheritance object EventSubWebSocketPayload<T> EventSubWebSocketPayload Implements IPayload Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class EventSubWebSocketPayload<T> : IPayload Type Parameters Name Description T Properties | Improve this Doc View Source IsHelloEvent Declaration public bool IsHelloEvent { get; } Property Value Type Description bool | Improve this Doc View Source Metadata An object that identifies the message. Declaration public WebSocketMetadata Metadata { get; set; } Property Value Type Description WebSocketMetadata | Improve this Doc View Source Payload An object that contains the message. Declaration public EventSubPayload<T> Payload { get; set; } Property Value Type Description EventSubPayload<T> Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload.html",
    "title": "Class EventSubWebSocketPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubWebSocketPayload Inheritance object EventSubWebSocketPayload<object> EventSubWebSocketPayload Implements IPayload Inherited Members EventSubWebSocketPayload<object>.IsHelloEvent EventSubWebSocketPayload<object>.Metadata EventSubWebSocketPayload<object>.Payload object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class EventSubWebSocketPayload : EventSubWebSocketPayload<object>, IPayload Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.FollowEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.FollowEventArgs.html",
    "title": "Class FollowEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class FollowEventArgs Inheritance object FollowEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class FollowEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.GoalEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.GoalEndedEventArgs.html",
    "title": "Class GoalEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GoalEndedEventArgs Inheritance object GoalEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class GoalEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.GoalProgressEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.GoalProgressEventArgs.html",
    "title": "Class GoalProgressEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GoalProgressEventArgs Inheritance object GoalProgressEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class GoalProgressEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.GoalStartedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.GoalStartedEventArgs.html",
    "title": "Class GoalStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GoalStartedEventArgs Inheritance object GoalStartedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class GoalStartedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.html",
    "title": "Namespace AuxLabs.SimpleTwitch.EventSub | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.SimpleTwitch.EventSub Classes AuthorizationGrantedEventArgs AuthorizationRevokedEventArgs BanEventArgs BaseRequest BitsTransactionEventArgs CampaignEndedEventArgs CampaignProgressEventArgs CampaignStartedEventArgs ChannelUpdateEventArgs CheerEventArgs DonationEventArgs EntitlementGrantEventArgs EventSubcription EventSubPayload EventSubPayload<T> EventSubWebSocketPayload EventSubWebSocketPayload<T> FollowEventArgs GoalEndedEventArgs GoalProgressEventArgs GoalStartedEventArgs HypeTrainEndedEventArgs HypeTrainProgressEventArgs HypeTrainStartedEventArgs ModeratorAddedEventArgs ModeratorRemovedEventArgs PollEndedEventArgs PollProgressEventArgs PollStartedEventArgs PredictionEndedEventArgs PredictionLockedEventArgs PredictionProgressEventArgs PredictionStartedEventArgs RaidEventArgs RedemptionAddedEvent RedemptionUpdatedEvent RewardAddedEventArgs RewardRemovedEventArgs RewardUpdatedEvent Session ShieldModeEndedEventArgs ShieldModeStartedEventArgs ShoutoutCreatedEventArgs ShoutoutReceivedEventArgs StreamEndedEventArgs StreamStartedEventArgs SubscriptionEndedEventArgs SubscriptionEventArgs SubscriptionGiftedEventArgs SubscriptionMessageEventArgs TwitchEventSubApiClient TwitchEventSubConfig UnbanEventArgs UserUpdatedEventArgs WebSocketMetadata Enums MessageType"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.HypeTrainEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.HypeTrainEndedEventArgs.html",
    "title": "Class HypeTrainEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainEndedEventArgs Inheritance object HypeTrainEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class HypeTrainEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.HypeTrainProgressEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.HypeTrainProgressEventArgs.html",
    "title": "Class HypeTrainProgressEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainProgressEventArgs Inheritance object HypeTrainProgressEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class HypeTrainProgressEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.HypeTrainStartedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.HypeTrainStartedEventArgs.html",
    "title": "Class HypeTrainStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainStartedEventArgs Inheritance object HypeTrainStartedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class HypeTrainStartedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.MessageType.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.MessageType.html",
    "title": "Enum MessageType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum MessageType Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public enum MessageType Fields Name Description KeepAlive Notification Reconnect Revocation Unknown Welcome Extension Methods EnumHelper.GetEnumMemberValue<MessageType>(MessageType)"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.ModeratorAddedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.ModeratorAddedEventArgs.html",
    "title": "Class ModeratorAddedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModeratorAddedEventArgs Inheritance object ModeratorAddedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class ModeratorAddedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.ModeratorRemovedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.ModeratorRemovedEventArgs.html",
    "title": "Class ModeratorRemovedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModeratorRemovedEventArgs Inheritance object ModeratorRemovedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class ModeratorRemovedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.PollEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.PollEndedEventArgs.html",
    "title": "Class PollEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollEndedEventArgs Inheritance object PollEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class PollEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.PollProgressEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.PollProgressEventArgs.html",
    "title": "Class PollProgressEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollProgressEventArgs Inheritance object PollProgressEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class PollProgressEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.PollStartedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.PollStartedEventArgs.html",
    "title": "Class PollStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollStartedEventArgs Inheritance object PollStartedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class PollStartedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.PredictionEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.PredictionEndedEventArgs.html",
    "title": "Class PredictionEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionEndedEventArgs Inheritance object PredictionEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class PredictionEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.PredictionLockedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.PredictionLockedEventArgs.html",
    "title": "Class PredictionLockedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionLockedEventArgs Inheritance object PredictionLockedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class PredictionLockedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.PredictionProgressEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.PredictionProgressEventArgs.html",
    "title": "Class PredictionProgressEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionProgressEventArgs Inheritance object PredictionProgressEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class PredictionProgressEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.PredictionStartedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.PredictionStartedEventArgs.html",
    "title": "Class PredictionStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionStartedEventArgs Inheritance object PredictionStartedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class PredictionStartedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.RaidEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.RaidEventArgs.html",
    "title": "Class RaidEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RaidEventArgs Inheritance object RaidEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class RaidEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.RedemptionAddedEvent.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.RedemptionAddedEvent.html",
    "title": "Class RedemptionAddedEvent | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RedemptionAddedEvent Inheritance object RedemptionAddedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class RedemptionAddedEvent"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.RedemptionUpdatedEvent.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.RedemptionUpdatedEvent.html",
    "title": "Class RedemptionUpdatedEvent | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RedemptionUpdatedEvent Inheritance object RedemptionUpdatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class RedemptionUpdatedEvent"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.RewardAddedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.RewardAddedEventArgs.html",
    "title": "Class RewardAddedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardAddedEventArgs Inheritance object RewardAddedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class RewardAddedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.RewardRemovedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.RewardRemovedEventArgs.html",
    "title": "Class RewardRemovedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardRemovedEventArgs Inheritance object RewardRemovedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class RewardRemovedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.RewardUpdatedEvent.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.RewardUpdatedEvent.html",
    "title": "Class RewardUpdatedEvent | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardUpdatedEvent Inheritance object RewardUpdatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class RewardUpdatedEvent"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.Session.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.Session.html",
    "title": "Class Session | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Session Inheritance object Session Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class Session Properties | Improve this Doc View Source ConnectedAt The UTC date and time that the connection was created. Declaration public DateTime ConnectedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Id An ID that uniquely identifies this WebSocket connection. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source KeepaliveTimeoutSeconds The maximum number of seconds that you should expect silence before receiving a keepalive message. Declaration public int? KeepaliveTimeoutSeconds { get; set; } Property Value Type Description int? | Improve this Doc View Source ReconnectUrl The URL to reconnect to if you get a Reconnect message. Declaration public string ReconnectUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Status The connection’s status. Declaration public string Status { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.ShieldModeEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.ShieldModeEndedEventArgs.html",
    "title": "Class ShieldModeEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldModeEndedEventArgs Inheritance object ShieldModeEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class ShieldModeEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.ShieldModeStartedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.ShieldModeStartedEventArgs.html",
    "title": "Class ShieldModeStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldModeStartedEventArgs Inheritance object ShieldModeStartedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class ShieldModeStartedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.ShoutoutCreatedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.ShoutoutCreatedEventArgs.html",
    "title": "Class ShoutoutCreatedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShoutoutCreatedEventArgs Inheritance object ShoutoutCreatedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class ShoutoutCreatedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.ShoutoutReceivedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.ShoutoutReceivedEventArgs.html",
    "title": "Class ShoutoutReceivedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShoutoutReceivedEventArgs Inheritance object ShoutoutReceivedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class ShoutoutReceivedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.StreamEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.StreamEndedEventArgs.html",
    "title": "Class StreamEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class StreamEndedEventArgs Inheritance object StreamEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class StreamEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.StreamStartedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.StreamStartedEventArgs.html",
    "title": "Class StreamStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class StreamStartedEventArgs Inheritance object StreamStartedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class StreamStartedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionEndedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionEndedEventArgs.html",
    "title": "Class SubscriptionEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionEndedEventArgs Inheritance object SubscriptionEndedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class SubscriptionEndedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionEventArgs.html",
    "title": "Class SubscriptionEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionEventArgs Inheritance object SubscriptionEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class SubscriptionEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionGiftedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionGiftedEventArgs.html",
    "title": "Class SubscriptionGiftedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftedEventArgs Inheritance object SubscriptionGiftedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class SubscriptionGiftedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionMessageEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.SubscriptionMessageEventArgs.html",
    "title": "Class SubscriptionMessageEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionMessageEventArgs Inheritance object SubscriptionMessageEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class SubscriptionMessageEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.TwitchEventSubApiClient.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.TwitchEventSubApiClient.html",
    "title": "Class TwitchEventSubApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchEventSubApiClient Inheritance object BaseSocketClient<EventSubWebSocketPayload> TwitchEventSubApiClient Inherited Members BaseSocketClient<EventSubWebSocketPayload>.Connected BaseSocketClient<EventSubWebSocketPayload>.Disconnected BaseSocketClient<EventSubWebSocketPayload>.DeserializationError BaseSocketClient<EventSubWebSocketPayload>.UnknownEventReceived BaseSocketClient<EventSubWebSocketPayload>.PayloadReceived BaseSocketClient<EventSubWebSocketPayload>.PayloadSent BaseSocketClient<EventSubWebSocketPayload>.State BaseSocketClient<EventSubWebSocketPayload>.ReceivedData BaseSocketClient<EventSubWebSocketPayload>.OnUnknownEventReceived(EventSubWebSocketPayload) BaseSocketClient<EventSubWebSocketPayload>.SendIdentify() BaseSocketClient<EventSubWebSocketPayload>.Run(string) BaseSocketClient<EventSubWebSocketPayload>.RunAsync(string) BaseSocketClient<EventSubWebSocketPayload>.Stop() BaseSocketClient<EventSubWebSocketPayload>.StopAsync() BaseSocketClient<EventSubWebSocketPayload>.Dispose() BaseSocketClient<EventSubWebSocketPayload>.Send(EventSubWebSocketPayload) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class TwitchEventSubApiClient : BaseSocketClient<EventSubWebSocketPayload> Constructors | Improve this Doc View Source TwitchEventSubApiClient(TwitchEventSubConfig) Declaration public TwitchEventSubApiClient(TwitchEventSubConfig config = null) Parameters Type Name Description TwitchEventSubConfig config | Improve this Doc View Source TwitchEventSubApiClient(string, TwitchEventSubConfig) Declaration public TwitchEventSubApiClient(string url, TwitchEventSubConfig config = null) Parameters Type Name Description string url TwitchEventSubConfig config Fields | Improve this Doc View Source ThrowOnUnknownEvent Declaration public readonly bool ThrowOnUnknownEvent Field Value Type Description bool Properties | Improve this Doc View Source Serializer Declaration protected override ISerializer<EventSubWebSocketPayload> Serializer { get; } Property Value Type Description ISerializer<EventSubWebSocketPayload> Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload>.Serializer | Improve this Doc View Source Session Declaration public Session Session { get; protected set; } Property Value Type Description Session Methods | Improve this Doc View Source HandleEvent(EventSubWebSocketPayload, TaskCompletionSource<bool>) Declaration protected override void HandleEvent(EventSubWebSocketPayload payload, TaskCompletionSource<bool> readySignal) Parameters Type Name Description EventSubWebSocketPayload payload System.Threading.Tasks.TaskCompletionSource<TResult><bool> readySignal Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload>.HandleEvent(AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload, System.Threading.Tasks.TaskCompletionSource<bool>) | Improve this Doc View Source Run() Declaration public override void Run() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload>.Run() | Improve this Doc View Source RunAsync() Declaration public override Task RunAsync() Returns Type Description System.Threading.Tasks.Task Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload>.RunAsync() | Improve this Doc View Source SendHeartbeat() Declaration protected override void SendHeartbeat() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload>.SendHeartbeat() | Improve this Doc View Source SendHeartbeatAck() Declaration protected override void SendHeartbeatAck() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.EventSub.EventSubWebSocketPayload>.SendHeartbeatAck() Events | Improve this Doc View Source AuthorizationGranted Declaration public event Action<AuthorizationGrantedEventArgs, EventSubcription> AuthorizationGranted Event Type Type Description System.Action<T1, T2><AuthorizationGrantedEventArgs, EventSubcription> | Improve this Doc View Source AuthorizationRevoked Declaration public event Action<AuthorizationRevokedEventArgs, EventSubcription> AuthorizationRevoked Event Type Type Description System.Action<T1, T2><AuthorizationRevokedEventArgs, EventSubcription> | Improve this Doc View Source BitsCheered Declaration public event Action<CheerEventArgs, EventSubcription> BitsCheered Event Type Type Description System.Action<T1, T2><CheerEventArgs, EventSubcription> | Improve this Doc View Source BitsTransactionCreated Declaration public event Action<BitsTransactionEventArgs, EventSubcription> BitsTransactionCreated Event Type Type Description System.Action<T1, T2><BitsTransactionEventArgs, EventSubcription> | Improve this Doc View Source ChannelFollow Declaration public event Action<FollowEventArgs, EventSubcription> ChannelFollow Event Type Type Description System.Action<T1, T2><FollowEventArgs, EventSubcription> | Improve this Doc View Source ChannelRaided Declaration public event Action<RaidEventArgs, EventSubcription> ChannelRaided Event Type Type Description System.Action<T1, T2><RaidEventArgs, EventSubcription> | Improve this Doc View Source ChannelUpdated Declaration public event Action<ChannelUpdateEventArgs, EventSubcription> ChannelUpdated Event Type Type Description System.Action<T1, T2><ChannelUpdateEventArgs, EventSubcription> | Improve this Doc View Source CharityCampaignProgress Declaration public event Action<CampaignProgressEventArgs, EventSubcription> CharityCampaignProgress Event Type Type Description System.Action<T1, T2><CampaignProgressEventArgs, EventSubcription> | Improve this Doc View Source CharityCampaignStarted Declaration public event Action<CampaignStartedEventArgs, EventSubcription> CharityCampaignStarted Event Type Type Description System.Action<T1, T2><CampaignStartedEventArgs, EventSubcription> | Improve this Doc View Source CharityCampaignStopped Declaration public event Action<CampaignEndedEventArgs, EventSubcription> CharityCampaignStopped Event Type Type Description System.Action<T1, T2><CampaignEndedEventArgs, EventSubcription> | Improve this Doc View Source CharityDonation Declaration public event Action<DonationEventArgs, EventSubcription> CharityDonation Event Type Type Description System.Action<T1, T2><DonationEventArgs, EventSubcription> | Improve this Doc View Source DropEntitlementGranted Declaration public event Action<EntitlementGrantEventArgs, EventSubcription> DropEntitlementGranted Event Type Type Description System.Action<T1, T2><EntitlementGrantEventArgs, EventSubcription> | Improve this Doc View Source GoalEnded Declaration public event Action<GoalEndedEventArgs, EventSubcription> GoalEnded Event Type Type Description System.Action<T1, T2><GoalEndedEventArgs, EventSubcription> | Improve this Doc View Source GoalProgress Declaration public event Action<GoalProgressEventArgs, EventSubcription> GoalProgress Event Type Type Description System.Action<T1, T2><GoalProgressEventArgs, EventSubcription> | Improve this Doc View Source GoalStarted Declaration public event Action<GoalStartedEventArgs, EventSubcription> GoalStarted Event Type Type Description System.Action<T1, T2><GoalStartedEventArgs, EventSubcription> | Improve this Doc View Source HypeTrainEnded Declaration public event Action<HypeTrainEndedEventArgs, EventSubcription> HypeTrainEnded Event Type Type Description System.Action<T1, T2><HypeTrainEndedEventArgs, EventSubcription> | Improve this Doc View Source HypeTrainProgress Declaration public event Action<HypeTrainProgressEventArgs, EventSubcription> HypeTrainProgress Event Type Type Description System.Action<T1, T2><HypeTrainProgressEventArgs, EventSubcription> | Improve this Doc View Source HypeTrainStarted Declaration public event Action<HypeTrainStartedEventArgs, EventSubcription> HypeTrainStarted Event Type Type Description System.Action<T1, T2><HypeTrainStartedEventArgs, EventSubcription> | Improve this Doc View Source LoggedIn Triggered when the server provides a login session. Declaration public event Action<Session> LoggedIn Event Type Type Description System.Action<T><Session> | Improve this Doc View Source ModeratorAdded Declaration public event Action<ModeratorAddedEventArgs, EventSubcription> ModeratorAdded Event Type Type Description System.Action<T1, T2><ModeratorAddedEventArgs, EventSubcription> | Improve this Doc View Source ModeratorRemoved Declaration public event Action<ModeratorRemovedEventArgs, EventSubcription> ModeratorRemoved Event Type Type Description System.Action<T1, T2><ModeratorRemovedEventArgs, EventSubcription> | Improve this Doc View Source PollEnded Declaration public event Action<PollEndedEventArgs, EventSubcription> PollEnded Event Type Type Description System.Action<T1, T2><PollEndedEventArgs, EventSubcription> | Improve this Doc View Source PollProgress Declaration public event Action<PollProgressEventArgs, EventSubcription> PollProgress Event Type Type Description System.Action<T1, T2><PollProgressEventArgs, EventSubcription> | Improve this Doc View Source PollStarted Declaration public event Action<PollStartedEventArgs, EventSubcription> PollStarted Event Type Type Description System.Action<T1, T2><PollStartedEventArgs, EventSubcription> | Improve this Doc View Source PredictionEnded Declaration public event Action<PredictionEndedEventArgs, EventSubcription> PredictionEnded Event Type Type Description System.Action<T1, T2><PredictionEndedEventArgs, EventSubcription> | Improve this Doc View Source PredictionLocked Declaration public event Action<PredictionLockedEventArgs, EventSubcription> PredictionLocked Event Type Type Description System.Action<T1, T2><PredictionLockedEventArgs, EventSubcription> | Improve this Doc View Source PredictionProgress Declaration public event Action<PredictionProgressEventArgs, EventSubcription> PredictionProgress Event Type Type Description System.Action<T1, T2><PredictionProgressEventArgs, EventSubcription> | Improve this Doc View Source PredictionStarted Declaration public event Action<PredictionStartedEventArgs, EventSubcription> PredictionStarted Event Type Type Description System.Action<T1, T2><PredictionStartedEventArgs, EventSubcription> | Improve this Doc View Source RedemptionAdded Declaration public event Action<RedemptionAddedEvent, EventSubcription> RedemptionAdded Event Type Type Description System.Action<T1, T2><RedemptionAddedEvent, EventSubcription> | Improve this Doc View Source RedemptionUpdated Declaration public event Action<RedemptionUpdatedEvent, EventSubcription> RedemptionUpdated Event Type Type Description System.Action<T1, T2><RedemptionUpdatedEvent, EventSubcription> | Improve this Doc View Source RewardAdded Declaration public event Action<RewardAddedEventArgs, EventSubcription> RewardAdded Event Type Type Description System.Action<T1, T2><RewardAddedEventArgs, EventSubcription> | Improve this Doc View Source RewardRemoved Declaration public event Action<RewardRemovedEventArgs, EventSubcription> RewardRemoved Event Type Type Description System.Action<T1, T2><RewardRemovedEventArgs, EventSubcription> | Improve this Doc View Source RewardUpdated Declaration public event Action<RewardUpdatedEvent, EventSubcription> RewardUpdated Event Type Type Description System.Action<T1, T2><RewardUpdatedEvent, EventSubcription> | Improve this Doc View Source ShieldModeEnded Declaration public event Action<ShieldModeEndedEventArgs, EventSubcription> ShieldModeEnded Event Type Type Description System.Action<T1, T2><ShieldModeEndedEventArgs, EventSubcription> | Improve this Doc View Source ShieldModeStarted Declaration public event Action<ShieldModeStartedEventArgs, EventSubcription> ShieldModeStarted Event Type Type Description System.Action<T1, T2><ShieldModeStartedEventArgs, EventSubcription> | Improve this Doc View Source ShoutoutCreated Declaration public event Action<ShoutoutCreatedEventArgs, EventSubcription> ShoutoutCreated Event Type Type Description System.Action<T1, T2><ShoutoutCreatedEventArgs, EventSubcription> | Improve this Doc View Source ShoutoutReceived Declaration public event Action<ShoutoutReceivedEventArgs, EventSubcription> ShoutoutReceived Event Type Type Description System.Action<T1, T2><ShoutoutReceivedEventArgs, EventSubcription> | Improve this Doc View Source StreamEnded Declaration public event Action<StreamEndedEventArgs, EventSubcription> StreamEnded Event Type Type Description System.Action<T1, T2><StreamEndedEventArgs, EventSubcription> | Improve this Doc View Source StreamStarted Declaration public event Action<StreamStartedEventArgs, EventSubcription> StreamStarted Event Type Type Description System.Action<T1, T2><StreamStartedEventArgs, EventSubcription> | Improve this Doc View Source Subscription Declaration public event Action<SubscriptionEventArgs, EventSubcription> Subscription Event Type Type Description System.Action<T1, T2><SubscriptionEventArgs, EventSubcription> | Improve this Doc View Source SubscriptionEnd Declaration public event Action<SubscriptionEndedEventArgs, EventSubcription> SubscriptionEnd Event Type Type Description System.Action<T1, T2><SubscriptionEndedEventArgs, EventSubcription> | Improve this Doc View Source SubscriptionGifted Declaration public event Action<SubscriptionGiftedEventArgs, EventSubcription> SubscriptionGifted Event Type Type Description System.Action<T1, T2><SubscriptionGiftedEventArgs, EventSubcription> | Improve this Doc View Source SubscriptionMessage Declaration public event Action<SubscriptionMessageEventArgs, EventSubcription> SubscriptionMessage Event Type Type Description System.Action<T1, T2><SubscriptionMessageEventArgs, EventSubcription> | Improve this Doc View Source UserBanned Declaration public event Action<BanEventArgs, EventSubcription> UserBanned Event Type Type Description System.Action<T1, T2><BanEventArgs, EventSubcription> | Improve this Doc View Source UserUnbanned Declaration public event Action<UnbanEventArgs, EventSubcription> UserUnbanned Event Type Type Description System.Action<T1, T2><UnbanEventArgs, EventSubcription> | Improve this Doc View Source UserUpdated Declaration public event Action<UserUpdatedEventArgs, EventSubcription> UserUpdated Event Type Type Description System.Action<T1, T2><UserUpdatedEventArgs, EventSubcription>"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.TwitchEventSubConfig.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.TwitchEventSubConfig.html",
    "title": "Class TwitchEventSubConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchEventSubConfig Inheritance object TwitchEventSubConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class TwitchEventSubConfig Properties | Improve this Doc View Source Serializer Specify a custom serializer for eventsub json messages. Declaration public ISerializer<EventSubWebSocketPayload> Serializer { get; set; } Property Value Type Description ISerializer<EventSubWebSocketPayload> | Improve this Doc View Source ThrowOnUnknownEvent Should an exception be raised if an unhandled event is received from twitch. Declaration public bool ThrowOnUnknownEvent { get; set; } Property Value Type Description bool"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.UnbanEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.UnbanEventArgs.html",
    "title": "Class UnbanEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UnbanEventArgs Inheritance object UnbanEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class UnbanEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.UserUpdatedEventArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.UserUpdatedEventArgs.html",
    "title": "Class UserUpdatedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserUpdatedEventArgs Inheritance object UserUpdatedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class UserUpdatedEventArgs"
  },
  "api/AuxLabs.SimpleTwitch.EventSub.WebSocketMetadata.html": {
    "href": "api/AuxLabs.SimpleTwitch.EventSub.WebSocketMetadata.html",
    "title": "Class WebSocketMetadata | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WebSocketMetadata Inheritance object WebSocketMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.EventSub Assembly: AuxLabs.SimpleTwitch.EventSub.dll Syntax public class WebSocketMetadata Properties | Improve this Doc View Source Id An ID that uniquely identifies the message. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source SubscriptionType The type of event sent in the message. Declaration public string SubscriptionType { get; set; } Property Value Type Description string | Improve this Doc View Source SubscriptionVersion The version number of the subscription type’s definition. This is the same value specified in the subscription request. Declaration public string SubscriptionVersion { get; set; } Property Value Type Description string | Improve this Doc View Source Timestamp The UTC date and time that the message was sent. Declaration public DateTime Timestamp { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Type The type of message. Declaration public MessageType Type { get; } Property Value Type Description MessageType | Improve this Doc View Source TypeRaw The type of message, in a raw string format. Declaration public string TypeRaw { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.html": {
    "href": "api/AuxLabs.SimpleTwitch.html",
    "title": "Namespace AuxLabs.SimpleTwitch | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.SimpleTwitch Classes EnumHelper HttpException MissingScopeException QueryMap QueryMap<T> RateLimitedException TwitchConstants TwitchException UnexpectedTagsException WebSocketClosedException Interfaces IChannel IChannelInfo IEntity<TId> IUser IUserInfo IUserRelation Enums EmoteFormat"
  },
  "api/AuxLabs.SimpleTwitch.HttpException.html": {
    "href": "api/AuxLabs.SimpleTwitch.HttpException.html",
    "title": "Class HttpException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HttpException Inheritance object System.Exception HttpException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public class HttpException : Exception, ISerializable Constructors | Improve this Doc View Source HttpException(HttpStatusCode, string) Declaration public HttpException(HttpStatusCode httpCode, string reason = null) Parameters Type Name Description System.Net.HttpStatusCode httpCode string reason Properties | Improve this Doc View Source HttpCode Declaration public HttpStatusCode HttpCode { get; } Property Value Type Description System.Net.HttpStatusCode | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description string Implements System.Runtime.Serialization.ISerializable"
  },
  "api/AuxLabs.SimpleTwitch.IChannel.html": {
    "href": "api/AuxLabs.SimpleTwitch.IChannel.html",
    "title": "Interface IChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IChannel Inherited Members IEntity<string>.Id Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public interface IChannel : IEntity<string> Properties | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.IChannelInfo.html": {
    "href": "api/AuxLabs.SimpleTwitch.IChannelInfo.html",
    "title": "Interface IChannelInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IChannelInfo Inherited Members IChannel.Name IEntity<string>.Id Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public interface IChannelInfo : IChannel, IEntity<string>"
  },
  "api/AuxLabs.SimpleTwitch.IEntity-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.IEntity-1.html",
    "title": "Interface IEntity<TId> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IEntity<TId> Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public interface IEntity<TId> Type Parameters Name Description TId Properties | Improve this Doc View Source Id Declaration TId Id { get; } Property Value Type Description TId"
  },
  "api/AuxLabs.SimpleTwitch.IUser.html": {
    "href": "api/AuxLabs.SimpleTwitch.IUser.html",
    "title": "Interface IUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUser Inherited Members IEntity<string>.Id Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public interface IUser : IEntity<string> Properties | Improve this Doc View Source DisplayName Declaration string DisplayName { get; } Property Value Type Description string | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.IUserInfo.html": {
    "href": "api/AuxLabs.SimpleTwitch.IUserInfo.html",
    "title": "Interface IUserInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUserInfo Inherited Members IUser.Name IUser.DisplayName IEntity<string>.Id Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public interface IUserInfo : IUser, IEntity<string>"
  },
  "api/AuxLabs.SimpleTwitch.IUserRelation.html": {
    "href": "api/AuxLabs.SimpleTwitch.IUserRelation.html",
    "title": "Interface IUserRelation | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUserRelation Inherited Members IUser.Name IUser.DisplayName IEntity<string>.Id Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public interface IUserRelation : IUser, IEntity<string> Properties | Improve this Doc View Source RelatedDisplayName Declaration string RelatedDisplayName { get; } Property Value Type Description string | Improve this Doc View Source RelatedId Declaration string RelatedId { get; } Property Value Type Description string | Improve this Doc View Source RelatedName Declaration string RelatedName { get; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.MissingScopeException.html": {
    "href": "api/AuxLabs.SimpleTwitch.MissingScopeException.html",
    "title": "Class MissingScopeException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MissingScopeException Inheritance object System.Exception TwitchException MissingScopeException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public class MissingScopeException : TwitchException, ISerializable Constructors | Improve this Doc View Source MissingScopeException(params string[]) Declaration public MissingScopeException(params string[] scopes) Parameters Type Name Description string[] scopes Implements System.Runtime.Serialization.ISerializable"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.html",
    "title": "Namespace AuxLabs.SimpleTwitch.PubSub | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.SimpleTwitch.PubSub Classes PubSubPayload PubSubPayload<TPayload> PubSubRequest PubSubResponse TwitchPubSubApiClient TwitchPubSubApiConfig Structs PubSubTopic Enums PubSubPayloadType PubSubTopicType"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.PubSubPayload-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.PubSubPayload-1.html",
    "title": "Class PubSubPayload<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubPayload<TPayload> Inheritance object PubSubPayload<TPayload> PubSubPayload Implements IPayload Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public class PubSubPayload<TPayload> : IPayload Type Parameters Name Description TPayload Properties | Improve this Doc View Source Data Declaration public TPayload Data { get; set; } Property Value Type Description TPayload | Improve this Doc View Source Error Declaration public string Error { get; set; } Property Value Type Description string | Improve this Doc View Source IsHelloEvent Declaration public bool IsHelloEvent { get; } Property Value Type Description bool | Improve this Doc View Source Nonce Declaration public string Nonce { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration public PubSubPayloadType Type { get; set; } Property Value Type Description PubSubPayloadType Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.PubSubPayload.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.PubSubPayload.html",
    "title": "Class PubSubPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubPayload Inheritance object PubSubPayload<PubSubResponse> PubSubPayload Implements IPayload Inherited Members PubSubPayload<PubSubResponse>.IsHelloEvent PubSubPayload<PubSubResponse>.Type PubSubPayload<PubSubResponse>.Nonce PubSubPayload<PubSubResponse>.Error PubSubPayload<PubSubResponse>.Data object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public class PubSubPayload : PubSubPayload<PubSubResponse>, IPayload Implements IPayload"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.PubSubPayloadType.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.PubSubPayloadType.html",
    "title": "Enum PubSubPayloadType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum PubSubPayloadType Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public enum PubSubPayloadType Fields Name Description Listen Message Response Unknown Unlisten Extension Methods EnumHelper.GetEnumMemberValue<PubSubPayloadType>(PubSubPayloadType)"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.PubSubRequest.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.PubSubRequest.html",
    "title": "Class PubSubRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubRequest Inheritance object PubSubRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public class PubSubRequest Properties | Improve this Doc View Source Token Declaration public string Token { get; set; } Property Value Type Description string | Improve this Doc View Source Topics Declaration public List<PubSubTopic> Topics { get; set; } Property Value Type Description System.Collections.Generic.List<T><PubSubTopic>"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.PubSubResponse.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.PubSubResponse.html",
    "title": "Class PubSubResponse | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubResponse Inheritance object PubSubResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public class PubSubResponse Properties | Improve this Doc View Source MessageData Declaration public string MessageData { get; set; } Property Value Type Description string | Improve this Doc View Source Topic Declaration public PubSubTopic Topic { get; set; } Property Value Type Description PubSubTopic"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.PubSubTopic.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.PubSubTopic.html",
    "title": "Struct PubSubTopic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct PubSubTopic Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public readonly struct PubSubTopic Constructors | Improve this Doc View Source PubSubTopic(string) Declaration public PubSubTopic(string topic) Parameters Type Name Description string topic Properties | Improve this Doc View Source Ids Declaration public IReadOnlyCollection<string> Ids { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><string> | Improve this Doc View Source Type Declaration public PubSubTopicType Type { get; } Property Value Type Description PubSubTopicType Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides System.ValueType.ToString()"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.PubSubTopicType.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.PubSubTopicType.html",
    "title": "Enum PubSubTopicType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum PubSubTopicType Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public enum PubSubTopicType Fields Name Description AutoModQueue AutoMod flags a message as potentially inappropriate, and when a moderator takes action on a message. BitsBadgeUnlocks Message sent when a user earns a new Bits badge in a particular channel, and chooses to share the notification with chat. BitsV1 Anyone cheers in a specified channel. BitsV2 Anyone cheers in a specified channel. ChannelPointRedemptions A custom reward is redeemed in a channel. ChannelSubscriptions Anyone subscribes (first month), resubscribes (subsequent months), or gifts a subscription to a channel. LowTrustUserStatus The broadcaster or a moderator updates the low trust status of a user, or a new message has been sent in chat by a potential ban evader or a bans shared user. ModerationNotifications A user’s message held by AutoMod has been approved or denied. ModeratorActions Examples of moderator actions are bans, unbans, timeouts, deleting messages, changing chat mode (followers-only, subs-only), changing AutoMod levels, and adding a mod. Unknown Whispers Anyone whispers the specified user. Extension Methods EnumHelper.GetEnumMemberValue<PubSubTopicType>(PubSubTopicType)"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.TwitchPubSubApiClient.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.TwitchPubSubApiClient.html",
    "title": "Class TwitchPubSubApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchPubSubApiClient Inheritance object BaseSocketClient<PubSubPayload> TwitchPubSubApiClient Inherited Members BaseSocketClient<PubSubPayload>.Connected BaseSocketClient<PubSubPayload>.Disconnected BaseSocketClient<PubSubPayload>.DeserializationError BaseSocketClient<PubSubPayload>.UnknownEventReceived BaseSocketClient<PubSubPayload>.PayloadReceived BaseSocketClient<PubSubPayload>.PayloadSent BaseSocketClient<PubSubPayload>.State BaseSocketClient<PubSubPayload>.ReceivedData BaseSocketClient<PubSubPayload>.OnUnknownEventReceived(PubSubPayload) BaseSocketClient<PubSubPayload>.SendIdentify() BaseSocketClient<PubSubPayload>.Run(string) BaseSocketClient<PubSubPayload>.RunAsync(string) BaseSocketClient<PubSubPayload>.Stop() BaseSocketClient<PubSubPayload>.StopAsync() BaseSocketClient<PubSubPayload>.Dispose() BaseSocketClient<PubSubPayload>.Send(PubSubPayload) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public class TwitchPubSubApiClient : BaseSocketClient<PubSubPayload> Constructors | Improve this Doc View Source TwitchPubSubApiClient(TwitchPubSubApiConfig) Declaration public TwitchPubSubApiClient(TwitchPubSubApiConfig config = null) Parameters Type Name Description TwitchPubSubApiConfig config | Improve this Doc View Source TwitchPubSubApiClient(string, TwitchPubSubApiConfig) Declaration public TwitchPubSubApiClient(string url, TwitchPubSubApiConfig config = null) Parameters Type Name Description string url TwitchPubSubApiConfig config Properties | Improve this Doc View Source Serializer Declaration protected override ISerializer<PubSubPayload> Serializer { get; } Property Value Type Description ISerializer<PubSubPayload> Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.PubSub.PubSubPayload>.Serializer Methods | Improve this Doc View Source HandleEvent(PubSubPayload, TaskCompletionSource<bool>) Declaration protected override void HandleEvent(PubSubPayload payload, TaskCompletionSource<bool> readySignal) Parameters Type Name Description PubSubPayload payload System.Threading.Tasks.TaskCompletionSource<TResult><bool> readySignal Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.PubSub.PubSubPayload>.HandleEvent(AuxLabs.SimpleTwitch.PubSub.PubSubPayload, System.Threading.Tasks.TaskCompletionSource<bool>) | Improve this Doc View Source Run() Declaration public override void Run() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.PubSub.PubSubPayload>.Run() | Improve this Doc View Source RunAsync() Declaration public override Task RunAsync() Returns Type Description System.Threading.Tasks.Task Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.PubSub.PubSubPayload>.RunAsync() | Improve this Doc View Source SendHeartbeat() Declaration protected override void SendHeartbeat() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.PubSub.PubSubPayload>.SendHeartbeat() | Improve this Doc View Source SendHeartbeatAck() Declaration protected override void SendHeartbeatAck() Overrides AuxLabs.SimpleTwitch.Sockets.BaseSocketClient<AuxLabs.SimpleTwitch.PubSub.PubSubPayload>.SendHeartbeatAck()"
  },
  "api/AuxLabs.SimpleTwitch.PubSub.TwitchPubSubApiConfig.html": {
    "href": "api/AuxLabs.SimpleTwitch.PubSub.TwitchPubSubApiConfig.html",
    "title": "Class TwitchPubSubApiConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchPubSubApiConfig Inheritance object TwitchPubSubApiConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.PubSub Assembly: AuxLabs.SimpleTwitch.PubSub.dll Syntax public class TwitchPubSubApiConfig Properties | Improve this Doc View Source Serializer Declaration public ISerializer<PubSubPayload> Serializer { get; set; } Property Value Type Description ISerializer<PubSubPayload>"
  },
  "api/AuxLabs.SimpleTwitch.QueryMap-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.QueryMap-1.html",
    "title": "Class QueryMap<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class QueryMap<T> Inheritance object QueryMap<T> QueryMap DeleteVideosArgs GetBannedUsersArgs GetChannelsArgs GetClipsArgs GetEmoteSetsArgs GetExtensionTransactionsArgs GetRedemptionsArgs GetRewardArgs GetUserColorArgs GetUsersArgs GetVideosArgs ModifyRedemptionsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, T> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, T>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, T>> System.Collections.IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public abstract class QueryMap<T> : IDictionary<string, T>, ICollection<KeyValuePair<string, T>>, IEnumerable<KeyValuePair<string, T>>, IEnumerable Type Parameters Name Description T Methods | Improve this Doc View Source CreateQueryMap() Declaration public abstract IDictionary<string, T> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, T> Explicit Interface Implementations | Improve this Doc View Source ICollection<KeyValuePair<string, T>>.Add(KeyValuePair<string, T>) Declaration void ICollection<KeyValuePair<string, T>>.Add(KeyValuePair<string, T> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair<TKey, TValue><string, T> item | Improve this Doc View Source ICollection<KeyValuePair<string, T>>.Clear() Declaration void ICollection<KeyValuePair<string, T>>.Clear() | Improve this Doc View Source ICollection<KeyValuePair<string, T>>.Contains(KeyValuePair<string, T>) Declaration bool ICollection<KeyValuePair<string, T>>.Contains(KeyValuePair<string, T> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair<TKey, TValue><string, T> item Returns Type Description bool | Improve this Doc View Source ICollection<KeyValuePair<string, T>>.CopyTo(KeyValuePair<string, T>[], int) Declaration void ICollection<KeyValuePair<string, T>>.CopyTo(KeyValuePair<string, T>[] array, int arrayIndex) Parameters Type Name Description System.Collections.Generic.KeyValuePair<TKey, TValue><string, T>[] array int arrayIndex | Improve this Doc View Source ICollection<KeyValuePair<string, T>>.Count Declaration int ICollection<KeyValuePair<string, T>>.Count { get; } Returns Type Description int | Improve this Doc View Source ICollection<KeyValuePair<string, T>>.IsReadOnly Declaration bool ICollection<KeyValuePair<string, T>>.IsReadOnly { get; } Returns Type Description bool | Improve this Doc View Source ICollection<KeyValuePair<string, T>>.Remove(KeyValuePair<string, T>) Declaration bool ICollection<KeyValuePair<string, T>>.Remove(KeyValuePair<string, T> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair<TKey, TValue><string, T> item Returns Type Description bool | Improve this Doc View Source IDictionary<string, T>.Add(string, T) Declaration void IDictionary<string, T>.Add(string key, T value) Parameters Type Name Description string key T value | Improve this Doc View Source IDictionary<string, T>.ContainsKey(string) Declaration bool IDictionary<string, T>.ContainsKey(string key) Parameters Type Name Description string key Returns Type Description bool | Improve this Doc View Source IDictionary<string, T>.this[string] Declaration T IDictionary<string, T>.this[string key] { get; set; } Parameters Type Name Description string key Returns Type Description T | Improve this Doc View Source IDictionary<string, T>.Keys Declaration ICollection<string> IDictionary<string, T>.Keys { get; } Returns Type Description System.Collections.Generic.ICollection<T><string> | Improve this Doc View Source IDictionary<string, T>.Remove(string) Declaration bool IDictionary<string, T>.Remove(string key) Parameters Type Name Description string key Returns Type Description bool | Improve this Doc View Source IDictionary<string, T>.TryGetValue(string, out T) Declaration bool IDictionary<string, T>.TryGetValue(string key, out T value) Parameters Type Name Description string key T value Returns Type Description bool | Improve this Doc View Source IDictionary<string, T>.Values Declaration ICollection<T> IDictionary<string, T>.Values { get; } Returns Type Description System.Collections.Generic.ICollection<T><T> | Improve this Doc View Source IEnumerable<KeyValuePair<string, T>>.GetEnumerator() Declaration IEnumerator<KeyValuePair<string, T>> IEnumerable<KeyValuePair<string, T>>.GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, T>> | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.QueryMap.html": {
    "href": "api/AuxLabs.SimpleTwitch.QueryMap.html",
    "title": "Class QueryMap | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class QueryMap Inheritance object QueryMap<string> QueryMap BaseTags GetAnalyticsArgs GetAutomodSettingsArgs GetBitsLeaderboardArgs GetBlocksArgs GetCharityDonationsArgs GetChattersArgs GetEventSubscriptionsArgs GetFollowsArgs GetHypeTrainsArgs PostAppAccessTokenArgs PostAutomodMessageArgs PostChannelCommercialArgs PostClipArgs PostRevokeTokenArgs PostShoutoutArgs PutBlockArgs PutUserChatColorArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.CreateQueryMap() QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public abstract class QueryMap : QueryMap<string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.RateLimitedException.html": {
    "href": "api/AuxLabs.SimpleTwitch.RateLimitedException.html",
    "title": "Class RateLimitedException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RateLimitedException Inheritance object System.Exception System.SystemException System.TimeoutException RateLimitedException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public class RateLimitedException : TimeoutException, ISerializable Constructors | Improve this Doc View Source RateLimitedException() Declaration public RateLimitedException() Implements System.Runtime.Serialization.ISerializable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AcceptedTransport.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AcceptedTransport.html",
    "title": "Class AcceptedTransport | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AcceptedTransport Inheritance object Transport AcceptedTransport Inherited Members Transport.Method Transport.Callback Transport.Secret Transport.SessionId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class AcceptedTransport : Transport Properties | Improve this Doc View Source ConnectedAt The date and time that the WebSocket was connected. Only specified for websockets. Declaration public DateTime ConnectedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source DisconnectedAt The date and time that the WebSocket was disconnected. Only specified for websockets. Declaration public DateTime DisconnectedAt { get; set; } Property Value Type Description System.DateTime"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AccessTokenInfo.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AccessTokenInfo.html",
    "title": "Class AccessTokenInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AccessTokenInfo Inheritance object AccessTokenInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class AccessTokenInfo Properties | Improve this Doc View Source ClientId Declaration public string ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source ExpiresInSeconds Declaration public int? ExpiresInSeconds { get; set; } Property Value Type Description int? | Improve this Doc View Source Scopes Declaration public IReadOnlyCollection<string> Scopes { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><string> | Improve this Doc View Source UserId Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserName Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Analytic.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Analytic.html",
    "title": "Class Analytic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Analytic Inheritance object Analytic ExtensionAnalytic GameAnalytic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public abstract class Analytic Properties | Improve this Doc View Source DateRange The reporting window’s start and end dates. Declaration public DateRange DateRange { get; set; } Property Value Type Description DateRange | Improve this Doc View Source Type The type of report. Declaration public AnalyticType Type { get; set; } Property Value Type Description AnalyticType | Improve this Doc View Source Url The URL used to download the report. Declaration public string Url { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AnalyticType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AnalyticType.html",
    "title": "Enum AnalyticType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum AnalyticType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum AnalyticType Fields Name Description None OverviewV2 Extension Methods EnumHelper.GetEnumMemberValue<AnalyticType>(AnalyticType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AnnouncementColor.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AnnouncementColor.html",
    "title": "Enum AnnouncementColor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum AnnouncementColor Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum AnnouncementColor Fields Name Description Blue Green Orange Primary Purple Extension Methods EnumHelper.GetEnumMemberValue<AnnouncementColor>(AnnouncementColor)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AppIdentity.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AppIdentity.html",
    "title": "Class AppIdentity | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AppIdentity Inheritance object AppIdentity UserIdentity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class AppIdentity Properties | Improve this Doc View Source AccessToken Declaration public string AccessToken { get; set; } Property Value Type Description string | Improve this Doc View Source ExpiresInSeconds Declaration public int? ExpiresInSeconds { get; set; } Property Value Type Description int? | Improve this Doc View Source TokenType Declaration public TokenType TokenType { get; set; } Property Value Type Description TokenType"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AuthorizationCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AuthorizationCondition.html",
    "title": "Class AuthorizationCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationCondition Inheritance object AuthorizationCondition Implements IEventCondition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class AuthorizationCondition : IEventCondition Constructors | Improve this Doc View Source AuthorizationCondition() Declaration public AuthorizationCondition() | Improve this Doc View Source AuthorizationCondition(string) Declaration public AuthorizationCondition(string clientId) Parameters Type Name Description string clientId Properties | Improve this Doc View Source ClientId Your application's client id. Declaration public string ClientId { get; set; } Property Value Type Description string Implements IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AutomodAction.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AutomodAction.html",
    "title": "Enum AutomodAction | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum AutomodAction Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum AutomodAction Fields Name Description Allow Deny Extension Methods EnumHelper.GetEnumMemberValue<AutomodAction>(AutomodAction)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.AutomodSettings.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.AutomodSettings.html",
    "title": "Class AutomodSettings | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AutomodSettings Inheritance object AutomodSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class AutomodSettings Properties | Improve this Doc View Source Aggression The Automod level for hostility involving aggression. Declaration public int Aggression { get; set; } Property Value Type Description int | Improve this Doc View Source BroadcasterId The broadcaster’s ID. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source Bullying The Automod level for hostility involving name calling or insults. Declaration public int Bullying { get; set; } Property Value Type Description int | Improve this Doc View Source Disability The Automod level for discrimination against disability. Declaration public int Disability { get; set; } Property Value Type Description int | Improve this Doc View Source Misogyny The Automod level for discrimination against women. Declaration public int Misogyny { get; set; } Property Value Type Description int | Improve this Doc View Source ModeratorId The moderator’s ID. Declaration public string ModeratorId { get; set; } Property Value Type Description string | Improve this Doc View Source OverallLevel The default AutoMod level for the broadcaster. Declaration public int? OverallLevel { get; set; } Property Value Type Description int? | Improve this Doc View Source RaceEthnicityOrReligion The Automod level for racial discrimination. Declaration public int RaceEthnicityOrReligion { get; set; } Property Value Type Description int | Improve this Doc View Source SexBasedTerms The Automod level for sexual content. Declaration public int SexBasedTerms { get; set; } Property Value Type Description int | Improve this Doc View Source SexualitySexOrGender The AutoMod level for discrimination based on sexuality, sex, or gender. Declaration public int SexualitySexOrGender { get; set; } Property Value Type Description int | Improve this Doc View Source Swearing The Automod level for profanity. Declaration public int Swearing { get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Badge.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Badge.html",
    "title": "Class Badge | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Badge Inheritance object Badge Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Badge Properties | Improve this Doc View Source SetId An ID that identifies this set of chat badges. Declaration public string SetId { get; set; } Property Value Type Description string | Improve this Doc View Source Versions A collection of chat badges in this set. Declaration public IReadOnlyCollection<BadgeVersion> Versions { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><BadgeVersion>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BadgeVersion.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BadgeVersion.html",
    "title": "Struct BadgeVersion | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct BadgeVersion Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public struct BadgeVersion Properties | Improve this Doc View Source Id An ID that identifies this version of the badge. The ID can be any value. Declaration public string Id { readonly get; set; } Property Value Type Description string | Improve this Doc View Source LargeImageUrl A URL to the large version (72px x 72px) of the badge. Declaration public string LargeImageUrl { readonly get; set; } Property Value Type Description string | Improve this Doc View Source MediumImageUrl A URL to the medium version (36px x 36px) of the badge. Declaration public string MediumImageUrl { readonly get; set; } Property Value Type Description string | Improve this Doc View Source SmallImageUrl A URL to the small version (18px x 18px) of the badge. Declaration public string SmallImageUrl { readonly get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Ban.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Ban.html",
    "title": "Class Ban | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Ban Inheritance object Ban Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Ban Properties | Improve this Doc View Source CreatedAt The UTC date and time of when the user was banned. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source ExpiresAt The UTC date and time of when the timeout expires Declaration public DateTime? ExpiresAt { get; set; } Property Value Type Description System.DateTime? | Improve this Doc View Source ModeratorDisplayName The moderator’s display name. Declaration public string ModeratorDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source ModeratorId The ID of the moderator that banned the user or put them in a timeout. Declaration public string ModeratorId { get; set; } Property Value Type Description string | Improve this Doc View Source ModeratorName The moderator’s login name. Declaration public string ModeratorName { get; set; } Property Value Type Description string | Improve this Doc View Source Reason The reason the user was banned or put in a timeout if the moderator provided one. Declaration public string Reason { get; set; } Property Value Type Description string | Improve this Doc View Source UserDisplayName The banned user’s display name. Declaration public string UserDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source UserId The ID of the banned user. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserName The banned user’s login name. Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BitsPeriod.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BitsPeriod.html",
    "title": "Enum BitsPeriod | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BitsPeriod Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum BitsPeriod Fields Name Description All Day Month Week Year Extension Methods EnumHelper.GetEnumMemberValue<BitsPeriod>(BitsPeriod)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BitsTier.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BitsTier.html",
    "title": "Class BitsTier | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsTier Inheritance object BitsTier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class BitsTier Properties | Improve this Doc View Source CanCheer Determines whether users can cheer at this tier level. Declaration public bool CanCheer { get; set; } Property Value Type Description bool | Improve this Doc View Source Color The hex code of the color associated with this tier level Declaration public Color Color { get; set; } Property Value Type Description System.Drawing.Color | Improve this Doc View Source Images The animated and static image sets for the Cheermote. Declaration public CheermoteTheme Images { get; set; } Property Value Type Description CheermoteTheme | Improve this Doc View Source Level The tier level. Declaration public string Level { get; set; } Property Value Type Description string | Improve this Doc View Source MinimumBits The minimum number of Bits that you must cheer at this tier level. Declaration public int MinimumBits { get; set; } Property Value Type Description int | Improve this Doc View Source ShowInBitsCard Determines whether this tier level is shown in the Bits card. Declaration public bool ShowInBitsCard { get; set; } Property Value Type Description bool"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BitsUser.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BitsUser.html",
    "title": "Class BitsUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsUser Inheritance object BitsUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class BitsUser Properties | Improve this Doc View Source Rank The user’s position on the leaderboard. Declaration public int Rank { get; set; } Property Value Type Description int | Improve this Doc View Source TotalBits The number of bits the user has cheered. Declaration public int TotalBits { get; set; } Property Value Type Description int | Improve this Doc View Source UserId An ID that identifies a user on the leaderboard. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserLogin The user’s login name. Declaration public string UserLogin { get; set; } Property Value Type Description string | Improve this Doc View Source UserName The user’s display name. Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BlockContext.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BlockContext.html",
    "title": "Enum BlockContext | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BlockContext Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum BlockContext Fields Name Description Chat Whisper Extension Methods EnumHelper.GetEnumMemberValue<BlockContext>(BlockContext)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BlockReason.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BlockReason.html",
    "title": "Enum BlockReason | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BlockReason Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum BlockReason Fields Name Description Harassment Other Spam Extension Methods EnumHelper.GetEnumMemberValue<BlockReason>(BlockReason)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BroadcasterCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BroadcasterCondition.html",
    "title": "Class BroadcasterCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcasterCondition Inheritance object BroadcasterCondition FollowCondition RewardCondition Implements IEventCondition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class BroadcasterCondition : IEventCondition Constructors | Improve this Doc View Source BroadcasterCondition() Declaration public BroadcasterCondition() | Improve this Doc View Source BroadcasterCondition(string) Declaration public BroadcasterCondition(string broadcasterId) Parameters Type Name Description string broadcasterId Properties | Improve this Doc View Source BroadcasterId The broadcaster user ID of the channel for which notifications will be received. Declaration public string BroadcasterId { get; set; } Property Value Type Description string Implements IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.BroadcasterType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.BroadcasterType.html",
    "title": "Enum BroadcasterType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BroadcasterType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum BroadcasterType Fields Name Description Affiliate None Partner Extension Methods EnumHelper.GetEnumMemberValue<BroadcasterType>(BroadcasterType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CDN.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CDN.html",
    "title": "Class CDN | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CDN Inheritance object CDN Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public static class CDN Fields | Improve this Doc View Source EmoteImageUrl Declaration public const string EmoteImageUrl = \"https://static-cdn.jtvnw.net/emoticons/v2/{0}/{1}/{2}/{3}\" Field Value Type Description string Methods | Improve this Doc View Source GetEmoteImageUrl(string, EmoteFormat, EmoteTheme, EmoteScale) Declaration public static string GetEmoteImageUrl(string emoteId, EmoteFormat format, EmoteTheme theme, EmoteScale scale) Parameters Type Name Description string emoteId EmoteFormat format EmoteTheme theme EmoteScale scale Returns Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Channel.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Channel.html",
    "title": "Class Channel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Channel Inheritance object Channel Implements IUser IChannel IEntity<string> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Channel : IUser, IChannel, IEntity<string> Properties | Improve this Doc View Source BroadcasterDisplayName The broadcaster’s display name. Declaration public string BroadcasterDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId An ID that uniquely identifies the broadcaster. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterLanguage The broadcaster’s preferred language. The value is an ISO 639-1 two-letter language code. Declaration public CultureInfo BroadcasterLanguage { get; set; } Property Value Type Description System.Globalization.CultureInfo | Improve this Doc View Source BroadcasterName The broadcaster’s login name. Declaration public string BroadcasterName { get; set; } Property Value Type Description string | Improve this Doc View Source Delay The value of the broadcaster’s stream delay setting, in seconds. Declaration public uint Delay { get; set; } Property Value Type Description uint | Improve this Doc View Source GameId An ID that uniquely identifies the game that the broadcaster is playing or last played. Declaration public string GameId { get; set; } Property Value Type Description string | Improve this Doc View Source GameName The name of the game that the broadcaster is playing or last played. Declaration public string GameName { get; set; } Property Value Type Description string | Improve this Doc View Source Tags The tags applied to the channel. Declaration public IEnumerable<string> Tags { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable<T><string> | Improve this Doc View Source Title The title of the stream that the broadcaster is currently streaming or last streamed. Declaration public string Title { get; set; } Property Value Type Description string Explicit Interface Implementations | Improve this Doc View Source IChannel.Name Declaration string IChannel.Name { get; } Returns Type Description string | Improve this Doc View Source IEntity<string>.Id Declaration string IEntity<string>.Id { get; } Returns Type Description string | Improve this Doc View Source IUser.DisplayName Declaration string IUser.DisplayName { get; } Returns Type Description string | Improve this Doc View Source IUser.Name Declaration string IUser.Name { get; } Returns Type Description string Implements IUser IChannel IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ChannelEditor.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ChannelEditor.html",
    "title": "Class ChannelEditor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelEditor Inheritance object ChannelEditor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ChannelEditor Properties | Improve this Doc View Source CreatedAt The date and time when the user became one of the broadcaster’s editors. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source UserId An ID that uniquely identifies a user with editor permissions. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserName The user’s display name. Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CharityAmount.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CharityAmount.html",
    "title": "Struct CharityAmount | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct CharityAmount Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public struct CharityAmount Properties | Improve this Doc View Source Currency The ISO-4217 three-letter currency code that identifies the type of currency. Declaration public string Currency { readonly get; set; } Property Value Type Description string | Improve this Doc View Source DecimalPlaces The number of decimal places used by the currency. Declaration public int DecimalPlaces { readonly get; set; } Property Value Type Description int | Improve this Doc View Source Value The monetary amount in the currency’s minor unit. Declaration public int Value { readonly get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CharityCampaign.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CharityCampaign.html",
    "title": "Class CharityCampaign | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CharityCampaign Inheritance object CharityCampaign Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class CharityCampaign Properties | Improve this Doc View Source BroadcasterId An ID that identifies the broadcaster that’s running the campaign. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterLogin The broadcaster’s login name. Declaration public string BroadcasterLogin { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterName The broadcaster’s display name. Declaration public string BroadcasterName { get; set; } Property Value Type Description string | Improve this Doc View Source CharityDescription A description of the charity. Declaration public string CharityDescription { get; set; } Property Value Type Description string | Improve this Doc View Source CharityLogoUrl A URL to an image of the charity’s logo. Declaration public string CharityLogoUrl { get; set; } Property Value Type Description string | Improve this Doc View Source CharityName The charity’s name. Declaration public string CharityName { get; set; } Property Value Type Description string | Improve this Doc View Source CharityWebsiteUrl A URL to the charity’s website. Declaration public string CharityWebsiteUrl { get; set; } Property Value Type Description string | Improve this Doc View Source CurrentAmount The current amount of donations that the campaign has received. Declaration public CharityAmount CurrentAmount { get; set; } Property Value Type Description CharityAmount | Improve this Doc View Source Id An ID that identifies the charity campaign. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source TargetAmount The campaign’s fundraising goal. Declaration public CharityAmount TargetAmount { get; set; } Property Value Type Description CharityAmount"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CharityDonation.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CharityDonation.html",
    "title": "Class CharityDonation | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CharityDonation Inheritance object CharityDonation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class CharityDonation Properties | Improve this Doc View Source Amount The amount of money that the user donated. Declaration public CharityAmount Amount { get; set; } Property Value Type Description CharityAmount | Improve this Doc View Source CampaignId An ID that identifies the charity campaign that the donation applies to. Declaration public string CampaignId { get; set; } Property Value Type Description string | Improve this Doc View Source Id An ID that identifies the donation. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source UserId An ID that identifies a user that donated money to the campaign. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserLogin The user’s login name. Declaration public string UserLogin { get; set; } Property Value Type Description string | Improve this Doc View Source UserName The user’s display name. Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ChatColor.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ChatColor.html",
    "title": "Enum ChatColor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ChatColor Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum ChatColor Fields Name Description Blue BlueViolet CadetBlue Chocolate Coral DodgerBlue Firebrick GoldenRod Green HotPink None OrangeRed Red SeaGreen SpringGreen YellowGreen Extension Methods EnumHelper.GetEnumMemberValue<ChatColor>(ChatColor)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ChatSettings.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ChatSettings.html",
    "title": "Class ChatSettings | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatSettings Inheritance object PatchChatSettingsArgs ChatSettings Implements IScoped Inherited Members PatchChatSettingsArgs.Scopes PatchChatSettingsArgs.IsEmoteOnly PatchChatSettingsArgs.IsFollowerOnly PatchChatSettingsArgs.FollowerOnlyMinutes PatchChatSettingsArgs.IsModeratorDelayed PatchChatSettingsArgs.ModeratorDelaySeconds PatchChatSettingsArgs.IsSlowEnabled PatchChatSettingsArgs.SlowSeconds PatchChatSettingsArgs.IsSubscriberOnly PatchChatSettingsArgs.IsUniqueEnabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ChatSettings : PatchChatSettingsArgs, IScoped Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster specified in the request. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source ModeratorId The moderator’s ID. Declaration public string ModeratorId { get; set; } Property Value Type Description string Implements IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Cheermote.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Cheermote.html",
    "title": "Class Cheermote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Cheermote Inheritance object Cheermote Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Cheermote Properties | Improve this Doc View Source IsCharitable Indicates whether this Cheermote provides a charitable contribution match during charity campaigns. Declaration public bool IsCharitable { get; set; } Property Value Type Description bool | Improve this Doc View Source LastUpdatedAt The date and time when this Cheermote was last updated. Declaration public DateTime LastUpdatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Name The prefix of the Cheermote string that you use in chat to cheer bits. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source Order The order that the Cheermotes are shown in the bits card. Declaration public int Order { get; set; } Property Value Type Description int | Improve this Doc View Source Tiers A collection of tier levels that the Cheermote supports. Declaration public IEnumerable<BitsTier> Tiers { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable<T><BitsTier> | Improve this Doc View Source Type The type of Cheermote. Declaration public CheermoteType Type { get; set; } Property Value Type Description CheermoteType"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CheermoteFormat.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CheermoteFormat.html",
    "title": "Class CheermoteFormat | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheermoteFormat Inheritance object CheermoteFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class CheermoteFormat Properties | Improve this Doc View Source AnimatedImage Declaration public CheermoteImage AnimatedImage { get; set; } Property Value Type Description CheermoteImage | Improve this Doc View Source StaticImage Declaration public CheermoteImage StaticImage { get; set; } Property Value Type Description CheermoteImage"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CheermoteImage.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CheermoteImage.html",
    "title": "Class CheermoteImage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheermoteImage Inheritance object CheermoteImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class CheermoteImage Properties | Improve this Doc View Source Size1 Declaration public string Size1 { get; set; } Property Value Type Description string | Improve this Doc View Source Size1AndHalf Declaration public string Size1AndHalf { get; set; } Property Value Type Description string | Improve this Doc View Source Size2 Declaration public string Size2 { get; set; } Property Value Type Description string | Improve this Doc View Source Size3 Declaration public string Size3 { get; set; } Property Value Type Description string | Improve this Doc View Source Size4 Declaration public string Size4 { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CheermoteTheme.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CheermoteTheme.html",
    "title": "Class CheermoteTheme | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheermoteTheme Inheritance object CheermoteTheme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class CheermoteTheme Properties | Improve this Doc View Source Dark Declaration public CheermoteFormat Dark { get; set; } Property Value Type Description CheermoteFormat | Improve this Doc View Source Light Declaration public CheermoteFormat Light { get; set; } Property Value Type Description CheermoteFormat"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CheermoteType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CheermoteType.html",
    "title": "Enum CheermoteType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum CheermoteType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum CheermoteType Fields Name Description ChannelCustom DisplayOnly GlobalFirstParty GlobalThirdParty None Sponsored Extension Methods EnumHelper.GetEnumMemberValue<CheermoteType>(CheermoteType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Clip.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Clip.html",
    "title": "Class Clip | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Clip Inheritance object SimpleClip Clip Inherited Members SimpleClip.Id SimpleClip.EditUrl object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Clip : SimpleClip Properties | Improve this Doc View Source BroadcasterDisplayName The broadcaster’s display name. Declaration public string BroadcasterDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId An ID that identifies the broadcaster that the video was clipped from. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedAt The date and time of when the clip was created. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source CreatorDisplayName The user’s display name. Declaration public string CreatorDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source CreatorId An ID that identifies the user that created the clip. Declaration public string CreatorId { get; set; } Property Value Type Description string | Improve this Doc View Source DurationSeconds The length of the clip, in seconds. Declaration public float DurationSeconds { get; set; } Property Value Type Description float | Improve this Doc View Source EmbedUrl A URL that you can use in an iframe to embed the clip. Declaration public string EmbedUrl { get; set; } Property Value Type Description string | Improve this Doc View Source GameId The ID of the game that was being played when the clip was created. Declaration public string GameId { get; set; } Property Value Type Description string | Improve this Doc View Source Language The language that the broadcaster broadcasts in. Declaration public CultureInfo Language { get; set; } Property Value Type Description System.Globalization.CultureInfo | Improve this Doc View Source OffsetSeconds The zero-based offset, in seconds, to where the clip starts in the video Declaration public int OffsetSeconds { get; set; } Property Value Type Description int | Improve this Doc View Source ThumbnailUrl A URL to a thumbnail image of the clip. Declaration public string ThumbnailUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Title The title of the clip. Declaration public string Title { get; set; } Property Value Type Description string | Improve this Doc View Source Url A URL to the clip. Declaration public string Url { get; set; } Property Value Type Description string | Improve this Doc View Source VideoId An ID that identifies the video that the clip came from. Declaration public string VideoId { get; set; } Property Value Type Description string | Improve this Doc View Source ViewCount The number of times the clip has been viewed. Declaration public int ViewCount { get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Commercial.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Commercial.html",
    "title": "Class Commercial | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Commercial Contains information about the status of a commercial request. Inheritance object Commercial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Commercial Properties | Improve this Doc View Source Length The length of the commercial you requested. Declaration public int Length { get; set; } Property Value Type Description int | Improve this Doc View Source Message A message that indicates whether Twitch was able to serve an ad. Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source RetryAfter The number of seconds you must wait before running another commercial. Declaration public int RetryAfter { get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ComponentExtension.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ComponentExtension.html",
    "title": "Class ComponentExtension | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ComponentExtension Inheritance object SimpleExtension ComponentExtension Inherited Members SimpleExtension.Id SimpleExtension.Version SimpleExtension.Name SimpleExtension.IsActive object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ComponentExtension : SimpleExtension Properties | Improve this Doc View Source X The x-coordinate where the extension is placed. Declaration public string X { get; set; } Property Value Type Description string | Improve this Doc View Source Y The y-coordinate where the extension is placed. Declaration public string Y { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Cost.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Cost.html",
    "title": "Class Cost | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Cost Inheritance object Cost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Cost Properties | Improve this Doc View Source Amount The amount exchanged for the digital product. Declaration public int Amount { get; set; } Property Value Type Description int | Improve this Doc View Source Type The type of currency exchanged. Declaration public CostType Type { get; set; } Property Value Type Description CostType"
  },
  "api/AuxLabs.SimpleTwitch.Rest.CostType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.CostType.html",
    "title": "Enum CostType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum CostType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum CostType Fields Name Description Bits None Extension Methods EnumHelper.GetEnumMemberValue<CostType>(CostType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.DateRange.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.DateRange.html",
    "title": "Struct DateRange | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct DateRange Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public readonly struct DateRange Constructors | Improve this Doc View Source DateRange(DateTime, DateTime) Declaration public DateRange(DateTime startedAt, DateTime endedAt) Parameters Type Name Description System.DateTime startedAt System.DateTime endedAt Properties | Improve this Doc View Source EndedAt Declaration public DateTime EndedAt { get; } Property Value Type Description System.DateTime | Improve this Doc View Source StartedAt Declaration public DateTime StartedAt { get; } Property Value Type Description System.DateTime"
  },
  "api/AuxLabs.SimpleTwitch.Rest.DefaultRateLimiter.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.DefaultRateLimiter.html",
    "title": "Class DefaultRateLimiter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DefaultRateLimiter Inheritance object DefaultRateLimiter Implements IRateLimiter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class DefaultRateLimiter : IRateLimiter Constructors | Improve this Doc View Source DefaultRateLimiter() Declaration public DefaultRateLimiter() Methods | Improve this Doc View Source EnterBucketLockAsync(string, CancellationToken) Declaration public virtual Task EnterBucketLockAsync(string bucketId, CancellationToken cancelToken) Parameters Type Name Description string bucketId System.Threading.CancellationToken cancelToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source EnterGlobalLockAsync(CancellationToken) Declaration public virtual Task EnterGlobalLockAsync(CancellationToken cancelToken) Parameters Type Name Description System.Threading.CancellationToken cancelToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source EnterLockAsync(string, CancellationToken) Declaration public Task EnterLockAsync(string bucketId, CancellationToken cancelToken) Parameters Type Name Description string bucketId System.Threading.CancellationToken cancelToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source UpdateLimit(string, RateLimitInfo) Declaration public virtual void UpdateLimit(string bucketId, RateLimitInfo info) Parameters Type Name Description string bucketId RateLimitInfo info Implements IRateLimiter"
  },
  "api/AuxLabs.SimpleTwitch.Rest.DeleteVideosArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.DeleteVideosArgs.html",
    "title": "Class DeleteVideosArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteVideosArgs Inheritance object QueryMap<string[]> DeleteVideosArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class DeleteVideosArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable Constructors | Improve this Doc View Source DeleteVideosArgs() Declaration public DeleteVideosArgs() | Improve this Doc View Source DeleteVideosArgs(params string[]) Declaration public DeleteVideosArgs(params string[] videoIds) Parameters Type Name Description string[] videoIds Properties | Improve this Doc View Source VideoIds Declaration public List<string> VideoIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.DropEntitlementCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.DropEntitlementCondition.html",
    "title": "Class DropEntitlementCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DropEntitlementCondition Inheritance object DropEntitlementCondition Implements IEventCondition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class DropEntitlementCondition : IEventCondition Constructors | Improve this Doc View Source DropEntitlementCondition() Declaration public DropEntitlementCondition() | Improve this Doc View Source DropEntitlementCondition(string, string, string) Declaration public DropEntitlementCondition(string organizationId, string categoryId = null, string campaignId = null) Parameters Type Name Description string organizationId string categoryId string campaignId Properties | Improve this Doc View Source CampaignId Optional. The campaign ID for a specific campaign for which notifications will be received. Declaration public string CampaignId { get; set; } Property Value Type Description string | Improve this Doc View Source CategoryId Optional. The category (or game) ID of the game for which notifications will be received. Declaration public string CategoryId { get; set; } Property Value Type Description string | Improve this Doc View Source OrganizationId The organization ID of the organization that owns the game on the developer portal. Declaration public string OrganizationId { get; set; } Property Value Type Description string Implements IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Emote.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Emote.html",
    "title": "Class Emote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Emote Inheritance object GlobalEmote Emote Inherited Members GlobalEmote.Id GlobalEmote.Name GlobalEmote.Images GlobalEmote.Formats GlobalEmote.Scales GlobalEmote.Themes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Emote : GlobalEmote Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster who owns the emote. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source EmoteSetId An ID that identifies the emote set that the emote belongs to. Declaration public string EmoteSetId { get; set; } Property Value Type Description string | Improve this Doc View Source Tier The subscriber tier at which the emote is unlocked. Declaration public string Tier { get; set; } Property Value Type Description string | Improve this Doc View Source Type The type of emote. Declaration public EmoteType Type { get; set; } Property Value Type Description EmoteType"
  },
  "api/AuxLabs.SimpleTwitch.Rest.EmoteScale.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.EmoteScale.html",
    "title": "Enum EmoteScale | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteScale Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax [Flags] public enum EmoteScale Fields Name Description Large A large version (112px x 112px) is available. Medium A medium version (56px x 56px) is available. Small A small version (28px x 28px) is available. Extension Methods EnumHelper.GetEnumMemberValue<EmoteScale>(EmoteScale)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.EmoteTheme.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.EmoteTheme.html",
    "title": "Enum EmoteTheme | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteTheme Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax [Flags] public enum EmoteTheme Fields Name Description Dark Light Extension Methods EnumHelper.GetEnumMemberValue<EmoteTheme>(EmoteTheme)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.EmoteType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.EmoteType.html",
    "title": "Enum EmoteType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum EmoteType Fields Name Description BitsTier A custom bits tier emote. Follower A custom follower emote. None Subscription A custom subscriber emote. Extension Methods EnumHelper.GetEnumMemberValue<EmoteType>(EmoteType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.EventSub.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.EventSub.html",
    "title": "Class EventSub | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSub Inheritance object EventSub Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class EventSub Properties | Improve this Doc View Source Condition The subscription’s parameter values. Declaration public IEventCondition Condition { get; set; } Property Value Type Description IEventCondition | Improve this Doc View Source Cost The amount that the subscription counts against your limit. Declaration public int Cost { get; set; } Property Value Type Description int | Improve this Doc View Source CreatedAt The date and time of when the subscription was created. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Id An ID that identifies the subscription. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Status The subscription’s status. Declaration public EventSubStatus Status { get; set; } Property Value Type Description EventSubStatus | Improve this Doc View Source Transport The transport details used to send the notifications. Declaration public AcceptedTransport Transport { get; set; } Property Value Type Description AcceptedTransport | Improve this Doc View Source Type The subscription’s type. Declaration public EventSubType Type { get; set; } Property Value Type Description EventSubType | Improve this Doc View Source Version The version number that identifies this definition of the subscription’s data. Declaration public string Version { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.EventSubResponse.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.EventSubResponse.html",
    "title": "Class EventSubResponse | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubResponse Inheritance object TwitchResponse<EventSub> EventSubResponse Inherited Members TwitchResponse<EventSub>.Data object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class EventSubResponse : TwitchResponse<EventSub> Properties | Improve this Doc View Source MaxTotalCost The maximum total cost that you’re allowed to incur for all subscriptions you create. Declaration public int MaxTotalCost { get; set; } Property Value Type Description int | Improve this Doc View Source Pagination Contains information used to page through the list of results. Declaration public Pagination Pagination { get; set; } Property Value Type Description Pagination | Improve this Doc View Source Total The total number of subscriptions you’ve created. Declaration public int Total { get; set; } Property Value Type Description int | Improve this Doc View Source TotalCost The sum of all of your subscription costs. Declaration public int TotalCost { get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.EventSubStatus.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.EventSubStatus.html",
    "title": "Enum EventSubStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EventSubStatus Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum EventSubStatus Fields Name Description AuthorizationRevoked The authorization was revoked for one or more users specified in the Condition object. CallbackVerificationFailed The specified callback URL failed verification. CallbackVerificationPending The subscription is pending verification of the specified callback URL. Enabled The subscription is enabled. FailuresExceeded The notification delivery failure rate was too high. ModeratorRemoved The moderator that authorized the subscription is no longer one of the broadcaster's moderators. Unknown UserRemoved One of the users specified in the Condition object was removed. VersionRemoved The subscribed to subscription type and version is no longer supported. WebSocketDisconnected The client closed the connection. WebSocketFailedHeartbeat The client failed to respond to a ping message. WebSocketInboundTraffic The client sent a non-pong message. WebSocketInternalError The Twitch WebSocket server experienced an unexpected error. WebSocketNetworkError The Twitch WebSocket server experienced a network error writing the message to the client. WebSocketTimeout The Twitch WebSocket server timed out writing the message to the client. WebSocketUnused The client failed to subscribe to events within the required time. Extension Methods EnumHelper.GetEnumMemberValue<EventSubStatus>(EventSubStatus)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.EventSubType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.EventSubType.html",
    "title": "Enum EventSubType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EventSubType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum EventSubType Fields Name Description ChannelBan A viewer is banned from the specified channel. ChannelCheer A user cheers on the specified channel. ChannelFollow A specified channel receives a follow. ChannelModeratorAdd Moderator privileges were added to a user on a specified channel. ChannelModeratorRemove Moderator privileges were removed from a user on a specified channel. ChannelPointsRedemptionAdd A viewer has redeemed a custom channel points reward on the specified channel. ChannelPointsRedemptionUpdate A redemption of a channel points custom reward has been updated for the specified channel. ChannelPointsRewardAdd A custom channel points reward has been created for the specified channel. ChannelPointsRewardRemove A custom channel points reward has been removed from the specified channel. ChannelPointsRewardUpdate A custom channel points reward has been updated for the specified channel. ChannelPollEnd A poll ended on a specified channel. ChannelPollProgress Users respond to a poll on a specified channel. ChannelPollStart A poll started on a specified channel. ChannelPredictionEnd A Prediction ended on a specified channel. ChannelPredictionLock A Prediction was locked on a specified channel. ChannelPredictionProgress Users participated in a Prediction on a specified channel. ChannelPredictionStart A Prediction started on a specified channel. ChannelRaid A broadcaster raids another broadcaster’s channel. ChannelSubscribe A notification when a specified channel receives a subscriber. This does not include resubscribes. ChannelSubscriptionEnd A notification when a subscription to the specified channel ends. ChannelSubscriptionGift A notification when a viewer gives a gift subscription to one or more users in the specified channel. ChannelSubscriptionMessage A notification when a user sends a resubscription chat message in a specific channel. ChannelUnban A viewer is unbanned from the specified channel. ChannelUpdate A broadcaster updates their channel properties e.g., category, title, mature flag, broadcast, or language. CharityCampaignProgress Sends an event notification when progress is made towards the campaign’s goal or when the broadcaster changes the fundraising goal. CharityCampaignStart Sends an event notification when the broadcaster starts a charity campaign. CharityCampaignStop Sends an event notification when the broadcaster stops a charity campaign. CharityDonation Sends an event notification when a user donates to the broadcaster’s charity campaign. DropEntitlementGrant An entitlement for a Drop is granted to a user. ExtensionBitsTransactionCreate A Bits transaction occurred for a specified Twitch Extension. GoalEnd Get notified when a broadcaster ends a goal. GoalProgress Get notified when progress (either positive or negative) is made towards a broadcaster’s goal. GoalStart Get notified when a broadcaster Starts a goal. HypeTrainEnd A Hype Train ends on the specified channel. HypeTrainProgress A Hype Train makes progress on the specified channel. HypeTrainStart A Hype Train Starts on the specified channel. None ShieldModeEnd Sends a notification when the broadcaster deactivates Shield Mode. ShieldModeStart Sends a notification when the broadcaster activates Shield Mode. ShoutoutCreate Sends a notification when the specified broadcaster sends a Shoutout. ShoutoutReceived Sends a notification when the specified broadcaster receives a Shoutout. StreamOffline The specified broadcaster stops a stream. StreamOnline The specified broadcaster starts a stream. UserAuthorizationGrant A user’s authorization has been granted to your client id. UserAuthorizationRevoke A user’s authorization has been revoked for your client id. UserUpdate A user has updated their account. Extension Methods EnumHelper.GetEnumMemberValue<EventSubType>(EventSubType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Extension.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Extension.html",
    "title": "Class Extension | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Extension Inheritance object SimpleExtension Extension Inherited Members SimpleExtension.Id SimpleExtension.Version SimpleExtension.Name SimpleExtension.IsActive object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Extension : SimpleExtension Properties | Improve this Doc View Source CanActivate Determines whether the extension is configured and can be activated. Declaration public bool CanActivate { get; set; } Property Value Type Description bool | Improve this Doc View Source Types The extension types that you can activate for this extension. Declaration public IReadOnlyCollection<ExtensionType> Types { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><ExtensionType>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ExtensionAnalytic.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ExtensionAnalytic.html",
    "title": "Class ExtensionAnalytic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionAnalytic Contains information about an extension's analytic report. Inheritance object Analytic ExtensionAnalytic Inherited Members Analytic.Url Analytic.Type Analytic.DateRange object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ExtensionAnalytic : Analytic Fields | Improve this Doc View Source Scopes Declaration public static string[] Scopes Field Value Type Description string[] Properties | Improve this Doc View Source ExtensionId An ID that identifies the extension that the report was generated for. Declaration public string ExtensionId { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ExtensionMap.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ExtensionMap.html",
    "title": "Class ExtensionMap | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionMap Inheritance object ExtensionMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ExtensionMap Properties | Improve this Doc View Source Component A dictionary that contains the data for a video-component extension. Declaration public IReadOnlyDictionary<string, ComponentExtension> Component { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, ComponentExtension> | Improve this Doc View Source Overlay A dictionary that contains the data for a video-overlay extension. Declaration public IReadOnlyDictionary<string, SimpleExtension> Overlay { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, SimpleExtension> | Improve this Doc View Source Panel A dictionary that contains the data for a panel extension. Declaration public IReadOnlyDictionary<string, SimpleExtension> Panel { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary<TKey, TValue><string, SimpleExtension>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ExtensionTransaction.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ExtensionTransaction.html",
    "title": "Class ExtensionTransaction | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionTransaction Inheritance object ExtensionTransaction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ExtensionTransaction Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster that owns the channel where the transaction occurred. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterLogin The broadcaster’s login name. Declaration public string BroadcasterLogin { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterName The broadcaster’s display name. Declaration public string BroadcasterName { get; set; } Property Value Type Description string | Improve this Doc View Source Id An ID that identifies the transaction. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source ProductData Contains details about the digital product. Declaration public ProductData ProductData { get; set; } Property Value Type Description ProductData | Improve this Doc View Source ProductType The type of transaction. Declaration public ProductType ProductType { get; set; } Property Value Type Description ProductType | Improve this Doc View Source Timestamp The UTC date and time of the transaction. Declaration public DateTime Timestamp { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source UserId The ID of the user that purchased the digital product. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserLogin The user’s login name. Declaration public string UserLogin { get; set; } Property Value Type Description string | Improve this Doc View Source UserName The user’s display name. Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ExtensionTransactionCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ExtensionTransactionCondition.html",
    "title": "Class ExtensionTransactionCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionTransactionCondition Inheritance object ExtensionTransactionCondition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ExtensionTransactionCondition Constructors | Improve this Doc View Source ExtensionTransactionCondition() Declaration public ExtensionTransactionCondition() | Improve this Doc View Source ExtensionTransactionCondition(string) Declaration public ExtensionTransactionCondition(string extesionClientId) Parameters Type Name Description string extesionClientId Properties | Improve this Doc View Source ExtensionClientId The client ID of the extension. Declaration public string ExtensionClientId { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ExtensionType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ExtensionType.html",
    "title": "Enum ExtensionType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ExtensionType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum ExtensionType Fields Name Description Component Mobile Overlay Panel Unknown Extension Methods EnumHelper.GetEnumMemberValue<ExtensionType>(ExtensionType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.FollowCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.FollowCondition.html",
    "title": "Class FollowCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class FollowCondition Inheritance object BroadcasterCondition FollowCondition Implements IEventCondition Inherited Members BroadcasterCondition.BroadcasterId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class FollowCondition : BroadcasterCondition, IEventCondition Constructors | Improve this Doc View Source FollowCondition() Declaration public FollowCondition() | Improve this Doc View Source FollowCondition(string, string) Declaration public FollowCondition(string broadcasterId, string moderatorId) Parameters Type Name Description string broadcasterId string moderatorId Properties | Improve this Doc View Source ModeratorId The ID of the moderator of the channel you want to get notifications for. Declaration public string ModeratorId { get; set; } Property Value Type Description string Implements IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Follower.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Follower.html",
    "title": "Class Follower | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Follower Inheritance object Follower Implements IUserRelation IUser IEntity<string> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Follower : IUserRelation, IUser, IEntity<string> Properties | Improve this Doc View Source FollowedAt The UTC date and time of when FromId began following ToId. Declaration public DateTime FollowedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source FromDisplayName The follower’s display name. Declaration public string FromDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source FromId The ID of the user that's following ToId. Declaration public string FromId { get; set; } Property Value Type Description string | Improve this Doc View Source FromName The follower’s login name. Declaration public string FromName { get; set; } Property Value Type Description string | Improve this Doc View Source ToDisplayName The display name of the user that’s being followed. Declaration public string ToDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source ToId The ID of the user that’s being followed by FromId. Declaration public string ToId { get; set; } Property Value Type Description string | Improve this Doc View Source ToName The login name of the user that’s being followed. Declaration public string ToName { get; set; } Property Value Type Description string Explicit Interface Implementations | Improve this Doc View Source IEntity<string>.Id Declaration string IEntity<string>.Id { get; } Returns Type Description string | Improve this Doc View Source IUser.DisplayName Declaration string IUser.DisplayName { get; } Returns Type Description string | Improve this Doc View Source IUser.Name Declaration string IUser.Name { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedDisplayName Declaration string IUserRelation.RelatedDisplayName { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedId Declaration string IUserRelation.RelatedId { get; } Returns Type Description string | Improve this Doc View Source IUserRelation.RelatedName Declaration string IUserRelation.RelatedName { get; } Returns Type Description string Implements IUserRelation IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GameAnalytic.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GameAnalytic.html",
    "title": "Class GameAnalytic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GameAnalytic Contains information about a game's analytic report. Inheritance object Analytic GameAnalytic Inherited Members Analytic.Url Analytic.Type Analytic.DateRange object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GameAnalytic : Analytic Properties | Improve this Doc View Source GameId An ID that identifies the game that the report was generated for. Declaration public string GameId { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetAnalyticsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetAnalyticsArgs.html",
    "title": "Class GetAnalyticsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetAnalyticsArgs Inheritance object QueryMap<string> QueryMap GetAnalyticsArgs GetExtensionAnalyticsArgs GetGameAnalyticsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public abstract class GetAnalyticsArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source EndedAt Ending date/time for returned reports Declaration public DateTime? EndedAt { get; set; } Property Value Type Description System.DateTime? | Improve this Doc View Source First The maximum number of items to return per page in the response. Declaration public int? First { get; set; } Property Value Type Description int? Remarks The minimum value is 1 the maximum is 100, defaults to 20. | Improve this Doc View Source StartedAt Starting date/time for returned reports Declaration public DateTime? StartedAt { get; set; } Property Value Type Description System.DateTime? | Improve this Doc View Source Type Type of analytics report that is returned Declaration public AnalyticType? Type { get; set; } Property Value Type Description AnalyticType? Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetAutomodSettingsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetAutomodSettingsArgs.html",
    "title": "Class GetAutomodSettingsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetAutomodSettingsArgs Inheritance object QueryMap<string> QueryMap GetAutomodSettingsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetAutomodSettingsArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster whose AutoMod settings you want to get. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcaster’s chat room. Declaration public string ModeratorId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetBannedUsersArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetBannedUsersArgs.html",
    "title": "Class GetBannedUsersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBannedUsersArgs Inheritance object QueryMap<string[]> GetBannedUsersArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable IScoped IPaginated Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetBannedUsersArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable, IScoped, IPaginated Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source Before Declaration public string Before { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId The ID of the broadcaster whose list of banned users you want to get. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source First Declaration public int? First { get; set; } Property Value Type Description int? | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source UserIds A list of user IDs used to filter the results. Declaration public List<string> UserIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped IPaginated"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetBitsLeaderboardArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetBitsLeaderboardArgs.html",
    "title": "Class GetBitsLeaderboardArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBitsLeaderboardArgs Inheritance object QueryMap<string> QueryMap GetBitsLeaderboardArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetBitsLeaderboardArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Properties | Improve this Doc View Source Count The number of results to return. The minimum count is 1 and the maximum is 100. Declaration public int? Count { get; set; } Property Value Type Description int? | Improve this Doc View Source Period The time period over which data is aggregated Declaration public BitsPeriod? Period { get; set; } Property Value Type Description BitsPeriod? | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source StartedAt The start date used for determining the aggregation period. Declaration public DateTime? StartedAt { get; set; } Property Value Type Description System.DateTime? | Improve this Doc View Source UserId An ID that identifies a user that cheered bits in the channel. Declaration public string UserId { get; set; } Property Value Type Description string Remarks If Count is greater than 1, the response may include users ranked above and below the specified user. To get the leaderboard’s top leaders, don’t specify a user ID. Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetBlocksArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetBlocksArgs.html",
    "title": "Class GetBlocksArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBlocksArgs Inheritance object QueryMap<string> QueryMap GetBlocksArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetBlocksArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated, IScoped Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId The ID of the broadcaster whose list of blocked users you want to get. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source First Declaration public int? First { get; set; } Property Value Type Description int? | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetChannelsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetChannelsArgs.html",
    "title": "Class GetChannelsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetChannelsArgs Inheritance object QueryMap<string[]> GetChannelsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetChannelsArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable Constructors | Improve this Doc View Source GetChannelsArgs() Declaration public GetChannelsArgs() | Improve this Doc View Source GetChannelsArgs(params string[]) Declaration public GetChannelsArgs(params string[] channels) Parameters Type Name Description string[] channels Properties | Improve this Doc View Source ChannelIds Declaration public List<string> ChannelIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetCharityDonationsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetCharityDonationsArgs.html",
    "title": "Class GetCharityDonationsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetCharityDonationsArgs Inheritance object QueryMap<string> QueryMap GetCharityDonationsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetCharityDonationsArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated, IScoped Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId The ID of the broadcaster that’s currently running a charity campaign. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source First The maximum number of items to return per page in the response. Declaration public int? First { get; set; } Property Value Type Description int? Remarks The minimum value is 1 the maximum is 100, defaults to 20. | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetChattersArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetChattersArgs.html",
    "title": "Class GetChattersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetChattersArgs Inheritance object QueryMap<string> QueryMap GetChattersArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetChattersArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated, IScoped Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId The ID of the broadcaster whose list of chatters you want to get. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source First The maximum number of items to return per page in the response. Declaration public int? First { get; set; } Property Value Type Description int? Remarks The minimum value is 1 the maximum is 100, defaults to 20. | Improve this Doc View Source ModeratorId The ID of the broadcaster or one of the broadcaster’s moderators. Declaration public string ModeratorId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetClipsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetClipsArgs.html",
    "title": "Class GetClipsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetClipsArgs Inheritance object QueryMap<string[]> GetClipsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable IPaginated Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetClipsArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable, IPaginated Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source Before Declaration public string Before { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId An ID that identifies the broadcaster whose video clips you want to get. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source ClipIds An ID that identifies the clip to get. Declaration public List<string> ClipIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> | Improve this Doc View Source EndedAt The end date used to filter clips. Declaration public DateTime EndedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source First Declaration public int? First { get; set; } Property Value Type Description int? | Improve this Doc View Source GameId An ID that identifies the game whose clips you want to get. Declaration public string GameId { get; set; } Property Value Type Description string | Improve this Doc View Source StartedAt The start date used to filter clips. Declaration public DateTime StartedAt { get; set; } Property Value Type Description System.DateTime Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetEmoteSetsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetEmoteSetsArgs.html",
    "title": "Class GetEmoteSetsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetEmoteSetsArgs Inheritance object QueryMap<string[]> GetEmoteSetsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetEmoteSetsArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable Constructors | Improve this Doc View Source GetEmoteSetsArgs() Declaration public GetEmoteSetsArgs() | Improve this Doc View Source GetEmoteSetsArgs(params string[]) Declaration public GetEmoteSetsArgs(params string[] emoteSets) Parameters Type Name Description string[] emoteSets Properties | Improve this Doc View Source EmoteSetIds Declaration public List<string> EmoteSetIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetEventSubscriptionsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetEventSubscriptionsArgs.html",
    "title": "Class GetEventSubscriptionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetEventSubscriptionsArgs Inheritance object QueryMap<string> QueryMap GetEventSubscriptionsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetEventSubscriptionsArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source Status Filter subscriptions by its status. Declaration public EventSubStatus? Status { get; set; } Property Value Type Description EventSubStatus? | Improve this Doc View Source Type Filter subscriptions by subscription type. Declaration public EventSubType? Type { get; set; } Property Value Type Description EventSubType? | Improve this Doc View Source UserId Filter subscriptions by user ID. Declaration public string UserId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string | Improve this Doc View Source IPaginated.First Declaration int? IPaginated.First { get; set; } Returns Type Description int? Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetExtensionAnalyticsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetExtensionAnalyticsArgs.html",
    "title": "Class GetExtensionAnalyticsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetExtensionAnalyticsArgs Inheritance object QueryMap<string> QueryMap GetAnalyticsArgs GetExtensionAnalyticsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated IScoped Inherited Members GetAnalyticsArgs.EndedAt GetAnalyticsArgs.StartedAt GetAnalyticsArgs.Type GetAnalyticsArgs.First GetAnalyticsArgs.After GetAnalyticsArgs.IPaginated.Before QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetExtensionAnalyticsArgs : GetAnalyticsArgs, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated, IScoped Properties | Improve this Doc View Source ExtensionId The extension’s client ID. Declaration public string ExtensionId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides GetAnalyticsArgs.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetExtensionTransactionsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetExtensionTransactionsArgs.html",
    "title": "Class GetExtensionTransactionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetExtensionTransactionsArgs Inheritance object QueryMap<string[]> GetExtensionTransactionsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable IPaginated Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetExtensionTransactionsArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable, IPaginated Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source ExtensionId The ID of the extension whose list of transactions you want to get. Declaration public string ExtensionId { get; set; } Property Value Type Description string | Improve this Doc View Source First The maximum number of items to return per page in the response. Declaration public int? First { get; set; } Property Value Type Description int? Remarks If specified, the minimum value is 1 and the maximum value is 100. | Improve this Doc View Source TransactionIds A collection of transaction ids used to filter the list of transactions. Declaration public IEnumerable<string> TransactionIds { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetFollowsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetFollowsArgs.html",
    "title": "Class GetFollowsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetFollowsArgs Inheritance object QueryMap<string> QueryMap GetFollowsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetFollowsArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source First Declaration public int? First { get; set; } Property Value Type Description int? | Improve this Doc View Source FromId A user ID. Specify this parameter to discover the users that this user is following. Declaration public string FromId { get; set; } Property Value Type Description string | Improve this Doc View Source ToId A user ID. Specify this parameter to discover the users who are following this user. Declaration public string ToId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetGameAnalyticsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetGameAnalyticsArgs.html",
    "title": "Class GetGameAnalyticsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetGameAnalyticsArgs Inheritance object QueryMap<string> QueryMap GetAnalyticsArgs GetGameAnalyticsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated IScoped Inherited Members GetAnalyticsArgs.EndedAt GetAnalyticsArgs.StartedAt GetAnalyticsArgs.Type GetAnalyticsArgs.First GetAnalyticsArgs.After GetAnalyticsArgs.IPaginated.Before QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetGameAnalyticsArgs : GetAnalyticsArgs, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated, IScoped Properties | Improve this Doc View Source GameId The game's client ID. Declaration public string GameId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides GetAnalyticsArgs.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetHypeTrainsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetHypeTrainsArgs.html",
    "title": "Class GetHypeTrainsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetHypeTrainsArgs Inheritance object QueryMap<string> QueryMap GetHypeTrainsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IPaginated IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetHypeTrainsArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IPaginated, IScoped Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId The ID of the broadcaster that’s running the Hype Train. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source First The maximum number of items to return per page in the response. Declaration public int? First { get; set; } Property Value Type Description int? Remarks The minimum value is 1 the maximum is 100, defaults to 1. | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetRedemptionsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetRedemptionsArgs.html",
    "title": "Class GetRedemptionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetRedemptionsArgs Inheritance object QueryMap<string[]> GetRedemptionsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable IPaginated IScoped Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetRedemptionsArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable, IPaginated, IScoped Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId The ID of the broadcaster that owns the custom reward. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source First The maximum number of items to return per page in the response. Declaration public int? First { get; set; } Property Value Type Description int? Remarks The minimum is 1 per page and the maximum is 50. Defaults to 20. | Improve this Doc View Source Ids A list of IDs to filter the redemptions by. Declaration public List<string> Ids { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Remarks You may specify a maximum of 50 IDs. | Improve this Doc View Source RewardId The ID that identifies the custom reward whose redemptions you want to get. Declaration public string RewardId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source Sort The order to sort redemptions by. Declaration public RedemptionSort? Sort { get; set; } Property Value Type Description RedemptionSort? | Improve this Doc View Source Status The status of the redemptions to return. Declaration public RedemptionStatus? Status { get; set; } Property Value Type Description RedemptionStatus? Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Explicit Interface Implementations | Improve this Doc View Source IPaginated.Before Declaration string IPaginated.Before { get; set; } Returns Type Description string Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IPaginated IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetRewardArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetRewardArgs.html",
    "title": "Class GetRewardArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetRewardArgs Inheritance object QueryMap<string[]> GetRewardArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetRewardArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable, IScoped Constructors | Improve this Doc View Source GetRewardArgs() Declaration public GetRewardArgs() | Improve this Doc View Source GetRewardArgs(string, bool?, params string[]) Declaration public GetRewardArgs(string broadcasterId, bool? onlyManageble, params string[] customRewardIds) Parameters Type Name Description string broadcasterId bool? onlyManageble string[] customRewardIds | Improve this Doc View Source GetRewardArgs(string, params string[]) Declaration public GetRewardArgs(string broadcasterId, params string[] customRewardIds) Parameters Type Name Description string broadcasterId string[] customRewardIds Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster whose custom rewards you want to get. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source CustomRewardIds A list of IDs to filter the rewards by. Declaration public IEnumerable<string> CustomRewardIds { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable<T><string> | Improve this Doc View Source OnlyManagebleRewards Determines whether the response contains only the custom rewards that the app can manage. Declaration public bool? OnlyManagebleRewards { get; set; } Property Value Type Description bool? | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetUserColorArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetUserColorArgs.html",
    "title": "Class GetUserColorArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetUserColorArgs Inheritance object QueryMap<string[]> GetUserColorArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetUserColorArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable Constructors | Improve this Doc View Source GetUserColorArgs() Declaration public GetUserColorArgs() | Improve this Doc View Source GetUserColorArgs(params string[]) Declaration public GetUserColorArgs(params string[] userIds) Parameters Type Name Description string[] userIds Properties | Improve this Doc View Source UserIds Declaration public List<string> UserIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetUsersArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetUsersArgs.html",
    "title": "Class GetUsersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetUsersArgs Inheritance object QueryMap<string[]> GetUsersArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetUsersArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable Constructors | Improve this Doc View Source GetUsersArgs() Declaration public GetUsersArgs() | Improve this Doc View Source GetUsersArgs(GetUsersMode, params string[]) Declaration public GetUsersArgs(GetUsersMode mode, params string[] users) Parameters Type Name Description GetUsersMode mode string[] users Properties | Improve this Doc View Source UserIds The ID of the user to get. Declaration public List<string> UserIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> | Improve this Doc View Source UserNames The login name of the user to get. Declaration public List<string> UserNames { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetUsersMode.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetUsersMode.html",
    "title": "Enum GetUsersMode | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum GetUsersMode Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum GetUsersMode Fields Name Description Id Name Extension Methods EnumHelper.GetEnumMemberValue<GetUsersMode>(GetUsersMode)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GetVideosArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GetVideosArgs.html",
    "title": "Class GetVideosArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetVideosArgs Inheritance object QueryMap<string[]> GetVideosArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GetVideosArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable Constructors | Improve this Doc View Source GetVideosArgs() Declaration public GetVideosArgs() | Improve this Doc View Source GetVideosArgs(params string[]) Declaration public GetVideosArgs(params string[] videoIds) Parameters Type Name Description string[] videoIds Properties | Improve this Doc View Source After Declaration public string After { get; set; } Property Value Type Description string | Improve this Doc View Source Before Declaration public string Before { get; set; } Property Value Type Description string | Improve this Doc View Source First Declaration public int? First { get; set; } Property Value Type Description int? | Improve this Doc View Source GameId Declaration public string GameId { get; set; } Property Value Type Description string | Improve this Doc View Source Language Declaration public string Language { get; set; } Property Value Type Description string | Improve this Doc View Source Period Declaration public VideoPeriod? Period { get; set; } Property Value Type Description VideoPeriod? | Improve this Doc View Source Sort Declaration public VideoSort? Sort { get; set; } Property Value Type Description VideoSort? | Improve this Doc View Source Type Declaration public VideoType? Type { get; set; } Property Value Type Description VideoType? | Improve this Doc View Source UserId Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source VideoIds Declaration public List<string> VideoIds { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GlobalEmote.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GlobalEmote.html",
    "title": "Class GlobalEmote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GlobalEmote Inheritance object GlobalEmote Emote Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class GlobalEmote Properties | Improve this Doc View Source Formats The formats that the emote is available in. Declaration public IReadOnlyCollection<EmoteFormat> Formats { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><EmoteFormat> | Improve this Doc View Source Id An ID that identifies this emote. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Images The image URLs for the emote. Declaration public TwitchImage Images { get; set; } Property Value Type Description TwitchImage Remarks These image URLs always provide a static, non-animated emote image with a light background. | Improve this Doc View Source Name The name of the emote. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source Scales The sizes that the emote is available in. Declaration public IReadOnlyCollection<EmoteScale> Scales { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><EmoteScale> | Improve this Doc View Source Themes The background themes that the emote is available in. Declaration public IReadOnlyCollection<EmoteTheme> Themes { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><EmoteTheme>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Goal.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Goal.html",
    "title": "Class Goal | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Goal Inheritance object Goal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Goal Properties | Improve this Doc View Source BroadcasterDisplayName The broadcaster’s display name. Declaration public string BroadcasterDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterId An ID that identifies the broadcaster that created the goal. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterName The broadcaster’s login name. Declaration public string BroadcasterName { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedAt The UTC date and time that the broadcaster created the goal. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source CurrentAmount The goal’s current value. Declaration public int CurrentAmount { get; set; } Property Value Type Description int | Improve this Doc View Source Description A description of the goal. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Id An ID that identifies this goal. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source TargetAmount The goal’s target value. Declaration public int TargetAmount { get; set; } Property Value Type Description int | Improve this Doc View Source Type The type of goal. Declaration public GoalType Type { get; set; } Property Value Type Description GoalType"
  },
  "api/AuxLabs.SimpleTwitch.Rest.GoalType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.GoalType.html",
    "title": "Enum GoalType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum GoalType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum GoalType Fields Name Description Follower The goal is to increase followers. NewSubscription The goal is to increase subscriptions. NewSubscriptionCount The goal is to increase subscriptions. None Subscription The goal is to increase subscriptions. SusbcriptionCount The goal is to increase subscriptions. Extension Methods EnumHelper.GetEnumMemberValue<GoalType>(GoalType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.html",
    "title": "Namespace AuxLabs.SimpleTwitch.Rest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.SimpleTwitch.Rest Classes AcceptedTransport AccessTokenInfo Analytic AppIdentity AuthorizationCondition AutomodSettings Badge Ban BitsTier BitsUser BroadcasterCondition CDN Channel ChannelEditor CharityCampaign CharityDonation ChatSettings Cheermote CheermoteFormat CheermoteImage CheermoteTheme Clip Commercial Contains information about the status of a commercial request. ComponentExtension Cost DefaultRateLimiter DeleteVideosArgs DropEntitlementCondition Emote EventSub EventSubResponse Extension ExtensionAnalytic Contains information about an extension's analytic report. ExtensionMap ExtensionTransaction ExtensionTransactionCondition FollowCondition Follower GameAnalytic Contains information about a game's analytic report. GetAnalyticsArgs GetAutomodSettingsArgs GetBannedUsersArgs GetBitsLeaderboardArgs GetBlocksArgs GetChannelsArgs GetCharityDonationsArgs GetChattersArgs GetClipsArgs GetEmoteSetsArgs GetEventSubscriptionsArgs GetExtensionAnalyticsArgs GetExtensionTransactionsArgs GetFollowsArgs GetGameAnalyticsArgs GetHypeTrainsArgs GetRedemptionsArgs GetRewardArgs GetUserColorArgs GetUsersArgs GetVideosArgs GlobalEmote Goal HypeTrain HypeTrainContribution HypeTrainInfo MockMessage ModifyChannelArgs ModifyRedemptionsArgs PatchChatSettingsArgs PostAnnouncementArgs PostAppAccessTokenArgs PostAutomodMessageArgs PostChannelCommercialArgs PostClipArgs PostEnforcementStatusArgs PostEventSubscriptionArgs PostRefreshTokenArgs PostRevokeTokenArgs PostRewardArgs PostShoutoutArgs PostUserAccessTokenArgs ProductData PutAutomodSettingsArgs PutBlockArgs PutUserChatColorArgs RaidCondition Redemption RestError Reward RewardCondition RFCDateTimeConverter SearchChannelsArgs SimpleChatUser SimpleClip SimpleExtension SimpleReward SimpleUser Transport TwitchIdentityApiClient A client that implements Twitch's identity api for manging access tokens. TwitchMetaResponse<T> An object that represents data returned by a Twitch request, but with some metadata. TwitchResponse<T> An object that represents data returned by a Twitch request. TwitchRestApiClient TwitchRestApiConfig TwitchRestException User UserCondition UserIdentity Video Structs BadgeVersion CharityAmount DateRange Pagination RateLimitInfo RewardSetting TwitchImage VideoOffset Interfaces IEventCondition IPaginated Indicates that a request can be paginated. IRateLimiter IScoped Indicates that a method requires special authentication to be used. ITwitchApi ITwitchIdentityApi Enums AnalyticType AnnouncementColor AutomodAction BitsPeriod BlockContext BlockReason BroadcasterType ChatColor CheermoteType CostType EmoteScale EmoteTheme EmoteType EventSubStatus EventSubType ExtensionType GetUsersMode GoalType HypeTrainContributionType ProductType RedemptionSort RedemptionStatus TokenType TransportMethod UserType VideoPeriod VideoSort VideoType"
  },
  "api/AuxLabs.SimpleTwitch.Rest.HypeTrain.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.HypeTrain.html",
    "title": "Class HypeTrain | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrain Inheritance object HypeTrain Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class HypeTrain Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster that’s running the Hype Train. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source CooldownEndsAt The UTC date and time that another Hype Train can start. Declaration public DateTime CooldownEndsAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source ExpiresAt The UTC date and time that the Hype Train ends. Declaration public DateTime ExpiresAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Goal The value needed to reach the next level. Declaration public int Goal { get; set; } Property Value Type Description int | Improve this Doc View Source Id An ID that identifies this Hype Train. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source LastContribution The most recent contribution towards the Hype Train’s goal. Declaration public HypeTrainContribution LastContribution { get; set; } Property Value Type Description HypeTrainContribution | Improve this Doc View Source Level The highest level that the Hype Train reached Declaration public int Level { get; set; } Property Value Type Description int | Improve this Doc View Source StartedAt The UTC date and time that this Hype Train started. Declaration public DateTime StartedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source TopContributions The top contributors for each contribution type. Declaration public IReadOnlyCollection<HypeTrainContribution> TopContributions { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><HypeTrainContribution> | Improve this Doc View Source Total The current total amount raised. Declaration public int Total { get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.HypeTrainContribution.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.HypeTrainContribution.html",
    "title": "Class HypeTrainContribution | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainContribution Inheritance object HypeTrainContribution Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class HypeTrainContribution Properties | Improve this Doc View Source Total The total amount contributed. Declaration public int Total { get; set; } Property Value Type Description int | Improve this Doc View Source Type The contribution method used. Declaration public HypeTrainContributionType Type { get; set; } Property Value Type Description HypeTrainContributionType | Improve this Doc View Source UserId The ID of the user that made the contribution. Declaration public string UserId { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.HypeTrainContributionType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.HypeTrainContributionType.html",
    "title": "Enum HypeTrainContributionType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum HypeTrainContributionType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum HypeTrainContributionType Fields Name Description Bits Other Subscriptions Extension Methods EnumHelper.GetEnumMemberValue<HypeTrainContributionType>(HypeTrainContributionType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.HypeTrainInfo.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.HypeTrainInfo.html",
    "title": "Class HypeTrainInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainInfo Inheritance object HypeTrainInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class HypeTrainInfo Properties | Improve this Doc View Source Data The event's data. Declaration public HypeTrain Data { get; set; } Property Value Type Description HypeTrain | Improve this Doc View Source Id An ID that identifies this event. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Timestamp The UTC date and time that the event occurred. Declaration public DateTime Timestamp { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Type The type of event. Declaration public string Type { get; set; } Property Value Type Description string | Improve this Doc View Source Version The version number of the definition of the event’s data. Declaration public string Version { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.IEventCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.IEventCondition.html",
    "title": "Interface IEventCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IEventCondition Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public interface IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.IPaginated.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.IPaginated.html",
    "title": "Interface IPaginated | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IPaginated Indicates that a request can be paginated. Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public interface IPaginated Properties | Improve this Doc View Source After The cursor used to get the next page of results. Declaration string After { get; set; } Property Value Type Description string | Improve this Doc View Source Before The cursor used to get the previous page of results. Declaration string Before { get; set; } Property Value Type Description string | Improve this Doc View Source First The maximum number of items to return per page in the response. Declaration int? First { get; set; } Property Value Type Description int?"
  },
  "api/AuxLabs.SimpleTwitch.Rest.IRateLimiter.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.IRateLimiter.html",
    "title": "Interface IRateLimiter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IRateLimiter Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public interface IRateLimiter Methods | Improve this Doc View Source EnterLockAsync(string, CancellationToken) Declaration Task EnterLockAsync(string bucketId, CancellationToken cancelToken) Parameters Type Name Description string bucketId System.Threading.CancellationToken cancelToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source UpdateLimit(string, RateLimitInfo) Declaration void UpdateLimit(string bucketId, RateLimitInfo info) Parameters Type Name Description string bucketId RateLimitInfo info"
  },
  "api/AuxLabs.SimpleTwitch.Rest.IScoped.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.IScoped.html",
    "title": "Interface IScoped | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IScoped Indicates that a method requires special authentication to be used. Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public interface IScoped Properties | Improve this Doc View Source Scopes The scopes required for this request. Declaration string[] Scopes { get; } Property Value Type Description string[]"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ITwitchApi.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ITwitchApi.html",
    "title": "Interface ITwitchApi | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ITwitchApi Inherited Members System.IDisposable.Dispose() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public interface ITwitchApi : IDisposable Properties | Improve this Doc View Source Authorization Declaration AuthenticationHeaderValue Authorization { get; set; } Property Value Type Description System.Net.Http.Headers.AuthenticationHeaderValue | Improve this Doc View Source ClientId Declaration string ClientId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source DeleteBanAsync(object) Declaration Task<TwitchResponse<object>> DeleteBanAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteBlockAsync(string) Removes the user from the broadcaster’s list of blocked users. Declaration Task DeleteBlockAsync(string targetUserId) Parameters Type Name Description string targetUserId Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the user:manage:blocked_users scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source DeleteBlockedTermAsync(object) Declaration Task<TwitchResponse<object>> DeleteBlockedTermAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteChatMessagesAsync(object) Declaration Task<TwitchResponse<object>> DeleteChatMessagesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteEventSubcrptionAsync(string) Deletes an EventSub subscription. Declaration Task DeleteEventSubcrptionAsync(string eventsubId) Parameters Type Name Description string eventsubId Returns Type Description System.Threading.Tasks.Task Remarks Webhook transports require a app access token and Websocket transports require a user access token. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source DeleteModeratorAsync(object) Declaration Task<TwitchResponse<object>> DeleteModeratorAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteRaidAsync(object) Declaration Task<TwitchResponse<object>> DeleteRaidAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteRewardAsync(string, string) Deletes a custom reward that the broadcaster created. Only the app that created a reward is able to delete it. Declaration Task DeleteRewardAsync(string broadcasterId, string customRewardId) Parameters Type Name Description string broadcasterId string customRewardId Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the channel:manage:redemptions scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found | Improve this Doc View Source DeleteScheduleSegmentAsync(object) Declaration Task<TwitchResponse<object>> DeleteScheduleSegmentAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteVideoAsync(DeleteVideosArgs) Deletes one or more videos. You may delete past broadcasts, highlights, or uploads. Declaration Task<TwitchResponse<string>> DeleteVideoAsync(DeleteVideosArgs args) Parameters Type Name Description DeleteVideosArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<string>> A collection of string that represent the deleted videos' ids. Remarks Requires a user access token with the channel:manage:videos scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source DeleteVipAsync(object) Declaration Task<TwitchResponse<object>> DeleteVipAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetActiveExtensionsAsync(string) Gets a list of all extensions (both active and inactive) that the broadcaster has installed. Declaration Task<TwitchResponse<ExtensionMap>> GetActiveExtensionsAsync(string userId) Parameters Type Name Description string userId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ExtensionMap>> A single ExtensionMap object. Remarks Requires an app access token or a user access token with the user:read:broadcast or user:edit:broadcast scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetAutomodSettingsAsync(GetAutomodSettingsArgs) Gets the broadcaster’s AutoMod settings. Declaration Task<TwitchResponse<AutomodSettings>> GetAutomodSettingsAsync(GetAutomodSettingsArgs args) Parameters Type Name Description GetAutomodSettingsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<AutomodSettings>> A single AutomodSettings object. Remarks Requires a user access token with the moderator:read:automod_settings scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Fobidden | Improve this Doc View Source GetBadgesAsync() Gets Twitch’s list of chat badges, which users may use in any channel’s chat room. Declaration Task<TwitchResponse<Badge>> GetBadgesAsync() Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Badge>> A collection of Badge objects. Exceptions Type Condition TwitchRestException 401 Unauthorized | Improve this Doc View Source GetBadgesAsync(string) Gets the broadcaster’s list of custom chat badges. Declaration Task<TwitchResponse<Badge>> GetBadgesAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Badge>> A collection of Badge objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetBannedUsersAsync(GetBannedUsersArgs) Gets all users that the broadcaster banned or put in a timeout. Declaration Task<TwitchMetaResponse<Ban>> GetBannedUsersAsync(GetBannedUsersArgs args) Parameters Type Name Description GetBannedUsersArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Ban>> A single Ban object. Remarks Requires a user access token with the moderation:read or moderator:manage:banned_users scopes. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetBitsLeaderboardAsync(GetBitsLeaderboardArgs) Gets the Bits leaderboard for the authenticated broadcaster. Declaration Task<TwitchMetaResponse<BitsUser>> GetBitsLeaderboardAsync(GetBitsLeaderboardArgs args) Parameters Type Name Description GetBitsLeaderboardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<BitsUser>> A collection of BitsUser objects. Remarks Requires a user access token with the bits:read scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetBlockedTermsAsync(object) Declaration Task<TwitchResponse<object>> GetBlockedTermsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetBlocksAsync(GetBlocksArgs) Gets the list of users that the broadcaster has blocked. Declaration Task<TwitchMetaResponse<SimpleUser>> GetBlocksAsync(GetBlocksArgs args) Parameters Type Name Description GetBlocksArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<SimpleUser>> A collection of SimpleUser objects. Remarks Requires a user access token with the user:read:blocked_users scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetCalendarAsync(object) Declaration Task<TwitchResponse<object>> GetCalendarAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetCategoriesAsync(object) Declaration Task<TwitchResponse<object>> GetCategoriesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetChannelEditorsAsync(string) Gets the broadcaster’s list editors. Declaration Task<TwitchResponse<ChannelEditor>> GetChannelEditorsAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ChannelEditor>> A collection of ChannelEditor objects. Remarks Requires a user access token with the channel:read:editors scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetChannelsAsync(GetChannelsArgs) Gets information about one or more channels. Declaration Task<TwitchResponse<Channel>> GetChannelsAsync(GetChannelsArgs args) Parameters Type Name Description GetChannelsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Channel>> A collection of Channel objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetChannelsAsync(SearchChannelsArgs) Declaration Task<TwitchResponse<object>> GetChannelsAsync(SearchChannelsArgs args) Parameters Type Name Description SearchChannelsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetCharityCampaignAsync(string) Gets information about the charity campaign that a broadcaster is running. Declaration Task<TwitchResponse<CharityCampaign>> GetCharityCampaignAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<CharityCampaign>> A CharityCampaign object. Remarks Requires a user access token with the channel:read:charity scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden | Improve this Doc View Source GetCharityDonationsAsync(GetCharityDonationsArgs) Gets the list of donations that users have made to the broadcaster’s active charity campaign. Declaration Task<TwitchMetaResponse<CharityDonation>> GetCharityDonationsAsync(GetCharityDonationsArgs args) Parameters Type Name Description GetCharityDonationsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<CharityDonation>> A CharityDonation object. Remarks Requires a user access token with the channel:read:charity scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden | Improve this Doc View Source GetChatSettingsAsync(string, string) Gets the broadcaster’s chat settings. Declaration Task<TwitchResponse<ChatSettings>> GetChatSettingsAsync(string broadcasterId, string moderatorId = null) Parameters Type Name Description string broadcasterId string moderatorId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ChatSettings>> A single ChatSettings object. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetChattersAsync(GetChattersArgs) Gets the list of users that are connected to the broadcaster’s chat session. Declaration Task<TwitchMetaResponse<SimpleUser>> GetChattersAsync(GetChattersArgs args) Parameters Type Name Description GetChattersArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<SimpleUser>> A collection of SimpleUser objects. Remarks Requires a user access token with the moderator:read:chatters scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden | Improve this Doc View Source GetCheermotesAsync(string) Gets a collection of Cheermotes that can be used to cheer bits in any bits-enabled channel. Declaration Task<TwitchResponse<Cheermote>> GetCheermotesAsync(string broadcasterId = null) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Cheermote>> A collection of Cheermote objects. | Improve this Doc View Source GetClipsAsync(GetClipsArgs) Gets one or more video clips that were captured from streams. Declaration Task<TwitchMetaResponse<Clip>> GetClipsAsync(GetClipsArgs args) Parameters Type Name Description GetClipsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Clip>> A collection of Clip objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetCodeStatusAsync(object) Declaration Task<TwitchResponse<object>> GetCodeStatusAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetCurrentPlaylistAsync(object) Declaration Task<TwitchResponse<object>> GetCurrentPlaylistAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetCurrentTrackAsync(object) Declaration Task<TwitchResponse<object>> GetCurrentTrackAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetDropsStatusAsync(object) Declaration Task<TwitchResponse<object>> GetDropsStatusAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetEmotesAsync() Gets the list of global emotes. Declaration Task<TwitchResponse<GlobalEmote>> GetEmotesAsync() Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<GlobalEmote>> A collection of GlobalEmote objects. Exceptions Type Condition TwitchRestException 401 Unauthorized | Improve this Doc View Source GetEmotesAsync(string) Gets the broadcaster’s list of custom emotes. Declaration Task<TwitchResponse<Emote>> GetEmotesAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Emote>> A collection of Emote objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetEmoteSetsAsync(GetEmoteSetsArgs) Gets emotes for one or more specified emote sets. Declaration Task<TwitchResponse<Emote>> GetEmoteSetsAsync(GetEmoteSetsArgs args) Parameters Type Name Description GetEmoteSetsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Emote>> A collection of Emote objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetEventSubcriptionsAsync(GetEventSubscriptionsArgs) Gets a collection of EventSub subscriptions that the client in the access token created. Declaration Task<EventSubResponse> GetEventSubcriptionsAsync(GetEventSubscriptionsArgs args) Parameters Type Name Description GetEventSubscriptionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><EventSubResponse> An EventSubResponse object. Remarks Webhook transports require a app access token and Websocket transports require a user access token. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetExtensionAnalyticsAsync(GetExtensionAnalyticsArgs) Gets an analytics report for one or more extensions. The response contains the URLs used to download the reports (CSV files). Declaration Task<TwitchMetaResponse<ExtensionAnalytic>> GetExtensionAnalyticsAsync(GetExtensionAnalyticsArgs args) Parameters Type Name Description GetExtensionAnalyticsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<ExtensionAnalytic>> A collection of ExtensionAnalytic objects. Remarks Requires a user access token with the analytics:read:extensions scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetExtensionBitsProductsAsync(object) Declaration Task<TwitchResponse<object>> GetExtensionBitsProductsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionConfigurationAsync(object) Declaration Task<TwitchResponse<object>> GetExtensionConfigurationAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionLiveChannelsAsync(object) Declaration Task<TwitchResponse<object>> GetExtensionLiveChannelsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionsAsync(object) Declaration Task<TwitchResponse<object>> GetExtensionsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionSecretsAsync(object) Declaration Task<TwitchResponse<object>> GetExtensionSecretsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionTransactionsAsync(GetExtensionTransactionsArgs) Gets an extension’s list of transactions. Declaration Task<TwitchMetaResponse<ExtensionTransaction>> GetExtensionTransactionsAsync(GetExtensionTransactionsArgs args) Parameters Type Name Description GetExtensionTransactionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<ExtensionTransaction>> A collection of ExtensionTransaction objects. Remarks Requires an app access token. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetFollowedStreamsAsync(object) Declaration Task<TwitchResponse<object>> GetFollowedStreamsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetFollowsAsync(GetFollowsArgs) Gets information about users that are following other users. Declaration Task<TwitchMetaResponse<Follower>> GetFollowsAsync(GetFollowsArgs args) Parameters Type Name Description GetFollowsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Follower>> A collection of Follower objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetGameAnalyticsAsync(GetGameAnalyticsArgs) Gets an analytics report for one or more games. The response contains the URLs used to download the reports (CSV files). Declaration Task<TwitchMetaResponse<GameAnalytic>> GetGameAnalyticsAsync(GetGameAnalyticsArgs args) Parameters Type Name Description GetGameAnalyticsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<GameAnalytic>> A collection of GameAnalytic objects. Remarks Requires a user access token with the analytics:read:games scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetGamesAsync(object) Declaration Task<TwitchResponse<object>> GetGamesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetGoalsAsync(string) Gets the broadcaster’s list of active goals. Declaration Task<TwitchResponse<Goal>> GetGoalsAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Goal>> A collection of Goal objects. Remarks Requires a user access token with the channel:read:goals scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetHypetrainEventsAsync(GetHypeTrainsArgs) Gets information about the broadcaster’s current or most recent Hype Train event. Declaration Task<TwitchMetaResponse<HypeTrainInfo>> GetHypetrainEventsAsync(GetHypeTrainsArgs args) Parameters Type Name Description GetHypeTrainsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<HypeTrainInfo>> A collection of HypeTrainInfo objects. Remarks Requires a user access token with the channel:read:hype_train scope. Exceptions Type Condition TwitchRestException 401 Unauthorized | Improve this Doc View Source GetModeratorsAsync(object) Declaration Task<TwitchResponse<object>> GetModeratorsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetPlaylistsAsync(object) Declaration Task<TwitchResponse<object>> GetPlaylistsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetPollAsync(object) Declaration Task<TwitchResponse<object>> GetPollAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetPredictionAsync(object) Declaration Task<TwitchResponse<object>> GetPredictionAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetReleasedExtensionsAsync(object) Declaration Task<TwitchResponse<object>> GetReleasedExtensionsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetRewardRedemptionAsync(GetRedemptionsArgs) Gets a list of redemptions for the specified custom reward. Only the app that created a reward is able to see it's redemptions. Declaration Task<TwitchResponse<Redemption>> GetRewardRedemptionAsync(GetRedemptionsArgs args) Parameters Type Name Description GetRedemptionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Redemption>> A collection of Redemption objects. Remarks Requires a user access token with either the channel:read:redemptions or channel:manage:redemptions scopes. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found | Improve this Doc View Source GetRewardsAsync(GetRewardArgs) Gets a list of custom rewards that the specified broadcaster created. Declaration Task<TwitchResponse<Reward>> GetRewardsAsync(GetRewardArgs args) Parameters Type Name Description GetRewardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Reward>> A collection of Reward objects. Remarks Requires a user access token with either the channel:read:redemptions or channel:manage:redemptions scopes. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found | Improve this Doc View Source GetScheduleAsync(object) Declaration Task<TwitchResponse<object>> GetScheduleAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetShieldModeAsync(object) Declaration Task<TwitchResponse<object>> GetShieldModeAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetStreamKeyAsync(object) Declaration Task<TwitchResponse<object>> GetStreamKeyAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetStreamMarkersAsync(object) Declaration Task<TwitchResponse<object>> GetStreamMarkersAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetStreamsAsync(object) Declaration Task<TwitchResponse<object>> GetStreamsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetSubscriberAsync(object) Declaration Task<TwitchResponse<object>> GetSubscriberAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetSubscriptionsAsync(object) Declaration Task<TwitchResponse<object>> GetSubscriptionsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTagsAsync(object) Declaration Task<TwitchResponse<object>> GetTagsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTagsAsync(string) Declaration Task<TwitchResponse<object>> GetTagsAsync(string id) Parameters Type Name Description string id Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTeamsAsync(object) Declaration Task<TwitchResponse<object>> GetTeamsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTeamsAsync(string) Declaration Task<TwitchResponse<object>> GetTeamsAsync(string id) Parameters Type Name Description string id Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTopGamesAsync(object) Declaration Task<TwitchResponse<object>> GetTopGamesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetUserChatColorAsync(GetUserColorArgs) Gets the color used for the user’s name in chat. Declaration Task<TwitchResponse<SimpleChatUser>> GetUserChatColorAsync(GetUserColorArgs args) Parameters Type Name Description GetUserColorArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<SimpleChatUser>> A collection of SimpleChatUser objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetUserExtensionsAsync() Gets a list of all extensions (both active and inactive) that the broadcaster has installed. Declaration Task<TwitchResponse<Extension>> GetUserExtensionsAsync() Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Extension>> A collection of Extension objects. Remarks Requires a user access token with the user:read:broadcast or user:edit:broadcast scope. Inactive extensions are only included with the user:edit:broadcast scope. Exceptions Type Condition TwitchRestException 401 Unauthorized | Improve this Doc View Source GetUsersAsync(GetUsersArgs) Gets information about one or more users. Declaration Task<TwitchResponse<User>> GetUsersAsync(GetUsersArgs args) Parameters Type Name Description GetUsersArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<User>> A collection of User objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source GetVideosAsync(GetVideosArgs) Gets information about one or more published videos. Declaration Task<TwitchMetaResponse<Video>> GetVideosAsync(GetVideosArgs args) Parameters Type Name Description GetVideosArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Video>> A collection of Video objects. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source GetVipsAsync(object) Declaration Task<TwitchResponse<object>> GetVipsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchChannelAsync(string, ModifyChannelArgs) Updates a channel’s properties. Declaration Task PatchChannelAsync(string broadcasterId, ModifyChannelArgs args) Parameters Type Name Description string broadcasterId ModifyChannelArgs args Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the channel:manage:broadcast scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source PatchChatSettingsAsync(string, string, PatchChatSettingsArgs) Updates the broadcaster’s chat settings. Declaration Task<TwitchResponse<ChatSettings>> PatchChatSettingsAsync(string broadcasterId, string moderatorId, PatchChatSettingsArgs args) Parameters Type Name Description string broadcasterId string moderatorId PatchChatSettingsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ChatSettings>> A single ChatSettings object. Remarks Requires a user access token with the moderator:manage:chat_settings scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden | Improve this Doc View Source PatchDropsStatusAsync(object) Declaration Task<TwitchResponse<object>> PatchDropsStatusAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchPollAsync(object) Declaration Task<TwitchResponse<object>> PatchPollAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchPredictionaAsync(object) Declaration Task<TwitchResponse<object>> PatchPredictionaAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchRewardAsync(string, string, PostRewardArgs) Updates a custom reward. The app used to create the reward is the only app that may update the reward. Declaration Task<TwitchResponse<Reward>> PatchRewardAsync(string broadcasterId, string rewardId, PostRewardArgs args) Parameters Type Name Description string broadcasterId string rewardId PostRewardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Reward>> A collection of Reward objects. Remarks Requires a user access token with the channel:manage:redemptions scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found | Improve this Doc View Source PatchRewardRedemptionAsync(RedemptionStatus, ModifyRedemptionsArgs) Updates a redemption’s status. The app used to create the reward is the only app that may update the redemption. Declaration Task<TwitchResponse<Redemption>> PatchRewardRedemptionAsync(RedemptionStatus status, ModifyRedemptionsArgs args) Parameters Type Name Description RedemptionStatus status ModifyRedemptionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Redemption>> A collection of Reward objects. Remarks Requires a user access token with the channel:manage:redemptions scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found | Improve this Doc View Source PatchScheduleAsync(object) Declaration Task<TwitchResponse<object>> PatchScheduleAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchScheduleSegmentAsync(object) Declaration Task<TwitchResponse<object>> PatchScheduleSegmentAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostAutomodMessageAsync(PostAutomodMessageArgs) Allow or deny the message that AutoMod flagged for review. Declaration Task PostAutomodMessageAsync(PostAutomodMessageArgs args) Parameters Type Name Description PostAutomodMessageArgs args Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the moderator:manage:automod scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Fobidden, 404 Not Found | Improve this Doc View Source PostBanAsync(object) Declaration Task<TwitchResponse<object>> PostBanAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostBlockedTermAsync(object) Declaration Task<TwitchResponse<object>> PostBlockedTermAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostChatAnnouncementAsync(string, string, PostAnnouncementArgs) Sends an announcement to the broadcaster’s chat room. Declaration Task PostChatAnnouncementAsync(string broadcasterId, string moderatorId, PostAnnouncementArgs args) Parameters Type Name Description string broadcasterId string moderatorId PostAnnouncementArgs args Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the moderator:manage:announcements scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source PostClipAsync(PostClipArgs) Creates a clip from the broadcaster’s stream. Declaration Task<TwitchResponse<SimpleClip>> PostClipAsync(PostClipArgs args) Parameters Type Name Description PostClipArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<SimpleClip>> A single SimpleClip object. Remarks Requires a user access token with the clips:edit scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found | Improve this Doc View Source PostCodeAsync(object) Declaration Task<TwitchResponse<object>> PostCodeAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostCommercialAsync(PostChannelCommercialArgs) Starts a commercial on the specified channel. Declaration Task<TwitchResponse<Commercial>> PostCommercialAsync(PostChannelCommercialArgs args) Parameters Type Name Description PostChannelCommercialArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Commercial>> A single Commercial object. Remarks Requires a user access token with the channel:edit:commercial scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 404 Not Found | Improve this Doc View Source PostEnforcementStatusAsync(string, PostEnforcementStatusArgs) Checks whether AutoMod would flag the specified message for review. Declaration Task<TwitchResponse<MockMessage>> PostEnforcementStatusAsync(string broadcasterId, PostEnforcementStatusArgs args) Parameters Type Name Description string broadcasterId PostEnforcementStatusArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<MockMessage>> A collection of MockMessage objects. Remarks Requires a user access token with the moderation:read scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Fobidden | Improve this Doc View Source PostEventSubcriptionAsync(PostEventSubscriptionArgs) Creates an EventSub subscription. Declaration Task<EventSubResponse> PostEventSubcriptionAsync(PostEventSubscriptionArgs args) Parameters Type Name Description PostEventSubscriptionArgs args Returns Type Description System.Threading.Tasks.Task<TResult><EventSubResponse> An EventSubResponse object. Remarks Webhook transports require a app access token and Websocket transports require a user access token. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 409 Conflict | Improve this Doc View Source PostExtensionChatMessageAsync(object) Declaration Task<TwitchResponse<object>> PostExtensionChatMessageAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostExtensionPubsubMessageAsync(object) Declaration Task<TwitchResponse<object>> PostExtensionPubsubMessageAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostExtensionSecretsAsync(object) Declaration Task<TwitchResponse<object>> PostExtensionSecretsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostModeratorAsync(object) Declaration Task<TwitchResponse<object>> PostModeratorAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostPollAsync(object) Declaration Task<TwitchResponse<object>> PostPollAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostPredictionAsync(object) Declaration Task<TwitchResponse<object>> PostPredictionAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostRaidAsync(object) Declaration Task<TwitchResponse<object>> PostRaidAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostRewardsAsync(string, PostRewardArgs) Creates a custom reward in the broadcaster’s channel. Declaration Task<TwitchResponse<Reward>> PostRewardsAsync(string broadcasterId, PostRewardArgs args) Parameters Type Name Description string broadcasterId PostRewardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Reward>> A single Reward object. Remarks Requires a user access token with the channel:manage:redemptions scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden | Improve this Doc View Source PostScheduleSegmentAsync(object) Declaration Task<TwitchResponse<object>> PostScheduleSegmentAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostShoutoutAsync(PostShoutoutArgs) Sends a shoutout to the specified broadcaster. Declaration Task PostShoutoutAsync(PostShoutoutArgs args) Parameters Type Name Description PostShoutoutArgs args Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the moderator:manage:shoutouts scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden | Improve this Doc View Source PostStreamMarkerAsync(object) Declaration Task<TwitchResponse<object>> PostStreamMarkerAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostVipAsync(object) Declaration Task<TwitchResponse<object>> PostVipAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostWhisperAsync(string, string, string) Sends a whisper message to the specified user. Declaration Task PostWhisperAsync(string fromUserId, string toUserId, string message) Parameters Type Name Description string fromUserId string toUserId string message Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the user:manage:whispers scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not found | Improve this Doc View Source PutAutomodSettingsAsync(GetAutomodSettingsArgs, PutAutomodSettingsArgs) Updates the broadcaster’s AutoMod settings. Declaration Task<TwitchResponse<AutomodSettings>> PutAutomodSettingsAsync(GetAutomodSettingsArgs args, PutAutomodSettingsArgs body) Parameters Type Name Description GetAutomodSettingsArgs args PutAutomodSettingsArgs body Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<AutomodSettings>> A single AutomodSettings object. Remarks Requires a user access token with the moderator:manage:automod_settings scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Fobidden | Improve this Doc View Source PutBlockAsync(PutBlockArgs) Blocks the specified user from interacting with or having contact with the broadcaster. Declaration Task PutBlockAsync(PutBlockArgs args) Parameters Type Name Description PutBlockArgs args Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the user:manage:blocked_users scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source PutExtensionBitsProductsAsync(object) Declaration Task<TwitchResponse<object>> PutExtensionBitsProductsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutExtensionConfigurationAsync(object) Declaration Task<TwitchResponse<object>> PutExtensionConfigurationAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutExtensionRequiredConfigurationAsync(object) Declaration Task<TwitchResponse<object>> PutExtensionRequiredConfigurationAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutExtensionsAsync(ExtensionMap) Updates an installed extension’s information. Declaration Task<TwitchResponse<ExtensionMap>> PutExtensionsAsync(ExtensionMap args) Parameters Type Name Description ExtensionMap args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ExtensionMap>> A single ExtensionMap object. Remarks Requires a user access token with the user:read:broadcast or user:edit:broadcast scope. Exceptions Type Condition TwitchRestException 401 Unauthorized | Improve this Doc View Source PutShieldModeAsync(object) Declaration Task<TwitchResponse<object>> PutShieldModeAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutTagsAsync(object) Declaration Task<TwitchResponse<object>> PutTagsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutUserAsync(string) Updates the specified user’s information. Declaration Task<TwitchResponse<User>> PutUserAsync(string description) Parameters Type Name Description string description Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<User>> A single User object. Remarks Requires a user access token with the user:edit scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized | Improve this Doc View Source PutUserChatColor(PutUserChatColorArgs) Updates the color used for the user's name in chat. Declaration Task PutUserChatColor(PutUserChatColorArgs args) Parameters Type Name Description PutUserChatColorArgs args Returns Type Description System.Threading.Tasks.Task Remarks Requires a user access token with the user:manage:chat_color scope. Exceptions Type Condition TwitchRestException 400 Bad Request, 401 Unauthorized, 403 Forbidden"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ITwitchIdentityApi.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ITwitchIdentityApi.html",
    "title": "Interface ITwitchIdentityApi | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ITwitchIdentityApi Inherited Members System.IDisposable.Dispose() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public interface ITwitchIdentityApi : IDisposable Methods | Improve this Doc View Source PostAccessTokenAsync(PostAppAccessTokenArgs) Declaration Task<AppIdentity> PostAccessTokenAsync(PostAppAccessTokenArgs args) Parameters Type Name Description PostAppAccessTokenArgs args Returns Type Description System.Threading.Tasks.Task<TResult><AppIdentity> | Improve this Doc View Source PostAccessTokenAsync(PostUserAccessTokenArgs) Declaration Task<UserIdentity> PostAccessTokenAsync(PostUserAccessTokenArgs args) Parameters Type Name Description PostUserAccessTokenArgs args Returns Type Description System.Threading.Tasks.Task<TResult><UserIdentity> | Improve this Doc View Source PostRefreshTokenAsync(PostRefreshTokenArgs) Declaration Task<UserIdentity> PostRefreshTokenAsync(PostRefreshTokenArgs args) Parameters Type Name Description PostRefreshTokenArgs args Returns Type Description System.Threading.Tasks.Task<TResult><UserIdentity> | Improve this Doc View Source RevokeTokenAsync(PostRevokeTokenArgs) Declaration Task RevokeTokenAsync(PostRevokeTokenArgs args) Parameters Type Name Description PostRevokeTokenArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ValidateAsync(string) Declaration Task<AccessTokenInfo> ValidateAsync(string token) Parameters Type Name Description string token Returns Type Description System.Threading.Tasks.Task<TResult><AccessTokenInfo>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.MockMessage.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.MockMessage.html",
    "title": "Class MockMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MockMessage Inheritance object MockMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class MockMessage Constructors | Improve this Doc View Source MockMessage() Declaration public MockMessage() | Improve this Doc View Source MockMessage(string, string) Declaration public MockMessage(string id, string text) Parameters Type Name Description string id string text Properties | Improve this Doc View Source Id A caller-defined ID used to correlate this message with the same message in the response. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source IsPermitted indicates whether Twitch would approve the message or hold it for moderator review. Declaration public bool? IsPermitted { get; set; } Property Value Type Description bool? | Improve this Doc View Source Text The message to check. Declaration public string Text { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ModifyChannelArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ModifyChannelArgs.html",
    "title": "Class ModifyChannelArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModifyChannelArgs Inheritance object ModifyChannelArgs Implements IScoped Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ModifyChannelArgs : IScoped Properties | Improve this Doc View Source BroadcasterLanguage The user’s preferred language. Set the value to an ISO 639-1 two-letter language code. Declaration public string BroadcasterLanguage { get; set; } Property Value Type Description string | Improve this Doc View Source Delay The number of seconds you want your broadcast buffered before streaming it live. Declaration public int? Delay { get; set; } Property Value Type Description int? Remarks Only channels with Partner status can change this property. Max value is 900. | Improve this Doc View Source GameId The ID of the game that the user plays. Declaration public string GameId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source Tags A collection of channel-defined tags to apply to the channel. Declaration public List<string> Tags { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> | Improve this Doc View Source Title The title of the user’s stream. Declaration public string Title { get; set; } Property Value Type Description string Implements IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ModifyRedemptionsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ModifyRedemptionsArgs.html",
    "title": "Class ModifyRedemptionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModifyRedemptionsArgs Inheritance object QueryMap<string[]> ModifyRedemptionsArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string[]>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string[]>.CreateQueryMap() QueryMap<string[]>.IDictionary<string, string[]>.this[string] QueryMap<string[]>.IDictionary<string, string[]>.Keys QueryMap<string[]>.IDictionary<string, string[]>.Values QueryMap<string[]>.IDictionary<string, string[]>.Add(string, string[]) QueryMap<string[]>.IDictionary<string, string[]>.ContainsKey(string) QueryMap<string[]>.IDictionary<string, string[]>.Remove(string) QueryMap<string[]>.IDictionary<string, string[]>.TryGetValue(string, out string[]) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Count QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.IsReadOnly QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Add(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Remove(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Clear() QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.Contains(KeyValuePair<string, string[]>) QueryMap<string[]>.ICollection<KeyValuePair<string, string[]>>.CopyTo(KeyValuePair<string, string[]>[], int) QueryMap<string[]>.IEnumerable<KeyValuePair<string, string[]>>.GetEnumerator() QueryMap<string[]>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ModifyRedemptionsArgs : QueryMap<string[]>, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable, IScoped Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster that owns the custom reward. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source Ids A list of IDs to filter the redemptions by. Declaration public List<string> Ids { get; set; } Property Value Type Description System.Collections.Generic.List<T><string> Remarks You may specify a maximum of 50 IDs. | Improve this Doc View Source RewardId The ID that identifies the custom reward whose redemptions you want to get. Declaration public string RewardId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string[]> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string[]> Overrides AuxLabs.SimpleTwitch.QueryMap<string[]>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Pagination.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Pagination.html",
    "title": "Struct Pagination | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct Pagination Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public struct Pagination Properties | Improve this Doc View Source Cursor The cursor used to get the next page of results. Declaration public string Cursor { readonly get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PatchChatSettingsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PatchChatSettingsArgs.html",
    "title": "Class PatchChatSettingsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchChatSettingsArgs Inheritance object PatchChatSettingsArgs ChatSettings Implements IScoped Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PatchChatSettingsArgs : IScoped Properties | Improve this Doc View Source FollowerOnlyMinutes The length of time that users must follow the broadcaster before being able to participate in the chat. Declaration public int FollowerOnlyMinutes { get; set; } Property Value Type Description int | Improve this Doc View Source IsEmoteOnly Determines whether chat messages must contain only emotes. Declaration public bool IsEmoteOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source IsFollowerOnly Determines whether the broadcaster restricts the chat room to followers only. Declaration public bool IsFollowerOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source IsModeratorDelayed Determines whether the broadcaster adds a short delay before chat messages appear in the chat room. Declaration public bool IsModeratorDelayed { get; set; } Property Value Type Description bool | Improve this Doc View Source IsSlowEnabled Determines whether the broadcaster limits how often users in the chat room are allowed to send messages. Declaration public bool IsSlowEnabled { get; set; } Property Value Type Description bool | Improve this Doc View Source IsSubscriberOnly Determines whether only users that subscribe to the broadcaster’s channel may talk in the chat room. Declaration public bool IsSubscriberOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source IsUniqueEnabled Determines whether the broadcaster requires users to post only unique messages in the chat room. Declaration public bool IsUniqueEnabled { get; set; } Property Value Type Description bool | Improve this Doc View Source ModeratorDelaySeconds The amount of time that messages are delayed before appearing in chat. Declaration public int ModeratorDelaySeconds { get; set; } Property Value Type Description int | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source SlowSeconds The amount of time that users must wait between sending messages. Declaration public int SlowSeconds { get; set; } Property Value Type Description int Implements IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostAnnouncementArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostAnnouncementArgs.html",
    "title": "Class PostAnnouncementArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostAnnouncementArgs Inheritance object PostAnnouncementArgs Implements IScoped Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostAnnouncementArgs : IScoped Properties | Improve this Doc View Source Color The color used to highlight the announcement. Declaration public AnnouncementColor? Color { get; set; } Property Value Type Description AnnouncementColor? | Improve this Doc View Source Message The announcement to make in the broadcaster’s chat room. Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Implements IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostAppAccessTokenArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostAppAccessTokenArgs.html",
    "title": "Class PostAppAccessTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostAppAccessTokenArgs Inheritance object QueryMap<string> QueryMap PostAppAccessTokenArgs PostRefreshTokenArgs PostUserAccessTokenArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostAppAccessTokenArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Properties | Improve this Doc View Source ClientId Your app’s registered client ID. Declaration public string ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source ClientSecret Your app’s registered client secret. Declaration public string ClientSecret { get; set; } Property Value Type Description string | Improve this Doc View Source GrantType Constant value, this is set internally. Declaration public string GrantType { get; protected set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostAutomodMessageArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostAutomodMessageArgs.html",
    "title": "Class PostAutomodMessageArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostAutomodMessageArgs Inheritance object QueryMap<string> QueryMap PostAutomodMessageArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostAutomodMessageArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Properties | Improve this Doc View Source Action The action to take for the message. Declaration public AutomodAction Action { get; set; } Property Value Type Description AutomodAction | Improve this Doc View Source MessageId The ID of the message to allow or deny. Declaration public string MessageId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source UserId The moderator who is approving or denying the held message. Declaration public string UserId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostChannelCommercialArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostChannelCommercialArgs.html",
    "title": "Class PostChannelCommercialArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostChannelCommercialArgs Inheritance object QueryMap<string> QueryMap PostChannelCommercialArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostChannelCommercialArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Constructors | Improve this Doc View Source PostChannelCommercialArgs() Declaration public PostChannelCommercialArgs() | Improve this Doc View Source PostChannelCommercialArgs(string, int) Declaration public PostChannelCommercialArgs(string broadcasterId, int length) Parameters Type Name Description string broadcasterId int length Properties | Improve this Doc View Source BroadcasterId The ID of the partner or affiliate broadcaster that wants to run the commercial. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source Length The length of the commercial to run, in seconds. Declaration public int? Length { get; set; } Property Value Type Description int? Remarks If specified, the minimum value is 1 and the maximum value is 180. | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostClipArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostClipArgs.html",
    "title": "Class PostClipArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostClipArgs Inheritance object QueryMap<string> QueryMap PostClipArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostClipArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Properties | Improve this Doc View Source BroadcasterId The ID of the broadcaster whose stream you want to create a clip from. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source HasDelay Determines whether the API captures the clip at the moment the viewer requests it or after a delay. Declaration public bool? HasDelay { get; set; } Property Value Type Description bool? | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostEnforcementStatusArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostEnforcementStatusArgs.html",
    "title": "Class PostEnforcementStatusArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostEnforcementStatusArgs Inheritance object PostEnforcementStatusArgs Implements IScoped Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostEnforcementStatusArgs : IScoped Properties | Improve this Doc View Source Messages The list of messages to check. Declaration public List<MockMessage> Messages { get; set; } Property Value Type Description System.Collections.Generic.List<T><MockMessage> | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] Implements IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostEventSubscriptionArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostEventSubscriptionArgs.html",
    "title": "Class PostEventSubscriptionArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostEventSubscriptionArgs Inheritance object PostEventSubscriptionArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostEventSubscriptionArgs Properties | Improve this Doc View Source Condition Parameter values that are specific to the specified subscription type. Declaration public IEventCondition Condition { get; set; } Property Value Type Description IEventCondition | Improve this Doc View Source Cost The amount that the subscription counts against your limit. Declaration public int Cost { get; set; } Property Value Type Description int | Improve this Doc View Source Transport The transport details that you want Twitch to use when sending you notifications. Declaration public AcceptedTransport Transport { get; set; } Property Value Type Description AcceptedTransport | Improve this Doc View Source Type The type of subscription to create. Declaration public EventSubType Type { get; set; } Property Value Type Description EventSubType | Improve this Doc View Source Version The version number that identifies the definition of the subscription type that you want the response to use. Declaration public string Version { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostRefreshTokenArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostRefreshTokenArgs.html",
    "title": "Class PostRefreshTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRefreshTokenArgs Inheritance object QueryMap<string> QueryMap PostAppAccessTokenArgs PostRefreshTokenArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members PostAppAccessTokenArgs.ClientId PostAppAccessTokenArgs.ClientSecret PostAppAccessTokenArgs.GrantType QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostRefreshTokenArgs : PostAppAccessTokenArgs, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Constructors | Improve this Doc View Source PostRefreshTokenArgs() Declaration public PostRefreshTokenArgs() Properties | Improve this Doc View Source RefreshToken The refresh token issued to the client. Declaration public string RefreshToken { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides PostAppAccessTokenArgs.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostRevokeTokenArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostRevokeTokenArgs.html",
    "title": "Class PostRevokeTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRevokeTokenArgs Inheritance object QueryMap<string> QueryMap PostRevokeTokenArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostRevokeTokenArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Properties | Improve this Doc View Source ClientId Your app’s registered client ID. Declaration public string ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source Token The access token to revoke. Declaration public string Token { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostRewardArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostRewardArgs.html",
    "title": "Class PostRewardArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRewardArgs Inheritance object PostRewardArgs Implements IScoped Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostRewardArgs : IScoped Properties | Improve this Doc View Source BackgroundColor The background color to use for the reward. Declaration public Color? BackgroundColor { get; set; } Property Value Type Description System.Drawing.Color? | Improve this Doc View Source Cost The cost of the reward, in channel points. Declaration public uint Cost { get; set; } Property Value Type Description uint | Improve this Doc View Source GlobalCooldownSeconds The cooldown period, in seconds. Declaration public int? GlobalCooldownSeconds { get; set; } Property Value Type Description int? | Improve this Doc View Source IsEnabled Determines whether the reward is enabled. Declaration public bool? IsEnabled { get; set; } Property Value Type Description bool? | Improve this Doc View Source IsGlobalCooldownEnabled Determines whether to apply a cooldown period between redemptions Declaration public bool? IsGlobalCooldownEnabled { get; set; } Property Value Type Description bool? | Improve this Doc View Source IsMaxPerStreamEnabled Determines whether to limit the maximum number of redemptions allowed per live stream. Declaration public bool? IsMaxPerStreamEnabled { get; set; } Property Value Type Description bool? | Improve this Doc View Source IsMaxPerUserEnabled Determines whether to limit the maximum number of redemptions allowed per user per stream Declaration public bool? IsMaxPerUserEnabled { get; set; } Property Value Type Description bool? | Improve this Doc View Source IsUserInputRequired Determines whether the user needs to enter information when redeeming the reward. Declaration public bool? IsUserInputRequired { get; set; } Property Value Type Description bool? | Improve this Doc View Source MaxPerStream The maximum number of redemptions allowed per live stream. Declaration public int? MaxPerStream { get; set; } Property Value Type Description int? | Improve this Doc View Source MaxPerUser The maximum number of redemptions allowed per user per stream. Declaration public int? MaxPerUser { get; set; } Property Value Type Description int? | Improve this Doc View Source Prompt The prompt shown to the viewer when they redeem the reward. Declaration public string Prompt { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source ShouldSkipRequestQueue Determines whether redemptions should be set to fulfilled status immediately when a reward is redeemed. Declaration public bool? ShouldSkipRequestQueue { get; set; } Property Value Type Description bool? | Improve this Doc View Source Title The custom reward’s title. Declaration public string Title { get; set; } Property Value Type Description string Remarks The title may contain a maximum of 45 characters and it must be unique amongst all of the broadcaster’s custom rewards. Implements IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostShoutoutArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostShoutoutArgs.html",
    "title": "Class PostShoutoutArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostShoutoutArgs Inheritance object QueryMap<string> QueryMap PostShoutoutArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostShoutoutArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Properties | Improve this Doc View Source FromBroadcasterId The ID of the broadcaster that’s sending the Shoutout. Declaration public string FromBroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source ModeratorId The ID of the broadcaster or a user that is one of the broadcaster’s moderators. Declaration public string ModeratorId { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source ToBroadcasterId The ID of the broadcaster that’s receiving the Shoutout. Declaration public string ToBroadcasterId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PostUserAccessTokenArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PostUserAccessTokenArgs.html",
    "title": "Class PostUserAccessTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostUserAccessTokenArgs Inheritance object QueryMap<string> QueryMap PostAppAccessTokenArgs PostUserAccessTokenArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable Inherited Members PostAppAccessTokenArgs.ClientId PostAppAccessTokenArgs.ClientSecret PostAppAccessTokenArgs.GrantType QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PostUserAccessTokenArgs : PostAppAccessTokenArgs, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Constructors | Improve this Doc View Source PostUserAccessTokenArgs() Declaration public PostUserAccessTokenArgs() Properties | Improve this Doc View Source AuthorizationCode The code that the /authorize response returned in the code query parameter. Declaration public string AuthorizationCode { get; set; } Property Value Type Description string | Improve this Doc View Source RedirectUri Your app’s registered redirect URI. Declaration public string RedirectUri { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides PostAppAccessTokenArgs.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ProductData.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ProductData.html",
    "title": "Class ProductData | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ProductData Inheritance object ProductData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class ProductData Properties | Improve this Doc View Source Cost Contains details about the digital product’s cost. Declaration public Cost Cost { get; set; } Property Value Type Description Cost | Improve this Doc View Source DisplayName The name of the digital product. Declaration public string DisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source Domain Set to twitch.ext. + the extension's ID. Declaration public string Domain { get; set; } Property Value Type Description string | Improve this Doc View Source ExpiresAt This is always null since you may purchase only unexpired products. Declaration public DateTime? ExpiresAt { get; set; } Property Value Type Description System.DateTime? | Improve this Doc View Source IsBroadcast Determines whether the data was broadcast to all instances of the extension. Declaration public bool IsBroadcast { get; set; } Property Value Type Description bool | Improve this Doc View Source IsInDevelopment Determines whether the product is in development. Declaration public bool IsInDevelopment { get; set; } Property Value Type Description bool | Improve this Doc View Source Sku An ID that identifies the digital product. Declaration public string Sku { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.ProductType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.ProductType.html",
    "title": "Enum ProductType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ProductType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum ProductType Fields Name Description BitsInExtension None Extension Methods EnumHelper.GetEnumMemberValue<ProductType>(ProductType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PutAutomodSettingsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PutAutomodSettingsArgs.html",
    "title": "Class PutAutomodSettingsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutAutomodSettingsArgs Inheritance object PutAutomodSettingsArgs Implements IScoped Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PutAutomodSettingsArgs : IScoped Properties | Improve this Doc View Source Aggression The Automod level for hostility involving aggression. Declaration public int Aggression { get; set; } Property Value Type Description int | Improve this Doc View Source Bullying The Automod level for hostility involving name calling or insults. Declaration public int Bullying { get; set; } Property Value Type Description int | Improve this Doc View Source Disability The Automod level for discrimination against disability. Declaration public int Disability { get; set; } Property Value Type Description int | Improve this Doc View Source Misogyny The Automod level for discrimination against women. Declaration public int Misogyny { get; set; } Property Value Type Description int | Improve this Doc View Source OverallLevel The default AutoMod level for the broadcaster. Declaration public int? OverallLevel { get; set; } Property Value Type Description int? | Improve this Doc View Source RaceEthnicityOrReligion The Automod level for racial discrimination. Declaration public int RaceEthnicityOrReligion { get; set; } Property Value Type Description int | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source SexBasedTerms The Automod level for sexual content. Declaration public int SexBasedTerms { get; set; } Property Value Type Description int | Improve this Doc View Source SexualitySexOrGender The AutoMod level for discrimination based on sexuality, sex, or gender. Declaration public int SexualitySexOrGender { get; set; } Property Value Type Description int | Improve this Doc View Source Swearing The Automod level for profanity. Declaration public int Swearing { get; set; } Property Value Type Description int Implements IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PutBlockArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PutBlockArgs.html",
    "title": "Class PutBlockArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutBlockArgs Inheritance object QueryMap<string> QueryMap PutBlockArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PutBlockArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Properties | Improve this Doc View Source Context The location where the harassment took place that is causing the brodcaster to block the user. Declaration public BlockContext? Context { get; set; } Property Value Type Description BlockContext? | Improve this Doc View Source Reason The reason that the broadcaster is blocking the user. Declaration public string Reason { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source TargetUserId The ID of the user to block. Declaration public string TargetUserId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.PutUserChatColorArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.PutUserChatColorArgs.html",
    "title": "Class PutUserChatColorArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutUserChatColorArgs Inheritance object QueryMap<string> QueryMap PutUserChatColorArgs Implements System.Collections.Generic.IDictionary<TKey, TValue><string, string> System.Collections.Generic.ICollection<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.Generic.IEnumerable<T><System.Collections.Generic.KeyValuePair<TKey, TValue><string, string>> System.Collections.IEnumerable IScoped Inherited Members QueryMap<string>.IDictionary<string, string>.this[string] QueryMap<string>.IDictionary<string, string>.Keys QueryMap<string>.IDictionary<string, string>.Values QueryMap<string>.IDictionary<string, string>.Add(string, string) QueryMap<string>.IDictionary<string, string>.ContainsKey(string) QueryMap<string>.IDictionary<string, string>.Remove(string) QueryMap<string>.IDictionary<string, string>.TryGetValue(string, out string) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Count QueryMap<string>.ICollection<KeyValuePair<string, string>>.IsReadOnly QueryMap<string>.ICollection<KeyValuePair<string, string>>.Add(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Remove(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.Clear() QueryMap<string>.ICollection<KeyValuePair<string, string>>.Contains(KeyValuePair<string, string>) QueryMap<string>.ICollection<KeyValuePair<string, string>>.CopyTo(KeyValuePair<string, string>[], int) QueryMap<string>.IEnumerable<KeyValuePair<string, string>>.GetEnumerator() QueryMap<string>.IEnumerable.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class PutUserChatColorArgs : QueryMap, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IScoped Properties | Improve this Doc View Source Color The color to use for the user’s name in chat. Declaration public ChatColor? Color { get; set; } Property Value Type Description ChatColor? | Improve this Doc View Source CustomColor Turbo and Prime users may specify a custom color. Declaration public Color? CustomColor { get; set; } Property Value Type Description System.Drawing.Color? | Improve this Doc View Source Scopes Declaration public string[] Scopes { get; } Property Value Type Description string[] | Improve this Doc View Source UserId The ID of the user whose chat color you want to update. Declaration public string UserId { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CreateQueryMap() Declaration public override IDictionary<string, string> CreateQueryMap() Returns Type Description System.Collections.Generic.IDictionary<TKey, TValue><string, string> Overrides AuxLabs.SimpleTwitch.QueryMap<string>.CreateQueryMap() Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IScoped"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RaidCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RaidCondition.html",
    "title": "Class RaidCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RaidCondition Inheritance object RaidCondition Implements IEventCondition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class RaidCondition : IEventCondition Constructors | Improve this Doc View Source RaidCondition(string, string) Declaration public RaidCondition(string fromBroadcasterId, string toBroadcasterId) Parameters Type Name Description string fromBroadcasterId string toBroadcasterId Properties | Improve this Doc View Source FromBroadcasterId Optional. The broadcaster user ID that created the channel raid you want to get notifications for. Declaration public string FromBroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source ToBroadcasterId Optional. The broadcaster user ID that received the channel raid you want to get notifications for. Declaration public string ToBroadcasterId { get; set; } Property Value Type Description string Implements IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RateLimitInfo.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RateLimitInfo.html",
    "title": "Struct RateLimitInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct RateLimitInfo Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public struct RateLimitInfo Properties | Improve this Doc View Source IsGlobal Declaration public readonly bool IsGlobal { get; } Property Value Type Description bool | Improve this Doc View Source Lag Declaration public readonly TimeSpan? Lag { get; } Property Value Type Description TimeSpan? | Improve this Doc View Source Limit Declaration public readonly int? Limit { get; } Property Value Type Description int? | Improve this Doc View Source Remaining Declaration public readonly int? Remaining { get; } Property Value Type Description int? | Improve this Doc View Source Reset Declaration public readonly DateTimeOffset? Reset { get; } Property Value Type Description System.DateTimeOffset?"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Redemption.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Redemption.html",
    "title": "Class Redemption | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Redemption Inheritance object Redemption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Redemption Properties | Improve this Doc View Source BroadcasterId The ID that uniquely identifies the broadcaster. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterLogin The broadcaster’s login name. Declaration public string BroadcasterLogin { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterName The broadcaster’s display name. Declaration public string BroadcasterName { get; set; } Property Value Type Description string | Improve this Doc View Source Id The ID that uniquely identifies this redemption. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source RedeemedAt The date and time of when the reward was redeemed Declaration public DateTime RedeemedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Reward The reward that the user redeemed. Declaration public SimpleReward Reward { get; set; } Property Value Type Description SimpleReward | Improve this Doc View Source Status The state of the redemption. Declaration public RedemptionStatus Status { get; set; } Property Value Type Description RedemptionStatus | Improve this Doc View Source UserId The ID that uniquely identifies the user that redeemed the reward. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserInput The text the user entered at the prompt when they redeemed the reward. Declaration public string UserInput { get; set; } Property Value Type Description string | Improve this Doc View Source UserLogin The user’s login name. Declaration public string UserLogin { get; set; } Property Value Type Description string | Improve this Doc View Source UserName The user’s display name. Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RedemptionSort.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RedemptionSort.html",
    "title": "Enum RedemptionSort | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum RedemptionSort Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum RedemptionSort Fields Name Description Newest Oldest Extension Methods EnumHelper.GetEnumMemberValue<RedemptionSort>(RedemptionSort)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RedemptionStatus.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RedemptionStatus.html",
    "title": "Enum RedemptionStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum RedemptionStatus Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum RedemptionStatus Fields Name Description Cancelled Fulfilled Unfulfilled Unknown Extension Methods EnumHelper.GetEnumMemberValue<RedemptionStatus>(RedemptionStatus)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RestError.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RestError.html",
    "title": "Class RestError | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestError Inheritance object RestError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class RestError Properties | Improve this Doc View Source Code Declaration public int? Code { get; set; } Property Value Type Description int? | Improve this Doc View Source Error Declaration public string Error { get; set; } Property Value Type Description string | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Reward.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Reward.html",
    "title": "Class Reward | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Reward Inheritance object SimpleReward Reward Inherited Members SimpleReward.Id SimpleReward.Title SimpleReward.Prompt SimpleReward.Cost object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Reward : SimpleReward Properties | Improve this Doc View Source BackgroundColor The background color to use for the reward. Declaration public Color BackgroundColor { get; set; } Property Value Type Description System.Drawing.Color | Improve this Doc View Source BroadcasterId The ID that uniquely identifies the broadcaster. Declaration public string BroadcasterId { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterLogin The broadcaster’s login name. Declaration public string BroadcasterLogin { get; set; } Property Value Type Description string | Improve this Doc View Source BroadcasterName The broadcaster’s display name. Declaration public string BroadcasterName { get; set; } Property Value Type Description string | Improve this Doc View Source CooldownExpiresAt The timestamp of when the cooldown period expires. Declaration public DateTime CooldownExpiresAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source DefaultImages A set of default images for the reward. Declaration public IReadOnlyCollection<TwitchImage> DefaultImages { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><TwitchImage> | Improve this Doc View Source GlobalCooldownSetting Determines whether to apply a cooldown period between redemptions. Declaration public RewardSetting GlobalCooldownSetting { get; set; } Property Value Type Description RewardSetting | Improve this Doc View Source Images A set of custom images for the reward. Declaration public IReadOnlyCollection<TwitchImage> Images { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><TwitchImage> | Improve this Doc View Source IsEnabled Determines whether the reward is enabled. Declaration public bool IsEnabled { get; set; } Property Value Type Description bool | Improve this Doc View Source IsInStock Determines whether the reward is currently in stock. Declaration public bool IsInStock { get; set; } Property Value Type Description bool | Improve this Doc View Source IsPaused Determines whether the reward is currently paused. Declaration public bool IsPaused { get; set; } Property Value Type Description bool | Improve this Doc View Source IsUserInputRequired Determines whether the user must enter information when redeeming the reward. Declaration public bool IsUserInputRequired { get; set; } Property Value Type Description bool | Improve this Doc View Source MaxPerStreamSetting Determiness whether to apply a maximum to the number to the redemptions allowed per live stream. Declaration public RewardSetting MaxPerStreamSetting { get; set; } Property Value Type Description RewardSetting | Improve this Doc View Source MaxPerUserSetting Determines whether to apply a maximum to the number of redemptions allowed per user per live stream. Declaration public RewardSetting MaxPerUserSetting { get; set; } Property Value Type Description RewardSetting | Improve this Doc View Source ShouldSkipRequestQueue Determines whether redemptions should be set to fulfilled status immediately when a reward is redeemed. Declaration public bool ShouldSkipRequestQueue { get; set; } Property Value Type Description bool | Improve this Doc View Source TotalRedemptions The number of redemptions redeemed during the current live stream. Declaration public int TotalRedemptions { get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RewardCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RewardCondition.html",
    "title": "Class RewardCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardCondition Inheritance object BroadcasterCondition RewardCondition Implements IEventCondition Inherited Members BroadcasterCondition.BroadcasterId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class RewardCondition : BroadcasterCondition, IEventCondition Constructors | Improve this Doc View Source RewardCondition() Declaration public RewardCondition() | Improve this Doc View Source RewardCondition(string, string) Declaration public RewardCondition(string broadcasterId, string rewardId) Parameters Type Name Description string broadcasterId string rewardId Properties | Improve this Doc View Source RewardId Optional. Specify a reward id to only receive notifications for a specific reward. Declaration public string RewardId { get; set; } Property Value Type Description string Implements IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RewardSetting.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RewardSetting.html",
    "title": "Struct RewardSetting | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct RewardSetting Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public readonly struct RewardSetting Constructors | Improve this Doc View Source RewardSetting(bool, uint) Declaration public RewardSetting(bool isEnabled, uint value) Parameters Type Name Description bool isEnabled uint value Properties | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description bool | Improve this Doc View Source Value Declaration public uint Value { get; } Property Value Type Description uint"
  },
  "api/AuxLabs.SimpleTwitch.Rest.RFCDateTimeConverter.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.RFCDateTimeConverter.html",
    "title": "Class RFCDateTimeConverter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RFCDateTimeConverter Inheritance object RFCDateTimeConverter Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class RFCDateTimeConverter : JsonConverter<DateTime> Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override DateTime Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader System.Type typeToConvert JsonSerializerOptions options Returns Type Description System.DateTime | Improve this Doc View Source Write(Utf8JsonWriter, DateTime, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, DateTime value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer System.DateTime value JsonSerializerOptions options"
  },
  "api/AuxLabs.SimpleTwitch.Rest.SearchChannelsArgs.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.SearchChannelsArgs.html",
    "title": "Class SearchChannelsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SearchChannelsArgs Inheritance object SearchChannelsArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class SearchChannelsArgs"
  },
  "api/AuxLabs.SimpleTwitch.Rest.SimpleChatUser.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.SimpleChatUser.html",
    "title": "Class SimpleChatUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleChatUser Inheritance object SimpleUser SimpleChatUser Implements IUser IEntity<string> Inherited Members SimpleUser.Id SimpleUser.Name SimpleUser.DisplayName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class SimpleChatUser : SimpleUser, IUser, IEntity<string> Properties | Improve this Doc View Source Color The color of the user's name in chat. Declaration public Color Color { get; set; } Property Value Type Description System.Drawing.Color Implements IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.SimpleClip.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.SimpleClip.html",
    "title": "Class SimpleClip | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleClip Inheritance object SimpleClip Clip Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class SimpleClip Properties | Improve this Doc View Source EditUrl A URL that you can use to edit the clip’s title, identify the part of the clip to publish, and publish the clip. Declaration public string EditUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Id An ID that uniquely identifies the clip. Declaration public string Id { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.SimpleExtension.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.SimpleExtension.html",
    "title": "Class SimpleExtension | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleExtension Inheritance object SimpleExtension ComponentExtension Extension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class SimpleExtension Properties | Improve this Doc View Source Id An ID that identifies the extension. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source IsActive Determines the extension’s activation state. Declaration public bool? IsActive { get; set; } Property Value Type Description bool? | Improve this Doc View Source Name The extension’s name. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source Version The extension’s version. Declaration public string Version { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.SimpleReward.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.SimpleReward.html",
    "title": "Class SimpleReward | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleReward Inheritance object SimpleReward Reward Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class SimpleReward Properties | Improve this Doc View Source Cost The cost of the reward in channel points. Declaration public int Cost { get; set; } Property Value Type Description int | Improve this Doc View Source Id The ID that uniquely identifies this custom reward. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Prompt The prompt shown to the viewer when they redeem the reward if user input is required. Declaration public string Prompt { get; set; } Property Value Type Description string | Improve this Doc View Source Title The title of the reward. Declaration public string Title { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.SimpleUser.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.SimpleUser.html",
    "title": "Class SimpleUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleUser Inheritance object SimpleUser SimpleChatUser User Implements IUser IEntity<string> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class SimpleUser : IUser, IEntity<string> Properties | Improve this Doc View Source DisplayName The user’s display name. Declaration public string DisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source Id The ID of the user Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Name The user’s login name. Declaration public string Name { get; set; } Property Value Type Description string Implements IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TokenType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TokenType.html",
    "title": "Enum TokenType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum TokenType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum TokenType Fields Name Description Bearer None Extension Methods EnumHelper.GetEnumMemberValue<TokenType>(TokenType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Transport.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Transport.html",
    "title": "Class Transport | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Transport Inheritance object Transport AcceptedTransport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Transport Properties | Improve this Doc View Source Callback The callback URL where the notifications are sent. Only required for webhooks. Declaration public string Callback { get; set; } Property Value Type Description string | Improve this Doc View Source Method The transport method. Declaration public TransportMethod Method { get; set; } Property Value Type Description TransportMethod | Improve this Doc View Source Secret The secret used to verify the signature. Only required for webhooks. Declaration public string Secret { get; set; } Property Value Type Description string Remarks The secret must be an ASCII string that’s a minimum of 10 characters long and a maximum of 100 characters long. | Improve this Doc View Source SessionId An ID that identifies the WebSocket to send notifications to. Only required for websockets. Declaration public string SessionId { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TransportMethod.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TransportMethod.html",
    "title": "Enum TransportMethod | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum TransportMethod Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum TransportMethod Fields Name Description Webhook WebSocket Extension Methods EnumHelper.GetEnumMemberValue<TransportMethod>(TransportMethod)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TwitchIdentityApiClient.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TwitchIdentityApiClient.html",
    "title": "Class TwitchIdentityApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchIdentityApiClient A client that implements Twitch's identity api for manging access tokens. Inheritance object TwitchIdentityApiClient Implements ITwitchIdentityApi System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class TwitchIdentityApiClient : ITwitchIdentityApi, IDisposable Constructors | Improve this Doc View Source TwitchIdentityApiClient() Declaration public TwitchIdentityApiClient() | Improve this Doc View Source TwitchIdentityApiClient(string, string, string) Declaration public TwitchIdentityApiClient(string clientId, string clientSecret, string url) Parameters Type Name Description string clientId string clientSecret string url | Improve this Doc View Source TwitchIdentityApiClient(string, string) Declaration public TwitchIdentityApiClient(string clientId, string clientSecret) Parameters Type Name Description string clientId string clientSecret | Improve this Doc View Source TwitchIdentityApiClient(string) Declaration public TwitchIdentityApiClient(string url) Parameters Type Name Description string url Properties | Improve this Doc View Source ClientId Your app’s registered client ID. Declaration public string ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source ClientSecret Your app’s registered client secret. Declaration public string ClientSecret { get; set; } Property Value Type Description string | Improve this Doc View Source Identity Information about the currently authorized user. Declaration public AppIdentity Identity { get; } Property Value Type Description AppIdentity | Improve this Doc View Source RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Improve this Doc View Source PostAccessTokenAsync(PostAppAccessTokenArgs) Get an access token that identifies you as the specified application Declaration public Task<AppIdentity> PostAccessTokenAsync(PostAppAccessTokenArgs args) Parameters Type Name Description PostAppAccessTokenArgs args Returns Type Description System.Threading.Tasks.Task<TResult><AppIdentity> | Improve this Doc View Source PostAccessTokenAsync(PostUserAccessTokenArgs) Get an access token that identifies you as the specified user Declaration public Task<UserIdentity> PostAccessTokenAsync(PostUserAccessTokenArgs args) Parameters Type Name Description PostUserAccessTokenArgs args Returns Type Description System.Threading.Tasks.Task<TResult><UserIdentity> | Improve this Doc View Source PostRefreshTokenAsync(PostRefreshTokenArgs) Refresh an expired user access token Declaration public Task<UserIdentity> PostRefreshTokenAsync(PostRefreshTokenArgs args) Parameters Type Name Description PostRefreshTokenArgs args Returns Type Description System.Threading.Tasks.Task<TResult><UserIdentity> | Improve this Doc View Source RevokeTokenAsync(PostRevokeTokenArgs) Revoke an access token that is no longer needed Declaration public Task RevokeTokenAsync(PostRevokeTokenArgs args) Parameters Type Name Description PostRevokeTokenArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ValidateAsync() Get an app identity using the provided app credentials. Declaration public Task<AppIdentity> ValidateAsync() Returns Type Description System.Threading.Tasks.Task<TResult><AppIdentity> | Improve this Doc View Source ValidateAsync(string, string) Get information relating to a user access token Declaration public Task<AccessTokenInfo> ValidateAsync(string token, string refreshToken) Parameters Type Name Description string token string refreshToken Returns Type Description System.Threading.Tasks.Task<TResult><AccessTokenInfo> | Improve this Doc View Source ValidateAsync(string) Get information relating to a user access token Declaration public Task<AccessTokenInfo> ValidateAsync(string token) Parameters Type Name Description string token Returns Type Description System.Threading.Tasks.Task<TResult><AccessTokenInfo> Implements ITwitchIdentityApi System.IDisposable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TwitchImage.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TwitchImage.html",
    "title": "Struct TwitchImage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct TwitchImage Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public struct TwitchImage Properties | Improve this Doc View Source LargeImageUrl A URL to the large version (112px x 112px) of the image. Declaration public string LargeImageUrl { readonly get; set; } Property Value Type Description string | Improve this Doc View Source MediumImageUrl A URL to the medium version (56px x 56px) of the image. Declaration public string MediumImageUrl { readonly get; set; } Property Value Type Description string | Improve this Doc View Source SmallImageUrl A URL to the small version (28px x 28px) of the image. Declaration public string SmallImageUrl { readonly get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TwitchMetaResponse-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TwitchMetaResponse-1.html",
    "title": "Class TwitchMetaResponse<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchMetaResponse<T> An object that represents data returned by a Twitch request, but with some metadata. Inheritance object TwitchResponse<T> TwitchMetaResponse<T> Inherited Members TwitchResponse<T>.Data object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class TwitchMetaResponse<T> : TwitchResponse<T> where T : class Type Parameters Name Description T Properties | Improve this Doc View Source DateRange A range of dates relating to the objects returned in . Declaration public DateRange? DateRange { get; set; } Property Value Type Description DateRange? | Improve this Doc View Source Pagination Contains information used to page through the list of results. Declaration public Pagination? Pagination { get; set; } Property Value Type Description Pagination? | Improve this Doc View Source Total The total number of objects returned in . Declaration public int? Total { get; set; } Property Value Type Description int?"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TwitchResponse-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TwitchResponse-1.html",
    "title": "Class TwitchResponse<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchResponse<T> An object that represents data returned by a Twitch request. Inheritance object TwitchResponse<T> EventSubResponse TwitchMetaResponse<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class TwitchResponse<T> where T : class Type Parameters Name Description T Properties | Improve this Doc View Source Data A collection of objects returned from a request Declaration public IReadOnlyCollection<T> Data { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><T>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TwitchRestApiClient.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TwitchRestApiClient.html",
    "title": "Class TwitchRestApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestApiClient Inheritance object TwitchRestApiClient Implements ITwitchApi System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class TwitchRestApiClient : ITwitchApi, IDisposable Constructors | Improve this Doc View Source TwitchRestApiClient(TwitchRestApiConfig) Declaration public TwitchRestApiClient(TwitchRestApiConfig config = null) Parameters Type Name Description TwitchRestApiConfig config | Improve this Doc View Source TwitchRestApiClient(string, TwitchRestApiConfig) Declaration public TwitchRestApiClient(string url, TwitchRestApiConfig config = null) Parameters Type Name Description string url TwitchRestApiConfig config Properties | Improve this Doc View Source Authorization Declaration public AuthenticationHeaderValue Authorization { get; set; } Property Value Type Description System.Net.Http.Headers.AuthenticationHeaderValue | Improve this Doc View Source ClientId Declaration public string ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source Identity Declaration public AppIdentity Identity { get; } Property Value Type Description AppIdentity Methods | Improve this Doc View Source DeleteBanAsync(object) Declaration public Task<TwitchResponse<object>> DeleteBanAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteBlockAsync(string) Declaration public Task DeleteBlockAsync(string targetUserId) Parameters Type Name Description string targetUserId Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source DeleteBlockedTermAsync(object) Declaration public Task<TwitchResponse<object>> DeleteBlockedTermAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteChatMessagesAsync(object) Declaration public Task<TwitchResponse<object>> DeleteChatMessagesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteEventSubcrptionAsync(string) Declaration public Task DeleteEventSubcrptionAsync(string id) Parameters Type Name Description string id Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source DeleteModeratorAsync(object) Declaration public Task<TwitchResponse<object>> DeleteModeratorAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteRaidAsync(object) Declaration public Task<TwitchResponse<object>> DeleteRaidAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteRewardAsync(string, string) Declaration public Task DeleteRewardAsync(string broadcasterId, string customRewardId) Parameters Type Name Description string broadcasterId string customRewardId Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source DeleteScheduleSegmentAsync(object) Declaration public Task<TwitchResponse<object>> DeleteScheduleSegmentAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source DeleteVideoAsync(DeleteVideosArgs) Declaration public Task<TwitchResponse<string>> DeleteVideoAsync(DeleteVideosArgs args) Parameters Type Name Description DeleteVideosArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<string>> | Improve this Doc View Source DeleteVipAsync(object) Declaration public Task<TwitchResponse<object>> DeleteVipAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Improve this Doc View Source GetActiveExtensionsAsync(string) Declaration public Task<TwitchResponse<ExtensionMap>> GetActiveExtensionsAsync(string userId) Parameters Type Name Description string userId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ExtensionMap>> | Improve this Doc View Source GetAutomodSettingsAsync(GetAutomodSettingsArgs) Declaration public Task<TwitchResponse<AutomodSettings>> GetAutomodSettingsAsync(GetAutomodSettingsArgs args) Parameters Type Name Description GetAutomodSettingsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<AutomodSettings>> | Improve this Doc View Source GetBadgesAsync() Declaration public Task<TwitchResponse<Badge>> GetBadgesAsync() Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Badge>> | Improve this Doc View Source GetBadgesAsync(string) Declaration public Task<TwitchResponse<Badge>> GetBadgesAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Badge>> | Improve this Doc View Source GetBannedUsersAsync(GetBannedUsersArgs) Declaration public Task<TwitchMetaResponse<Ban>> GetBannedUsersAsync(GetBannedUsersArgs args) Parameters Type Name Description GetBannedUsersArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Ban>> | Improve this Doc View Source GetBitsLeaderboardAsync(GetBitsLeaderboardArgs) Declaration public Task<TwitchMetaResponse<BitsUser>> GetBitsLeaderboardAsync(GetBitsLeaderboardArgs args) Parameters Type Name Description GetBitsLeaderboardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<BitsUser>> | Improve this Doc View Source GetBlockedTermsAsync(object) Declaration public Task<TwitchResponse<object>> GetBlockedTermsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetBlocksAsync(GetBlocksArgs) Declaration public Task<TwitchMetaResponse<SimpleUser>> GetBlocksAsync(GetBlocksArgs args) Parameters Type Name Description GetBlocksArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<SimpleUser>> | Improve this Doc View Source GetCalendarAsync(object) Declaration public Task<TwitchResponse<object>> GetCalendarAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetCategoriesAsync(object) Declaration public Task<TwitchResponse<object>> GetCategoriesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetChannelEditorsAsync(string) Declaration public Task<TwitchResponse<ChannelEditor>> GetChannelEditorsAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ChannelEditor>> | Improve this Doc View Source GetChannelsAsync(GetChannelsArgs) Declaration public Task<TwitchResponse<Channel>> GetChannelsAsync(GetChannelsArgs args) Parameters Type Name Description GetChannelsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Channel>> | Improve this Doc View Source GetChannelsAsync(SearchChannelsArgs) Declaration public Task<TwitchResponse<object>> GetChannelsAsync(SearchChannelsArgs args) Parameters Type Name Description SearchChannelsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetChannelsAsync(params string[]) Declaration public Task<TwitchResponse<Channel>> GetChannelsAsync(params string[] channelIds) Parameters Type Name Description string[] channelIds Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Channel>> | Improve this Doc View Source GetCharityCampaignAsync(string) Declaration public Task<TwitchResponse<CharityCampaign>> GetCharityCampaignAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<CharityCampaign>> | Improve this Doc View Source GetCharityDonationsAsync(GetCharityDonationsArgs) Declaration public Task<TwitchMetaResponse<CharityDonation>> GetCharityDonationsAsync(GetCharityDonationsArgs args) Parameters Type Name Description GetCharityDonationsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<CharityDonation>> | Improve this Doc View Source GetChatSettingsAsync(string, string) Declaration public Task<TwitchResponse<ChatSettings>> GetChatSettingsAsync(string broadcasterId, string moderatorId = null) Parameters Type Name Description string broadcasterId string moderatorId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ChatSettings>> | Improve this Doc View Source GetChattersAsync(GetChattersArgs) Declaration public Task<TwitchMetaResponse<SimpleUser>> GetChattersAsync(GetChattersArgs args) Parameters Type Name Description GetChattersArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<SimpleUser>> | Improve this Doc View Source GetCheermotesAsync(string) Declaration public Task<TwitchResponse<Cheermote>> GetCheermotesAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Cheermote>> | Improve this Doc View Source GetClipsAsync(GetClipsArgs) Declaration public Task<TwitchMetaResponse<Clip>> GetClipsAsync(GetClipsArgs args) Parameters Type Name Description GetClipsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Clip>> | Improve this Doc View Source GetCodeStatusAsync(object) Declaration public Task<TwitchResponse<object>> GetCodeStatusAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetCurrentPlaylistAsync(object) Declaration public Task<TwitchResponse<object>> GetCurrentPlaylistAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetCurrentTrackAsync(object) Declaration public Task<TwitchResponse<object>> GetCurrentTrackAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetDropsStatusAsync(object) Declaration public Task<TwitchResponse<object>> GetDropsStatusAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetEmotesAsync() Declaration public Task<TwitchResponse<GlobalEmote>> GetEmotesAsync() Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<GlobalEmote>> | Improve this Doc View Source GetEmotesAsync(string) Declaration public Task<TwitchResponse<Emote>> GetEmotesAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Emote>> | Improve this Doc View Source GetEmoteSetsAsync(GetEmoteSetsArgs) Declaration public Task<TwitchResponse<Emote>> GetEmoteSetsAsync(GetEmoteSetsArgs args) Parameters Type Name Description GetEmoteSetsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Emote>> | Improve this Doc View Source GetEventSubcriptionsAsync(GetEventSubscriptionsArgs) Declaration public Task<EventSubResponse> GetEventSubcriptionsAsync(GetEventSubscriptionsArgs args) Parameters Type Name Description GetEventSubscriptionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><EventSubResponse> | Improve this Doc View Source GetExtensionAnalyticsAsync(GetExtensionAnalyticsArgs) Declaration public Task<TwitchMetaResponse<ExtensionAnalytic>> GetExtensionAnalyticsAsync(GetExtensionAnalyticsArgs args) Parameters Type Name Description GetExtensionAnalyticsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<ExtensionAnalytic>> | Improve this Doc View Source GetExtensionBitsProductsAsync(object) Declaration public Task<TwitchResponse<object>> GetExtensionBitsProductsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionConfigurationAsync(object) Declaration public Task<TwitchResponse<object>> GetExtensionConfigurationAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionLiveChannelsAsync(object) Declaration public Task<TwitchResponse<object>> GetExtensionLiveChannelsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionsAsync(object) Declaration public Task<TwitchResponse<object>> GetExtensionsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionSecretsAsync(object) Declaration public Task<TwitchResponse<object>> GetExtensionSecretsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetExtensionTransactionsAsync(GetExtensionTransactionsArgs) Declaration public Task<TwitchMetaResponse<ExtensionTransaction>> GetExtensionTransactionsAsync(GetExtensionTransactionsArgs args) Parameters Type Name Description GetExtensionTransactionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<ExtensionTransaction>> | Improve this Doc View Source GetFollowedStreamsAsync(object) Declaration public Task<TwitchResponse<object>> GetFollowedStreamsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetFollowsAsync(GetFollowsArgs) Declaration public Task<TwitchMetaResponse<Follower>> GetFollowsAsync(GetFollowsArgs args) Parameters Type Name Description GetFollowsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Follower>> | Improve this Doc View Source GetGameAnalyticsAsync(GetGameAnalyticsArgs) Declaration public Task<TwitchMetaResponse<GameAnalytic>> GetGameAnalyticsAsync(GetGameAnalyticsArgs args) Parameters Type Name Description GetGameAnalyticsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<GameAnalytic>> | Improve this Doc View Source GetGamesAsync(object) Declaration public Task<TwitchResponse<object>> GetGamesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetGoalsAsync(string) Declaration public Task<TwitchResponse<Goal>> GetGoalsAsync(string broadcasterId) Parameters Type Name Description string broadcasterId Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Goal>> | Improve this Doc View Source GetHypetrainEventsAsync(GetHypeTrainsArgs) Declaration public Task<TwitchMetaResponse<HypeTrainInfo>> GetHypetrainEventsAsync(GetHypeTrainsArgs args) Parameters Type Name Description GetHypeTrainsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<HypeTrainInfo>> | Improve this Doc View Source GetModeratorsAsync(object) Declaration public Task<TwitchResponse<object>> GetModeratorsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetPlaylistsAsync(object) Declaration public Task<TwitchResponse<object>> GetPlaylistsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetPollAsync(object) Declaration public Task<TwitchResponse<object>> GetPollAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetPredictionAsync(object) Declaration public Task<TwitchResponse<object>> GetPredictionAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetReleasedExtensionsAsync(object) Declaration public Task<TwitchResponse<object>> GetReleasedExtensionsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetRewardRedemptionAsync(GetRedemptionsArgs) Declaration public Task<TwitchResponse<Redemption>> GetRewardRedemptionAsync(GetRedemptionsArgs args) Parameters Type Name Description GetRedemptionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Redemption>> | Improve this Doc View Source GetRewardsAsync(GetRewardArgs) Declaration public Task<TwitchResponse<Reward>> GetRewardsAsync(GetRewardArgs args) Parameters Type Name Description GetRewardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Reward>> | Improve this Doc View Source GetScheduleAsync(object) Declaration public Task<TwitchResponse<object>> GetScheduleAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetShieldModeAsync(object) Declaration public Task<TwitchResponse<object>> GetShieldModeAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetStreamKeyAsync(object) Declaration public Task<TwitchResponse<object>> GetStreamKeyAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetStreamMarkersAsync(object) Declaration public Task<TwitchResponse<object>> GetStreamMarkersAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetStreamsAsync(object) Declaration public Task<TwitchResponse<object>> GetStreamsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetSubscriberAsync(object) Declaration public Task<TwitchResponse<object>> GetSubscriberAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetSubscriptionsAsync(object) Declaration public Task<TwitchResponse<object>> GetSubscriptionsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTagsAsync(object) Declaration public Task<TwitchResponse<object>> GetTagsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTagsAsync(string) Declaration public Task<TwitchResponse<object>> GetTagsAsync(string id) Parameters Type Name Description string id Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTeamsAsync(object) Declaration public Task<TwitchResponse<object>> GetTeamsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTeamsAsync(string) Declaration public Task<TwitchResponse<object>> GetTeamsAsync(string id) Parameters Type Name Description string id Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetTopGamesAsync(object) Declaration public Task<TwitchResponse<object>> GetTopGamesAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source GetUserChatColorAsync(GetUserColorArgs) Declaration public Task<TwitchResponse<SimpleChatUser>> GetUserChatColorAsync(GetUserColorArgs args) Parameters Type Name Description GetUserColorArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<SimpleChatUser>> | Improve this Doc View Source GetUserExtensionsAsync() Declaration public Task<TwitchResponse<Extension>> GetUserExtensionsAsync() Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Extension>> | Improve this Doc View Source GetUsersAsync(GetUsersArgs) Declaration public Task<TwitchResponse<User>> GetUsersAsync(GetUsersArgs args) Parameters Type Name Description GetUsersArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<User>> | Improve this Doc View Source GetVideosAsync(GetVideosArgs) Declaration public Task<TwitchMetaResponse<Video>> GetVideosAsync(GetVideosArgs args) Parameters Type Name Description GetVideosArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchMetaResponse<Video>> | Improve this Doc View Source GetVipsAsync(object) Declaration public Task<TwitchResponse<object>> GetVipsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchChannelAsync(string, ModifyChannelArgs) Declaration public Task PatchChannelAsync(string broadcasterId, ModifyChannelArgs args) Parameters Type Name Description string broadcasterId ModifyChannelArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source PatchChatSettingsAsync(string, string, PatchChatSettingsArgs) Declaration public Task<TwitchResponse<ChatSettings>> PatchChatSettingsAsync(string broadcasterId, string moderatorId, PatchChatSettingsArgs args) Parameters Type Name Description string broadcasterId string moderatorId PatchChatSettingsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ChatSettings>> | Improve this Doc View Source PatchDropsStatusAsync(object) Declaration public Task<TwitchResponse<object>> PatchDropsStatusAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchPollAsync(object) Declaration public Task<TwitchResponse<object>> PatchPollAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchPredictionaAsync(object) Declaration public Task<TwitchResponse<object>> PatchPredictionaAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchRewardAsync(string, string, PostRewardArgs) Declaration public Task<TwitchResponse<Reward>> PatchRewardAsync(string broadcasterId, string rewardId, PostRewardArgs args) Parameters Type Name Description string broadcasterId string rewardId PostRewardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Reward>> | Improve this Doc View Source PatchRewardRedemptionAsync(RedemptionStatus, ModifyRedemptionsArgs) Declaration public Task<TwitchResponse<Redemption>> PatchRewardRedemptionAsync(RedemptionStatus status, ModifyRedemptionsArgs args) Parameters Type Name Description RedemptionStatus status ModifyRedemptionsArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Redemption>> | Improve this Doc View Source PatchScheduleAsync(object) Declaration public Task<TwitchResponse<object>> PatchScheduleAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PatchScheduleSegmentAsync(object) Declaration public Task<TwitchResponse<object>> PatchScheduleSegmentAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostAutomodMessageAsync(PostAutomodMessageArgs) Declaration public Task PostAutomodMessageAsync(PostAutomodMessageArgs args) Parameters Type Name Description PostAutomodMessageArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source PostBanAsync(object) Declaration public Task<TwitchResponse<object>> PostBanAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostBlockedTermAsync(object) Declaration public Task<TwitchResponse<object>> PostBlockedTermAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostChatAnnouncementAsync(string, string, PostAnnouncementArgs) Declaration public Task PostChatAnnouncementAsync(string broadcasterId, string moderatorId, PostAnnouncementArgs args) Parameters Type Name Description string broadcasterId string moderatorId PostAnnouncementArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source PostClipAsync(PostClipArgs) Declaration public Task<TwitchResponse<SimpleClip>> PostClipAsync(PostClipArgs args) Parameters Type Name Description PostClipArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<SimpleClip>> | Improve this Doc View Source PostCodeAsync(object) Declaration public Task<TwitchResponse<object>> PostCodeAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostCommercialAsync(PostChannelCommercialArgs) Declaration public Task<TwitchResponse<Commercial>> PostCommercialAsync(PostChannelCommercialArgs args) Parameters Type Name Description PostChannelCommercialArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Commercial>> | Improve this Doc View Source PostEnforcementStatusAsync(string, PostEnforcementStatusArgs) Declaration public Task<TwitchResponse<MockMessage>> PostEnforcementStatusAsync(string broadcasterId, PostEnforcementStatusArgs args) Parameters Type Name Description string broadcasterId PostEnforcementStatusArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<MockMessage>> | Improve this Doc View Source PostEventSubcriptionAsync(PostEventSubscriptionArgs) Declaration public Task<EventSubResponse> PostEventSubcriptionAsync(PostEventSubscriptionArgs args) Parameters Type Name Description PostEventSubscriptionArgs args Returns Type Description System.Threading.Tasks.Task<TResult><EventSubResponse> | Improve this Doc View Source PostExtensionChatMessageAsync(object) Declaration public Task<TwitchResponse<object>> PostExtensionChatMessageAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostExtensionPubsubMessageAsync(object) Declaration public Task<TwitchResponse<object>> PostExtensionPubsubMessageAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostExtensionSecretsAsync(object) Declaration public Task<TwitchResponse<object>> PostExtensionSecretsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostModeratorAsync(object) Declaration public Task<TwitchResponse<object>> PostModeratorAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostPollAsync(object) Declaration public Task<TwitchResponse<object>> PostPollAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostPredictionAsync(object) Declaration public Task<TwitchResponse<object>> PostPredictionAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostRaidAsync(object) Declaration public Task<TwitchResponse<object>> PostRaidAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostRewardsAsync(string, PostRewardArgs) Declaration public Task<TwitchResponse<Reward>> PostRewardsAsync(string broadcasterId, PostRewardArgs args) Parameters Type Name Description string broadcasterId PostRewardArgs args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<Reward>> | Improve this Doc View Source PostScheduleSegmentAsync(object) Declaration public Task<TwitchResponse<object>> PostScheduleSegmentAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostShoutoutAsync(PostShoutoutArgs) Declaration public Task PostShoutoutAsync(PostShoutoutArgs args) Parameters Type Name Description PostShoutoutArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source PostStreamMarkerAsync(object) Declaration public Task<TwitchResponse<object>> PostStreamMarkerAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostVipAsync(object) Declaration public Task<TwitchResponse<object>> PostVipAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PostWhisperAsync(string, string, string) Declaration public Task PostWhisperAsync(string fromUserId, string toUserId, string message) Parameters Type Name Description string fromUserId string toUserId string message Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source PutAutomodSettingsAsync(GetAutomodSettingsArgs, PutAutomodSettingsArgs) Declaration public Task<TwitchResponse<AutomodSettings>> PutAutomodSettingsAsync(GetAutomodSettingsArgs args, PutAutomodSettingsArgs body) Parameters Type Name Description GetAutomodSettingsArgs args PutAutomodSettingsArgs body Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<AutomodSettings>> | Improve this Doc View Source PutBlockAsync(PutBlockArgs) Declaration public Task PutBlockAsync(PutBlockArgs args) Parameters Type Name Description PutBlockArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source PutExtensionBitsProductsAsync(object) Declaration public Task<TwitchResponse<object>> PutExtensionBitsProductsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutExtensionConfigurationAsync(object) Declaration public Task<TwitchResponse<object>> PutExtensionConfigurationAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutExtensionRequiredConfigurationAsync(object) Declaration public Task<TwitchResponse<object>> PutExtensionRequiredConfigurationAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutExtensionsAsync(ExtensionMap) Declaration public Task<TwitchResponse<ExtensionMap>> PutExtensionsAsync(ExtensionMap args) Parameters Type Name Description ExtensionMap args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<ExtensionMap>> | Improve this Doc View Source PutShieldModeAsync(object) Declaration public Task<TwitchResponse<object>> PutShieldModeAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutTagsAsync(object) Declaration public Task<TwitchResponse<object>> PutTagsAsync(object args) Parameters Type Name Description object args Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<object>> | Improve this Doc View Source PutUserAsync(string) Declaration public Task<TwitchResponse<User>> PutUserAsync(string description) Parameters Type Name Description string description Returns Type Description System.Threading.Tasks.Task<TResult><TwitchResponse<User>> | Improve this Doc View Source PutUserChatColor(PutUserChatColorArgs) Declaration public Task PutUserChatColor(PutUserChatColorArgs args) Parameters Type Name Description PutUserChatColorArgs args Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source RefreshTokenAsync() Refresh the token for the authorized user. Declaration public Task<AppIdentity> RefreshTokenAsync() Returns Type Description System.Threading.Tasks.Task<TResult><AppIdentity> | Improve this Doc View Source RevokeTokenAsync() Revoke the currently authorized user's token. Declaration public Task RevokeTokenAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ValidateAsync() Get an app identity using the provided app credentials. Declaration public Task<AppIdentity> ValidateAsync() Returns Type Description System.Threading.Tasks.Task<TResult><AppIdentity> | Improve this Doc View Source ValidateAsync(string, string) Get information relating to a user access token Declaration public Task<AccessTokenInfo> ValidateAsync(string token, string refreshToken = null) Parameters Type Name Description string token string refreshToken Returns Type Description System.Threading.Tasks.Task<TResult><AccessTokenInfo> Implements ITwitchApi System.IDisposable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TwitchRestApiConfig.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TwitchRestApiConfig.html",
    "title": "Class TwitchRestApiConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestApiConfig Inheritance object TwitchRestApiConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class TwitchRestApiConfig Properties | Improve this Doc View Source ClientId Declaration public string ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source ClientSecret Declaration public string ClientSecret { get; set; } Property Value Type Description string | Improve this Doc View Source RateLimiter Declaration public IRateLimiter RateLimiter { get; set; } Property Value Type Description IRateLimiter | Improve this Doc View Source ShouldAutoRefresh Should the client attempt to auto refresh tokens. Declaration public bool ShouldAutoRefresh { get; set; } Property Value Type Description bool"
  },
  "api/AuxLabs.SimpleTwitch.Rest.TwitchRestException.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.TwitchRestException.html",
    "title": "Class TwitchRestException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestException Inheritance object System.Exception TwitchException TwitchRestException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class TwitchRestException : TwitchException, ISerializable Constructors | Improve this Doc View Source TwitchRestException(HttpStatusCode, int?, string) Declaration public TwitchRestException(HttpStatusCode httpCode, int? code = null, string reason = null) Parameters Type Name Description System.Net.HttpStatusCode httpCode int? code string reason Properties | Improve this Doc View Source Code Declaration public int? Code { get; } Property Value Type Description int? | Improve this Doc View Source HttpCode Declaration public HttpStatusCode HttpCode { get; } Property Value Type Description System.Net.HttpStatusCode | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description string Implements System.Runtime.Serialization.ISerializable"
  },
  "api/AuxLabs.SimpleTwitch.Rest.User.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.User.html",
    "title": "Class User | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class User Inheritance object SimpleUser User Implements IUser IEntity<string> Inherited Members SimpleUser.Id SimpleUser.Name SimpleUser.DisplayName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class User : SimpleUser, IUser, IEntity<string> Properties | Improve this Doc View Source BroadcasterType User’s broadcaster type Declaration public BroadcasterType BroadcasterType { get; set; } Property Value Type Description BroadcasterType | Improve this Doc View Source CreatedAt Date when the user was created Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Description User’s channel description Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Email User’s verified email address Declaration public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source OfflineImageUrl URL of the user’s offline image Declaration public string OfflineImageUrl { get; set; } Property Value Type Description string | Improve this Doc View Source ProfileImageUrl URL of the user’s profile image Declaration public string ProfileImageUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Type User’s type Declaration public UserType Type { get; set; } Property Value Type Description UserType | Improve this Doc View Source ViewCount Total number of views of the user’s channel Declaration public int ViewCount { get; set; } Property Value Type Description int Implements IUser IEntity<TId>"
  },
  "api/AuxLabs.SimpleTwitch.Rest.UserCondition.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.UserCondition.html",
    "title": "Class UserCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserCondition Inheritance object UserCondition Implements IEventCondition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class UserCondition : IEventCondition Constructors | Improve this Doc View Source UserCondition() Declaration public UserCondition() | Improve this Doc View Source UserCondition(string) Declaration public UserCondition(string userId) Parameters Type Name Description string userId Properties | Improve this Doc View Source UserId The user ID for the user you want notifications for. Declaration public string UserId { get; set; } Property Value Type Description string Implements IEventCondition"
  },
  "api/AuxLabs.SimpleTwitch.Rest.UserIdentity.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.UserIdentity.html",
    "title": "Class UserIdentity | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserIdentity Inheritance object AppIdentity UserIdentity Inherited Members AppIdentity.AccessToken AppIdentity.ExpiresInSeconds AppIdentity.TokenType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class UserIdentity : AppIdentity Properties | Improve this Doc View Source RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Declaration public IReadOnlyCollection<string> Scopes { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><string> | Improve this Doc View Source UserId Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserName Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.Rest.UserType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.UserType.html",
    "title": "Enum UserType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum UserType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum UserType Fields Name Description Admin GlobalModerator None Staff Extension Methods EnumHelper.GetEnumMemberValue<UserType>(UserType)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.Video.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.Video.html",
    "title": "Class Video | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Video Inheritance object Video Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public class Video Properties | Improve this Doc View Source CreatedAt The date and time, in UTC, of when the video was created. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Description The video’s description. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Duration The video’s length in ISO 8601 duration format. Declaration public string Duration { get; set; } Property Value Type Description string | Improve this Doc View Source Id An ID that identifies the video. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Language The ISO 639-1 two-letter language code that the video was broadcast in. Declaration public string Language { get; set; } Property Value Type Description string | Improve this Doc View Source MutedSegments The segments that Twitch Audio Recognition muted. Declaration public IReadOnlyCollection<VideoOffset> MutedSegments { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection<T><VideoOffset> | Improve this Doc View Source PublishedAt The date and time, in UTC, of when the video was published. Declaration public DateTime PublishedAt { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source StreamId The ID of the stream that the video originated from if the video is a Archive. Declaration public string StreamId { get; set; } Property Value Type Description string | Improve this Doc View Source ThumbnailUrl A URL to a thumbnail image of the video. Declaration public string ThumbnailUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Title The video’s title. Declaration public string Title { get; set; } Property Value Type Description string | Improve this Doc View Source Type The video’s type. Declaration public VideoType Type { get; set; } Property Value Type Description VideoType | Improve this Doc View Source Url The video’s URL. Declaration public string Url { get; set; } Property Value Type Description string | Improve this Doc View Source UserDisplayName The broadcaster’s display name. Declaration public string UserDisplayName { get; set; } Property Value Type Description string | Improve this Doc View Source UserId The ID of the broadcaster that owns the video. Declaration public string UserId { get; set; } Property Value Type Description string | Improve this Doc View Source UserName The broadcaster’s login name. Declaration public string UserName { get; set; } Property Value Type Description string | Improve this Doc View Source Viewable The video’s viewable state. Always set to public. Declaration public string Viewable { get; set; } Property Value Type Description string | Improve this Doc View Source ViewCount The number of times that users have watched the video. Declaration public int ViewCount { get; set; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.VideoOffset.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.VideoOffset.html",
    "title": "Struct VideoOffset | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct VideoOffset Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public readonly struct VideoOffset Constructors | Improve this Doc View Source VideoOffset(int, int) Declaration public VideoOffset(int duration, int offset) Parameters Type Name Description int duration int offset Properties | Improve this Doc View Source Duration Declaration public int Duration { get; } Property Value Type Description int | Improve this Doc View Source Offset Declaration public int Offset { get; } Property Value Type Description int"
  },
  "api/AuxLabs.SimpleTwitch.Rest.VideoPeriod.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.VideoPeriod.html",
    "title": "Enum VideoPeriod | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum VideoPeriod Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum VideoPeriod Fields Name Description All Day Month Week Extension Methods EnumHelper.GetEnumMemberValue<VideoPeriod>(VideoPeriod)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.VideoSort.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.VideoSort.html",
    "title": "Enum VideoSort | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum VideoSort Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum VideoSort Fields Name Description Time Trending Views Extension Methods EnumHelper.GetEnumMemberValue<VideoSort>(VideoSort)"
  },
  "api/AuxLabs.SimpleTwitch.Rest.VideoType.html": {
    "href": "api/AuxLabs.SimpleTwitch.Rest.VideoType.html",
    "title": "Enum VideoType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum VideoType Namespace: AuxLabs.SimpleTwitch.Rest Assembly: AuxLabs.SimpleTwitch.Rest.dll Syntax public enum VideoType Fields Name Description All Archive An on-demand video (VOD) of one of the broadcaster's past streams. Highlight A highlight reel of one of the broadcaster's past streams. Upload A video that the broadcaster uploaded to their video library. Extension Methods EnumHelper.GetEnumMemberValue<VideoType>(VideoType)"
  },
  "api/AuxLabs.SimpleTwitch.Sockets.BaseSocketClient-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.Sockets.BaseSocketClient-1.html",
    "title": "Class BaseSocketClient<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BaseSocketClient<TPayload> Inheritance object BaseSocketClient<TPayload> TwitchChatApiClient TwitchEventSubApiClient TwitchPubSubApiClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Sockets Assembly: AuxLabs.SimpleTwitch.Sockets.dll Syntax public abstract class BaseSocketClient<TPayload> where TPayload : IPayload Type Parameters Name Description TPayload Constructors | Improve this Doc View Source BaseSocketClient(int, bool) Declaration public BaseSocketClient(int heartbeatRate, bool waitForHello = false) Parameters Type Name Description int heartbeatRate bool waitForHello Fields | Improve this Doc View Source ReceivedData Declaration protected bool ReceivedData Field Value Type Description bool Properties | Improve this Doc View Source Serializer Declaration protected abstract ISerializer<TPayload> Serializer { get; } Property Value Type Description ISerializer<TPayload> | Improve this Doc View Source State Declaration public ConnectionState State { get; } Property Value Type Description ConnectionState Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source HandleEvent(TPayload, TaskCompletionSource<bool>) Declaration protected abstract void HandleEvent(TPayload payload, TaskCompletionSource<bool> readySignal) Parameters Type Name Description TPayload payload System.Threading.Tasks.TaskCompletionSource<TResult><bool> readySignal | Improve this Doc View Source OnUnknownEventReceived(TPayload) Declaration protected virtual void OnUnknownEventReceived(TPayload payload) Parameters Type Name Description TPayload payload | Improve this Doc View Source Run() Declaration public abstract void Run() | Improve this Doc View Source Run(string) Declaration protected void Run(string url) Parameters Type Name Description string url | Improve this Doc View Source RunAsync() Declaration public abstract Task RunAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source RunAsync(string) Declaration protected Task RunAsync(string url) Parameters Type Name Description string url Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Send(TPayload) Declaration public void Send(TPayload payload) Parameters Type Name Description TPayload payload | Improve this Doc View Source SendHeartbeat() Declaration protected abstract void SendHeartbeat() | Improve this Doc View Source SendHeartbeatAck() Declaration protected abstract void SendHeartbeatAck() | Improve this Doc View Source SendIdentify() Declaration protected virtual void SendIdentify() | Improve this Doc View Source Stop() Declaration public void Stop() | Improve this Doc View Source StopAsync() Declaration public Task StopAsync() Returns Type Description System.Threading.Tasks.Task Events | Improve this Doc View Source Connected Declaration public event Action Connected Event Type Type Description System.Action | Improve this Doc View Source DeserializationError Declaration public event Action<SerializationException> DeserializationError Event Type Type Description System.Action<T><System.Runtime.Serialization.SerializationException> | Improve this Doc View Source Disconnected Declaration public event Action<Exception> Disconnected Event Type Type Description System.Action<T><System.Exception> | Improve this Doc View Source PayloadReceived Declaration public event Action<TPayload, long> PayloadReceived Event Type Type Description System.Action<T1, T2><TPayload, long> | Improve this Doc View Source PayloadSent Declaration public event Action<TPayload, int> PayloadSent Event Type Type Description System.Action<T1, T2><TPayload, int> | Improve this Doc View Source UnknownEventReceived Declaration public event Action<TPayload> UnknownEventReceived Event Type Type Description System.Action<T><TPayload>"
  },
  "api/AuxLabs.SimpleTwitch.Sockets.ConnectionState.html": {
    "href": "api/AuxLabs.SimpleTwitch.Sockets.ConnectionState.html",
    "title": "Enum ConnectionState | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ConnectionState Namespace: AuxLabs.SimpleTwitch.Sockets Assembly: AuxLabs.SimpleTwitch.Sockets.dll Syntax public enum ConnectionState Fields Name Description Connected Connecting Disconnected Disconnecting Extension Methods EnumHelper.GetEnumMemberValue<ConnectionState>(ConnectionState)"
  },
  "api/AuxLabs.SimpleTwitch.Sockets.html": {
    "href": "api/AuxLabs.SimpleTwitch.Sockets.html",
    "title": "Namespace AuxLabs.SimpleTwitch.Sockets | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.SimpleTwitch.Sockets Classes BaseSocketClient<TPayload> JsonSerializer<TPayload> WebSocketClosedException Interfaces IPayload ISerializer<TPayload> Enums ConnectionState"
  },
  "api/AuxLabs.SimpleTwitch.Sockets.IPayload.html": {
    "href": "api/AuxLabs.SimpleTwitch.Sockets.IPayload.html",
    "title": "Interface IPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IPayload Namespace: AuxLabs.SimpleTwitch.Sockets Assembly: AuxLabs.SimpleTwitch.Sockets.dll Syntax public interface IPayload Properties | Improve this Doc View Source IsHelloEvent Declaration bool IsHelloEvent { get; } Property Value Type Description bool"
  },
  "api/AuxLabs.SimpleTwitch.Sockets.ISerializer-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.Sockets.ISerializer-1.html",
    "title": "Interface ISerializer<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ISerializer<TPayload> Namespace: AuxLabs.SimpleTwitch.Sockets Assembly: AuxLabs.SimpleTwitch.Sockets.dll Syntax public interface ISerializer<TPayload> Type Parameters Name Description TPayload Methods | Improve this Doc View Source Read(ref ReadOnlySpan<byte>) Declaration TPayload Read(ref ReadOnlySpan<byte> data) Parameters Type Name Description System.ReadOnlySpan<T><byte> data Returns Type Description TPayload | Improve this Doc View Source Write(TPayload) Declaration ReadOnlyMemory<byte> Write(TPayload payload) Parameters Type Name Description TPayload payload Returns Type Description System.ReadOnlyMemory<T><byte>"
  },
  "api/AuxLabs.SimpleTwitch.Sockets.JsonSerializer-1.html": {
    "href": "api/AuxLabs.SimpleTwitch.Sockets.JsonSerializer-1.html",
    "title": "Class JsonSerializer<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class JsonSerializer<TPayload> Inheritance object JsonSerializer<TPayload> Implements ISerializer<TPayload> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch.Sockets Assembly: AuxLabs.SimpleTwitch.Sockets.dll Syntax public class JsonSerializer<TPayload> : ISerializer<TPayload> Type Parameters Name Description TPayload Methods | Improve this Doc View Source Read(ref ReadOnlySpan<byte>) Declaration public TPayload Read(ref ReadOnlySpan<byte> data) Parameters Type Name Description System.ReadOnlySpan<T><byte> data Returns Type Description TPayload | Improve this Doc View Source Write(TPayload) Declaration public ReadOnlyMemory<byte> Write(TPayload payload) Parameters Type Name Description TPayload payload Returns Type Description System.ReadOnlyMemory<T><byte> Implements ISerializer<TPayload>"
  },
  "api/AuxLabs.SimpleTwitch.Sockets.WebSocketClosedException.html": {
    "href": "api/AuxLabs.SimpleTwitch.Sockets.WebSocketClosedException.html",
    "title": "Class WebSocketClosedException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WebSocketClosedException Inheritance object System.Exception WebSocketClosedException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch.Sockets Assembly: AuxLabs.SimpleTwitch.Sockets.dll Syntax public class WebSocketClosedException : Exception, ISerializable Constructors | Improve this Doc View Source WebSocketClosedException(WebSocketCloseStatus, string) Declaration public WebSocketClosedException(WebSocketCloseStatus status, string reason = null) Parameters Type Name Description System.Net.WebSockets.WebSocketCloseStatus status string reason | Improve this Doc View Source WebSocketClosedException(string, Exception, WebSocketCloseStatus, string) Declaration public WebSocketClosedException(string message, Exception innerException, WebSocketCloseStatus status, string reason = null) Parameters Type Name Description string message System.Exception innerException System.Net.WebSockets.WebSocketCloseStatus status string reason | Improve this Doc View Source WebSocketClosedException(string, WebSocketCloseStatus, string) Declaration public WebSocketClosedException(string message, WebSocketCloseStatus status, string reason = null) Parameters Type Name Description string message System.Net.WebSockets.WebSocketCloseStatus status string reason Properties | Improve this Doc View Source CloseStatus Declaration public WebSocketCloseStatus? CloseStatus { get; } Property Value Type Description System.Net.WebSockets.WebSocketCloseStatus? | Improve this Doc View Source Code Declaration public int Code { get; } Property Value Type Description int | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description string Implements System.Runtime.Serialization.ISerializable"
  },
  "api/AuxLabs.SimpleTwitch.TwitchConstants.html": {
    "href": "api/AuxLabs.SimpleTwitch.TwitchConstants.html",
    "title": "Class TwitchConstants | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchConstants Inheritance object TwitchConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public static class TwitchConstants Fields | Improve this Doc View Source AnonymousNamePrefix Declaration public const string AnonymousNamePrefix = \"justinfan\" Field Value Type Description string | Improve this Doc View Source ChatIrcUrl Declaration public const string ChatIrcUrl = \"\\tirc://irc.chat.twitch.tv:6667\" Field Value Type Description string | Improve this Doc View Source ChatSecureIrcUrl Declaration public const string ChatSecureIrcUrl = \"irc://irc.chat.twitch.tv:6697\" Field Value Type Description string | Improve this Doc View Source ChatSecureWebSocketUrl Declaration public const string ChatSecureWebSocketUrl = \"wss://irc-ws.chat.twitch.tv:443\" Field Value Type Description string | Improve this Doc View Source ChatWebSocketUrl Declaration public const string ChatWebSocketUrl = \"ws://irc-ws.chat.twitch.tv:80\" Field Value Type Description string | Improve this Doc View Source EmoteUrl Declaration public const string EmoteUrl = \"https://static-cdn.jtvnw.net/emoticons/v2/{0}/{1}/{2}/{3}\" Field Value Type Description string | Improve this Doc View Source EventSubUrl Declaration public const string EventSubUrl = \"wss://eventsub-beta.wss.twitch.tv/ws:443\" Field Value Type Description string | Improve this Doc View Source PubSubUrl Declaration public const string PubSubUrl = \"wss://pubsub-edge.twitch.tv\" Field Value Type Description string | Improve this Doc View Source RestApiUrl Declaration public const string RestApiUrl = \"https://api.twitch.tv/helix/\" Field Value Type Description string | Improve this Doc View Source RestIdentityApiUrl Declaration public const string RestIdentityApiUrl = \"https://id.twitch.tv/oauth2/\" Field Value Type Description string"
  },
  "api/AuxLabs.SimpleTwitch.TwitchException.html": {
    "href": "api/AuxLabs.SimpleTwitch.TwitchException.html",
    "title": "Class TwitchException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchException Inheritance object System.Exception TwitchException MissingScopeException TwitchRestException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public class TwitchException : Exception, ISerializable Constructors | Improve this Doc View Source TwitchException() Declaration public TwitchException() | Improve this Doc View Source TwitchException(string) Declaration public TwitchException(string message) Parameters Type Name Description string message Implements System.Runtime.Serialization.ISerializable"
  },
  "api/AuxLabs.SimpleTwitch.UnexpectedTagsException.html": {
    "href": "api/AuxLabs.SimpleTwitch.UnexpectedTagsException.html",
    "title": "Class UnexpectedTagsException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UnexpectedTagsException Inheritance object System.Exception System.SystemException System.Runtime.Serialization.SerializationException UnexpectedTagsException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public class UnexpectedTagsException : SerializationException, ISerializable Constructors | Improve this Doc View Source UnexpectedTagsException(string, IDictionary<string, string>, Dictionary<string, string>) Declaration public UnexpectedTagsException(string eventName, IDictionary<string, string> expected, Dictionary<string, string> provided) Parameters Type Name Description string eventName System.Collections.Generic.IDictionary<TKey, TValue><string, string> expected System.Collections.Generic.Dictionary<TKey, TValue><string, string> provided Properties | Improve this Doc View Source EventName Declaration public string EventName { get; } Property Value Type Description string | Improve this Doc View Source Expected Declaration public SortedDictionary<string, string> Expected { get; } Property Value Type Description System.Collections.Generic.SortedDictionary<TKey, TValue><string, string> | Improve this Doc View Source Provided Declaration public SortedDictionary<string, string> Provided { get; } Property Value Type Description System.Collections.Generic.SortedDictionary<TKey, TValue><string, string> | Improve this Doc View Source Unique Declaration public SortedDictionary<string, string> Unique { get; } Property Value Type Description System.Collections.Generic.SortedDictionary<TKey, TValue><string, string> Implements System.Runtime.Serialization.ISerializable"
  },
  "api/AuxLabs.SimpleTwitch.WebSocketClosedException.html": {
    "href": "api/AuxLabs.SimpleTwitch.WebSocketClosedException.html",
    "title": "Class WebSocketClosedException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WebSocketClosedException Inheritance object System.Exception WebSocketClosedException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: AuxLabs.SimpleTwitch Assembly: AuxLabs.SimpleTwitch.dll Syntax public class WebSocketClosedException : Exception, ISerializable Constructors | Improve this Doc View Source WebSocketClosedException(int, string) Declaration public WebSocketClosedException(int closeCode, string reason = null) Parameters Type Name Description int closeCode string reason Properties | Improve this Doc View Source CloseCode Declaration public int CloseCode { get; } Property Value Type Description int | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description string Implements System.Runtime.Serialization.ISerializable"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | AuxLabs.SimpleTwitch Documentation",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | AuxLabs.SimpleTwitch Documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "tutorials/intro.html": {
    "href": "tutorials/intro.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  }
}