{
  "api/AuxLabs.Twitch.AnalyticType.html": {
    "href": "api/AuxLabs.Twitch.AnalyticType.html",
    "title": "Enum AnalyticType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum AnalyticType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum AnalyticType Fields Name Description None OverviewV2"
  },
  "api/AuxLabs.Twitch.AnnouncementColor.html": {
    "href": "api/AuxLabs.Twitch.AnnouncementColor.html",
    "title": "Enum AnnouncementColor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum AnnouncementColor Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum AnnouncementColor Fields Name Description Blue Green Orange Primary Purple"
  },
  "api/AuxLabs.Twitch.AsyncEnumerableExtensions.html": {
    "href": "api/AuxLabs.Twitch.AsyncEnumerableExtensions.html",
    "title": "Class AsyncEnumerableExtensions | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AsyncEnumerableExtensions An extension class for squashing . Inheritance object AsyncEnumerableExtensions Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public static class AsyncEnumerableExtensions Remarks This set of extension methods will squash an into a single . This is often associated with requests that has a set limit when requesting. Methods Name Description Flatten<T>(IAsyncEnumerable<IEnumerable<T>>) Flattens the specified pages into one . FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>) Flattens the specified pages into one asynchronously."
  },
  "api/AuxLabs.Twitch.AutomodAction.html": {
    "href": "api/AuxLabs.Twitch.AutomodAction.html",
    "title": "Enum AutomodAction | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum AutomodAction Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum AutomodAction Fields Name Description Allow Deny"
  },
  "api/AuxLabs.Twitch.AutomodFilter.html": {
    "href": "api/AuxLabs.Twitch.AutomodFilter.html",
    "title": "Enum AutomodFilter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum AutomodFilter Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum AutomodFilter Fields Name Description Less Maximum More None Some"
  },
  "api/AuxLabs.Twitch.BitsPeriod.html": {
    "href": "api/AuxLabs.Twitch.BitsPeriod.html",
    "title": "Enum BitsPeriod | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BitsPeriod Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum BitsPeriod Fields Name Description All Day Month Week Year"
  },
  "api/AuxLabs.Twitch.BlockContext.html": {
    "href": "api/AuxLabs.Twitch.BlockContext.html",
    "title": "Enum BlockContext | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BlockContext Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum BlockContext Fields Name Description Chat Whisper"
  },
  "api/AuxLabs.Twitch.BroadcasterType.html": {
    "href": "api/AuxLabs.Twitch.BroadcasterType.html",
    "title": "Enum BroadcasterType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BroadcasterType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum BroadcasterType Fields Name Description Affiliate None Partner"
  },
  "api/AuxLabs.Twitch.BroadcastType.html": {
    "href": "api/AuxLabs.Twitch.BroadcastType.html",
    "title": "Enum BroadcastType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BroadcastType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum BroadcastType Fields Name Description All Live Playlist Premiere Rerun Unknown WatchParty"
  },
  "api/AuxLabs.Twitch.Cacheable-2.html": {
    "href": "api/AuxLabs.Twitch.Cacheable-2.html",
    "title": "Struct Cacheable<TEntity, TId> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct Cacheable<TEntity, TId> Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public struct Cacheable<TEntity, TId> where TEntity : IEntity<TId> where TId : IEquatable<TId> Type Parameters Name Description TEntity TId Properties Name Description HasValue Id Value Methods Name Description DownloadAsync() GetOrDownloadAsync()"
  },
  "api/AuxLabs.Twitch.CDN.html": {
    "href": "api/AuxLabs.Twitch.CDN.html",
    "title": "Class CDN | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CDN Inheritance object CDN Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public static class CDN Methods Name Description GetEmoteImageUrl(string, EmoteFormat, EmoteTheme, EmoteScale)"
  },
  "api/AuxLabs.Twitch.Chat.Api.DefaultIrcSerializer.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.DefaultIrcSerializer.html",
    "title": "Class DefaultIrcSerializer | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DefaultIrcSerializer Inheritance object DefaultIrcSerializer Implements ISerializer<IrcPayload> Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public sealed class DefaultIrcSerializer : ISerializer<IrcPayload> Constructors Name Description DefaultIrcSerializer(bool) Methods Name Description Read(ref ReadOnlySpan<byte>) Write(IrcPayload)"
  },
  "api/AuxLabs.Twitch.Chat.Api.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.html",
    "title": "Namespace AuxLabs.Twitch.Chat.Api | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Chat.Api Classes DefaultIrcSerializer IrcPayload TwitchChatApiClient TwitchChatApiConfig TwitchChatException Structs IrcPrefix Enums IrcCommand IrcTokenType"
  },
  "api/AuxLabs.Twitch.Chat.Api.IrcCommand.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.IrcCommand.html",
    "title": "Enum IrcCommand | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum IrcCommand Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public enum IrcCommand Fields Name Description CapabilityAcknowledge CapabilityDenied CapabilityRequest ClearChat ClearMessage GlobalUserState Join Message Names NamesEnd NamesList Nickname Notice Part Password Ping Pong Reconnect RoomState RPL_Created RPL_Motd RPL_MotdEnd RPL_MotdStart RPL_MyInfo RPL_Welcome RPL_YourHost Unknown UserNotice UserState Whisper"
  },
  "api/AuxLabs.Twitch.Chat.Api.IrcPayload.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.IrcPayload.html",
    "title": "Class IrcPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class IrcPayload Inheritance object IrcPayload CapabilityRequest Implements IPayload Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class IrcPayload : IPayload Constructors Name Description IrcPayload() IrcPayload(IrcCommand, params string[]) IrcPayload(string, IrcCommand, params string[]) Properties Name Description Command CommandRaw IsHelloEvent Parameters Prefix Tags TagsTypeSelector UserNoticeTypeSelector Methods Name Description ToString()"
  },
  "api/AuxLabs.Twitch.Chat.Api.IrcPrefix.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.IrcPrefix.html",
    "title": "Struct IrcPrefix | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct IrcPrefix Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public struct IrcPrefix Constructors Name Description IrcPrefix(string) Properties Name Description Host Nickname Username Methods Name Description ToString()"
  },
  "api/AuxLabs.Twitch.Chat.Api.IrcTokenType.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.IrcTokenType.html",
    "title": "Enum IrcTokenType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum IrcTokenType Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public enum IrcTokenType Fields Name Description ChannelIndicator CommandEnd None ParameterIndicator PrefixEnd PrefixHostIndicator PrefixIndicator PrefixUsernameIndicator Remainder ServerIndicator TagEnd TagEscapedSpace TagIndicator TagKeyValueEnd TagKeyValueSeparator"
  },
  "api/AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.html",
    "title": "Class TwitchChatApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchChatApiClient Inheritance object TwitchChatApiClient Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class TwitchChatApiClient : IDisposable Constructors Name Description TwitchChatApiClient(TwitchChatApiConfig) TwitchChatApiClient(string, TwitchChatApiConfig) Fields Name Description CommandsRequested TagsRequested ThrowOnUnhandledTags ThrowOnUnknownEvent UseVerifiedRateLimits Properties Name Description IsAnonymous State Methods Name Description Dispose() Dispose(bool) Run() RunAsync() SendJoin(params string[]) Join a channel by name. SendMessage(string, string, string) Send a message to a channel. SendPart(params string[]) Leave a channel by name. WithIdentity(string, string) Events Name Description CapabilityAcknowledged Triggered after successful authentication. CapabilityDenied Triggered when authenticating with invalid capabilities ChannelJoined Triggered when a user joins a channel. ChannelLeft Triggered when a user leaves a channel. ChatCleared Triggered when someone removes all messages from the channel or from a specified user. Connected The client has successfully made a connection to the server. Disconnected The client was forcibly disconnected from the server. GlobalUserStateReceived Triggered after authenticated with the server. Indicates the authenticated user's chat settings. MessageCleared Triggered when someone removes a single message from the chat room. MessageReceived Triggered when a message is received in a channel. NamesReceived Triggered after joining a channel, lists current active chatters. NoticeReceived Triggered to indicate the outcome of an action. Reconnect Triggered when the server needs to terminate the connection. RoomStateReceived Triggered when you join a channel or when the channelâ€™s chat settings change. Indicates the chat's current settings. UnknownEventReceived An unhandled irc command was received. UserNoticeReceived Triggered when events relating to a user in a channel occur. e.g. subscriptions, gifts, raids... UserStateReceived Triggered when the bot joins a channel. Indicates the authenticated user's state in said channel. WhisperReceived Triggered when a whisper is received."
  },
  "api/AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig.html",
    "title": "Class TwitchChatApiConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchChatApiConfig Inheritance object TwitchChatApiConfig TwitchChatConfig Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class TwitchChatApiConfig Properties Name Description IrcSerializer Specify a custom serializer for chat irc messages. RequestCommands Lets your bot send messages that include Twitch chat commands and receive Twitch-specific messages. RequestTags Adds additional metadata to the command and membership messages. ThrowOnUnhandledTags Should an exception be raised if an event provides unhandled tags. ThrowOnUnknownEvent Should an exception be raised if an unhandled event is received from twitch. UseVerifiedRateLimits Should the client handle ratelimits as a verified account."
  },
  "api/AuxLabs.Twitch.Chat.Api.TwitchChatException.html": {
    "href": "api/AuxLabs.Twitch.Chat.Api.TwitchChatException.html",
    "title": "Class TwitchChatException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchChatException Inheritance object TwitchException TwitchChatException Namespace: AuxLabs.Twitch.Chat.Api Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class TwitchChatException : TwitchException Constructors Name Description TwitchChatException() TwitchChatException(NoticeEventArgs) TwitchChatException(string)"
  },
  "api/AuxLabs.Twitch.Chat.Badge.html": {
    "href": "api/AuxLabs.Twitch.Chat.Badge.html",
    "title": "Struct Badge | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct Badge Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public readonly struct Badge Constructors Name Description Badge(string, string) Properties Name Description Name The badge's name. Version Information relating to the badge. Methods Name Description Parse(string, out Badge) ToString() TryParseMany(string, out IReadOnlyCollection<Badge>)"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatChannel.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatChannel.html",
    "title": "Class ChatChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatChannel Inheritance object ChatEntity<string> ChatSimpleChannel ChatChannel Implements IEntity<><string> Inherited Members ChatSimpleChannel.MyUser ChatSimpleChannel.Name ChatSimpleChannel.ToString() ChatSimpleChannel.GetUser(string) ChatSimpleChannel.GetUserByName(string) ChatSimpleChannel.GetMessage(string) ChatSimpleChannel.GetMessages(int) ChatSimpleChannel.SendMessageAsync(string) ChatSimpleChannel.SendAnnouncementAsync(string, AnnouncementColor?) ChatSimpleChannel.SendShoutoutAsync(string) ChatSimpleChannel.GetChattersAsync(int) ChatSimpleChannel.GetEmotesAsync() ChatSimpleChannel.GetChatSettingsAsync() ChatSimpleChannel.ModifyChatSettingsAsync(Action<PatchChatSettingsBody>) ChatSimpleChannel.GetChannelAsync() ChatSimpleChannel.GetUserAsync() ChatSimpleChannel.GetFollowerAsync(string) ChatSimpleChannel.GetFollowersAsync(int) ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatChannel : ChatSimpleChannel, IEntity<string> Properties Name Description IsEmoteOnly IsFollowersOnly IsRitualsEnabled IsSlowEnabled IsSubscribersOnly IsUniqueEnabled RequiredFollowTime SlowModeDelay"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatChannelSelfUser.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatChannelSelfUser.html",
    "title": "Class ChatChannelSelfUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatChannelSelfUser Data for the currently authenticated user in a specific channel Inheritance object ChatEntity<string> ChatSimpleUser ChatUser ChatChannelUser ChatChannelSelfUser Implements IEntity<><string> IChatUser Inherited Members ChatChannelUser.Channel ChatChannelUser.IsModerator ChatChannelUser.IsSubscriber ChatChannelUser.IsVIP ChatUser.UserType ChatUser.Badges ChatUser.BadgeInfo ChatUser.IsTurbo ChatSimpleUser.DisplayName ChatSimpleUser.Name ChatSimpleUser.Color ChatSimpleUser.ToString() ChatSimpleUser.GetUserAsync() ChatSimpleUser.GetChannelAsync() ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatChannelSelfUser : ChatChannelUser, IEntity<string>, IChatUser Properties Name Description EmoteSets"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatChannelUser.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatChannelUser.html",
    "title": "Class ChatChannelUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatChannelUser Data for a user specific to certain channels Inheritance object ChatEntity<string> ChatSimpleUser ChatUser ChatChannelUser ChatChannelSelfUser Implements IEntity<><string> IChatUser Inherited Members ChatUser.UserType ChatUser.Badges ChatUser.BadgeInfo ChatUser.IsTurbo ChatSimpleUser.DisplayName ChatSimpleUser.Name ChatSimpleUser.Color ChatSimpleUser.ToString() ChatSimpleUser.GetUserAsync() ChatSimpleUser.GetChannelAsync() ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatChannelUser : ChatUser, IEntity<string>, IChatUser Properties Name Description Channel IsModerator IsSubscriber IsVIP"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html",
    "title": "Class ChatEntity<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatEntity<T> Inheritance object ChatEntity<T> ChatMessageReply ChatSimpleChannel ChatSimpleMessage ChatSimpleUser ChatWhisperMessage Implements IEntity<><T> Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public abstract class ChatEntity<T> : IEquatable<ChatEntity<T>>, IEntity<T> Type Parameters Name Description T Properties Name Description Id An ID that uniquely identifies the entity. Methods Name Description Equals(ChatEntity<T>) Equals(object) GetHashCode() ToString()"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatMessage.html",
    "title": "Class ChatMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatMessage Inheritance object ChatEntity<string> ChatSimpleMessage ChatMessage ChatSubscriptionMessage Implements IEntity<><string> Inherited Members ChatSimpleMessage.Channel ChatSimpleMessage.Author ChatSimpleMessage.Timestamp ChatSimpleMessage.Content ChatSimpleMessage.ToString() ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatMessage : ChatSimpleMessage, IEntity<string> Properties Name Description BitsAmount Emotes Reply Type"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatMessageReply.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatMessageReply.html",
    "title": "Class ChatMessageReply | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatMessageReply Inheritance object ChatEntity<string> ChatMessageReply Implements IEntity<><string> Inherited Members ChatEntity<string>.Id ChatEntity<string>.ToString() ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatMessageReply : ChatEntity<string>, IEntity<string> Properties Name Description Author Content"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatRaidUser.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatRaidUser.html",
    "title": "Class ChatRaidUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatRaidUser Inheritance object ChatEntity<string> ChatSimpleUser ChatRaidUser Implements IEntity<><string> IChatUser Inherited Members ChatSimpleUser.DisplayName ChatSimpleUser.Name ChatSimpleUser.Color ChatSimpleUser.ToString() ChatSimpleUser.GetUserAsync() ChatSimpleUser.GetChannelAsync() ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatRaidUser : ChatSimpleUser, IEntity<string>, IChatUser Properties Name Description ProfileImageUrl"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatSelfUser.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatSelfUser.html",
    "title": "Class ChatSelfUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatSelfUser Global data for the currently authenticated user Inheritance object ChatEntity<string> ChatSimpleUser ChatUser ChatSelfUser Implements IEntity<><string> IChatUser Inherited Members ChatUser.UserType ChatUser.Badges ChatUser.BadgeInfo ChatUser.IsTurbo ChatSimpleUser.DisplayName ChatSimpleUser.Name ChatSimpleUser.Color ChatSimpleUser.ToString() ChatSimpleUser.GetUserAsync() ChatSimpleUser.GetChannelAsync() ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatSelfUser : ChatUser, IEntity<string>, IChatUser Properties Name Description EmoteSets"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.html",
    "title": "Class ChatSimpleChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatSimpleChannel Inheritance object ChatEntity<string> ChatSimpleChannel ChatChannel Implements IEntity<><string> Inherited Members ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatSimpleChannel : ChatEntity<string>, IEntity<string> Properties Name Description MyUser The currently authorized user Name The channel's name Methods Name Description GetChannelAsync() Get more info about this channel. GetChatSettingsAsync() GetChattersAsync(int) GetEmotesAsync() GetFollowerAsync(string) GetFollowersAsync(int) GetMessage(string) GetMessages(int) GetUser(string) GetUserAsync() Get the user associated with this channel. GetUserByName(string) ModifyChatSettingsAsync(Action<PatchChatSettingsBody>) SendAnnouncementAsync(string, AnnouncementColor?) SendMessageAsync(string) SendShoutoutAsync(string) ToString()"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatSimpleMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatSimpleMessage.html",
    "title": "Class ChatSimpleMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatSimpleMessage Inheritance object ChatEntity<string> ChatSimpleMessage ChatMessage Implements IEntity<><string> Inherited Members ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatSimpleMessage : ChatEntity<string>, IEntity<string> Properties Name Description Author Channel Content Timestamp Methods Name Description ToString()"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatSimpleUser.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatSimpleUser.html",
    "title": "Class ChatSimpleUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatSimpleUser Inheritance object ChatEntity<string> ChatSimpleUser ChatRaidUser ChatUser Implements IEntity<><string> IChatUser Inherited Members ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatSimpleUser : ChatEntity<string>, IEntity<string>, IChatUser Properties Name Description Color DisplayName Name Methods Name Description GetChannelAsync() Get the channel associated with this user. GetUserAsync() Get more info about this user. ToString()"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatSubscriptionMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatSubscriptionMessage.html",
    "title": "Class ChatSubscriptionMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatSubscriptionMessage Inheritance object ChatEntity<string> ChatSimpleMessage ChatMessage ChatSubscriptionMessage Implements IEntity<><string> Inherited Members ChatMessage.Reply ChatMessage.Type ChatMessage.BitsAmount ChatMessage.Emotes ChatSimpleMessage.Channel ChatSimpleMessage.Author ChatSimpleMessage.Timestamp ChatSimpleMessage.Content ChatSimpleMessage.ToString() ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatSubscriptionMessage : ChatMessage, IEntity<string> Properties Name Description IsStreakShared Indicates whether the user wants their streaks shared. StreakMonths The number of consecutive months the user has subscribed. SubscriptionName The display name of the subscription plan. This may be a default name or one created by the channel owner SubscriptionType The type of subscription plan being used. TotalMonths The total number of months the user has subscribed."
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatUser.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatUser.html",
    "title": "Class ChatUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatUser Inheritance object ChatEntity<string> ChatSimpleUser ChatUser ChatChannelUser ChatSelfUser Implements IEntity<><string> IChatUser Inherited Members ChatSimpleUser.DisplayName ChatSimpleUser.Name ChatSimpleUser.Color ChatSimpleUser.ToString() ChatSimpleUser.GetUserAsync() ChatSimpleUser.GetChannelAsync() ChatEntity<string>.Id ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatUser : ChatSimpleUser, IEntity<string>, IChatUser Properties Name Description BadgeInfo Badges IsTurbo UserType"
  },
  "api/AuxLabs.Twitch.Chat.Entities.ChatWhisperMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.ChatWhisperMessage.html",
    "title": "Class ChatWhisperMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatWhisperMessage Inheritance object ChatEntity<string> ChatWhisperMessage Implements IEntity<><string> Inherited Members ChatEntity<string>.Id ChatEntity<string>.ToString() ChatEntity<string>.Equals(ChatEntity<string>) ChatEntity<string>.Equals(object) ChatEntity<string>.GetHashCode() Namespace: AuxLabs.Twitch.Chat.Entities Assembly: AuxLabs.Twitch.Chat.dll Syntax public class ChatWhisperMessage : ChatEntity<string>, IEntity<string> Properties Name Description Action Author Content Emotes ThreadId"
  },
  "api/AuxLabs.Twitch.Chat.Entities.html": {
    "href": "api/AuxLabs.Twitch.Chat.Entities.html",
    "title": "Namespace AuxLabs.Twitch.Chat.Entities | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Chat.Entities Classes ChatChannel ChatChannelSelfUser Data for the currently authenticated user in a specific channel ChatChannelUser Data for a user specific to certain channels ChatEntity<T> ChatMessage ChatMessageReply ChatRaidUser ChatSelfUser Global data for the currently authenticated user ChatSimpleChannel ChatSimpleMessage ChatSimpleUser ChatSubscriptionMessage ChatUser ChatWhisperMessage"
  },
  "api/AuxLabs.Twitch.Chat.html": {
    "href": "api/AuxLabs.Twitch.Chat.html",
    "title": "Namespace AuxLabs.Twitch.Chat | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Chat Classes TwitchChatClient TwitchChatConfig Structs Badge Interfaces IChatMessage IMessage IUserNoticeMessage IWhisperMessage Enums MessageType NoticeType RitualType UserNoticeType UserType"
  },
  "api/AuxLabs.Twitch.Chat.IChatMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.IChatMessage.html",
    "title": "Interface IChatMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IChatMessage Inherited Members IMessage.AuthorId IMessage.AuthorName IMessage.AuthorDisplayName IMessage.AuthorType IMessage.AuthorColor IMessage.Content IMessage.Action IMessage.IsTurbo IMessage.Badges IMessage.Emotes IEntity<string>.Id Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public interface IChatMessage : IMessage, IEntity<string> Properties Name Description BadgeInfo BitsAmount ChannelId ChannelName CustomRewardId IsEmoteOnly IsFirstMessage IsModerator IsSubscriber IsVip MessageType Nonce ReplyAuthorDisplayName ReplyAuthorId ReplyAuthorName ReplyMessageContent ReplyMessageId Timestamp"
  },
  "api/AuxLabs.Twitch.Chat.IMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.IMessage.html",
    "title": "Interface IMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IMessage Inherited Members IEntity<string>.Id Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public interface IMessage : IEntity<string> Properties Name Description Action AuthorColor AuthorDisplayName AuthorId AuthorName AuthorType Badges Content Emotes IsTurbo"
  },
  "api/AuxLabs.Twitch.Chat.IUserNoticeMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.IUserNoticeMessage.html",
    "title": "Interface IUserNoticeMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUserNoticeMessage Inherited Members IChatMessage.Timestamp IChatMessage.ChannelId IChatMessage.ChannelName IChatMessage.BadgeInfo IChatMessage.Nonce IChatMessage.CustomRewardId IChatMessage.ReplyMessageId IChatMessage.ReplyMessageContent IChatMessage.ReplyAuthorId IChatMessage.ReplyAuthorName IChatMessage.ReplyAuthorDisplayName IChatMessage.BitsAmount IChatMessage.IsModerator IChatMessage.IsSubscriber IChatMessage.IsVip IChatMessage.IsFirstMessage IChatMessage.IsEmoteOnly IChatMessage.MessageType IMessage.AuthorId IMessage.AuthorName IMessage.AuthorDisplayName IMessage.AuthorType IMessage.AuthorColor IMessage.Content IMessage.Action IMessage.IsTurbo IMessage.Badges IMessage.Emotes IEntity<string>.Id Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public interface IUserNoticeMessage : IChatMessage, IMessage, IEntity<string> Properties Name Description NoticeType SystemMessage"
  },
  "api/AuxLabs.Twitch.Chat.IWhisperMessage.html": {
    "href": "api/AuxLabs.Twitch.Chat.IWhisperMessage.html",
    "title": "Interface IWhisperMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IWhisperMessage Inherited Members IMessage.AuthorId IMessage.AuthorName IMessage.AuthorDisplayName IMessage.AuthorType IMessage.AuthorColor IMessage.Content IMessage.Action IMessage.IsTurbo IMessage.Badges IMessage.Emotes IEntity<string>.Id Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public interface IWhisperMessage : IMessage, IEntity<string> Properties Name Description ReceiverName ThreadId"
  },
  "api/AuxLabs.Twitch.Chat.MessageType.html": {
    "href": "api/AuxLabs.Twitch.Chat.MessageType.html",
    "title": "Enum MessageType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum MessageType Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public enum MessageType Fields Name Description Highlighted Normal"
  },
  "api/AuxLabs.Twitch.Chat.Models.BaseTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.BaseTags.html",
    "title": "Class BaseTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BaseTags Inheritance object QueryMap BaseTags ClearChatTags ClearMessageTags GlobalUserStateTags MessageTags NoticeTags RoomStateTags SendMessageTags WhisperTags Implements IDictionary<, ><string, string> Inherited Members QueryMap.CreateQueryMap() Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public abstract class BaseTags : QueryMap, IDictionary<string, string> Methods Name Description LoadQueryMap(IReadOnlyDictionary<string, string>) Fill a dictionary with tags in their query format."
  },
  "api/AuxLabs.Twitch.Chat.Models.BitsBadgeTierTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.BitsBadgeTierTags.html",
    "title": "Class BitsBadgeTierTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsBadgeTierTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags BitsBadgeTierTags Implements IDictionary<, ><string, string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class BitsBadgeTierTags : UserNoticeTags, IDictionary<string, string> Properties Name Description BitsThreshold The tier of the Bits badge the user just earned. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.ClearChatEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.ClearChatEventArgs.html",
    "title": "Class ClearChatEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearChatEventArgs Inheritance object ClearChatEventArgs Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class ClearChatEventArgs Constructors Name Description ClearChatEventArgs(IReadOnlyCollection<string>) Properties Name Description ChannelName The channel's name. Tags The tags for this event, if provided. UserName The user whose messages were cleared from chat. Methods Name Description Create(IrcPayload)"
  },
  "api/AuxLabs.Twitch.Chat.Models.ClearChatTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.ClearChatTags.html",
    "title": "Class ClearChatTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearChatTags Inheritance object QueryMap BaseTags ClearChatTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class ClearChatTags : BaseTags, IDictionary<string, string> Properties Name Description BanDuration The message includes this tag if the user was put in a timeout. ChannelId The ID of the channel where the messages were removed from. TargetUserId The ID of the user that was banned or put in a timeout. Timestamp The date and time this event occurred. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs.html",
    "title": "Class ClearMessageEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearMessageEventArgs Inheritance object ClearMessageEventArgs Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class ClearMessageEventArgs Constructors Name Description ClearMessageEventArgs(IReadOnlyCollection<string>) Properties Name Description ChannelName Message Tags Methods Name Description Create(IrcPayload)"
  },
  "api/AuxLabs.Twitch.Chat.Models.ClearMessageTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.ClearMessageTags.html",
    "title": "Class ClearMessageTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ClearMessageTags Inheritance object QueryMap BaseTags ClearMessageTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class ClearMessageTags : BaseTags, IDictionary<string, string> Properties Name Description ChannelId The ID of the channel (chat room) where the message was removed from. TargetMessageId A UUID that identifies the message that was removed. Timestamp The date and time this event occurred. UserName The name of the user who sent the message. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.GlobalUserStateTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.GlobalUserStateTags.html",
    "title": "Class GlobalUserStateTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GlobalUserStateTags Inheritance object QueryMap BaseTags GlobalUserStateTags UserStateTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class GlobalUserStateTags : BaseTags, IDictionary<string, string> Properties Name Description BadgeInfo Contains metadata related to the chat badges in the badges tag. Badges A collection of badges the user has. Color The color of the userâ€™s name in the chat room. EmoteSets A collection of IDs that identify the emote sets that the user has access to. IsTurbo Indicates whether the user has site-wide commercial free mode enabled. UserDisplayName The userâ€™s display name. UserId The userâ€™s ID. UserType The type of user. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.html",
    "title": "Namespace AuxLabs.Twitch.Chat.Models | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Chat.Models Classes BaseTags BitsBadgeTierTags ClearChatEventArgs ClearChatTags ClearMessageEventArgs ClearMessageTags GlobalUserStateTags MembershipEventArgs MessageEventArgs MessageTags NamesEventArgs NoticeEventArgs NoticeTags RaidTags RitualTags RoomStateEventArgs RoomStateTags SendMessageTags SubscriptionGiftTags SubscriptionGiftUpgradeAnonymousTags SubscriptionGiftUpgradeTags SubscriptionTags UserNoticeEventArgs UserNoticeTags UserStateEventArgs UserStateTags WhisperEventArgs WhisperTags"
  },
  "api/AuxLabs.Twitch.Chat.Models.MembershipEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.MembershipEventArgs.html",
    "title": "Class MembershipEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MembershipEventArgs Inheritance object MembershipEventArgs Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class MembershipEventArgs Constructors Name Description MembershipEventArgs(IrcPrefix, IReadOnlyCollection<string>) Properties Name Description ChannelName UserName Methods Name Description Create(IrcPayload)"
  },
  "api/AuxLabs.Twitch.Chat.Models.MessageEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.MessageEventArgs.html",
    "title": "Class MessageEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MessageEventArgs Inheritance object MessageEventArgs Implements IChatMessage IMessage IEntity<string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class MessageEventArgs : IChatMessage, IMessage, IEntity<string> Constructors Name Description MessageEventArgs(IrcPrefix?, IReadOnlyCollection<string>) Fields Name Description ContainsSpecialCharacters If special characters are present, emote indices will be incorrect. Properties Name Description ChannelName Message Tags UserName Methods Name Description Create(IrcPayload) Explicit Interface Implementations Name Description IChatMessage.BadgeInfo IChatMessage.BitsAmount IChatMessage.ChannelId IChatMessage.CustomRewardId IChatMessage.IsEmoteOnly IChatMessage.IsFirstMessage IChatMessage.IsModerator IChatMessage.IsSubscriber IChatMessage.IsVip IChatMessage.MessageType IChatMessage.Nonce IChatMessage.ReplyAuthorDisplayName IChatMessage.ReplyAuthorId IChatMessage.ReplyAuthorName IChatMessage.ReplyMessageContent IChatMessage.ReplyMessageId IChatMessage.Timestamp IMessage.Action IMessage.AuthorColor IMessage.AuthorDisplayName IMessage.AuthorId IMessage.AuthorName IMessage.AuthorType IMessage.Badges IMessage.Content IMessage.Emotes IMessage.IsTurbo IEntity<string>.Id"
  },
  "api/AuxLabs.Twitch.Chat.Models.MessageTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.MessageTags.html",
    "title": "Class MessageTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MessageTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class MessageTags : BaseTags, IDictionary<string, string> Properties Name Description Action The message value when someone uses the /me chat command AuthorColor The color of the userâ€™s name in the chat room. AuthorDisplayName The userâ€™s display name. AuthorId The ID of the user that sent the message. AuthorName The userâ€™s login name. AuthorType The type of user. BadgeInfo Contains metadata related to the chat badges in the badges tag. Currently, this tag contains metadata only for subscriber badges, to indicate the number of months the user has been a subscriber. Badges A collection of badges the user has. BitsAmount The amount of Bits the user cheered. Only a Bits cheer message includes this tag. ChannelId An ID that identifies the channel. CustomRewardId Emotes A collection of emotes and their position in the message. IsEmoteOnly Indicates whether this message contains only emotes IsFirstMessage Indicates whether this is the user's first message in the channel IsModerator Indicates whether the user is a moderator. IsSubscriber Indicates whether the user is a subscriber. IsTurbo Indicates whether the user has site-wide commercial free mode enabled. IsVIP Indicates whether the user is a VIP. MessageId An ID that uniquely identifies the message. MessageType A value that indicates if a message has unique properties Nonce A unique value used to identify requests ReplyAuthorDisplayName The display name of the sender of the parent message. ReplyAuthorId An ID that identifies the sender of the parent message. ReplyAuthorName The login name of the sender of the parent message. ReplyMessageContent The text of the parent message. ReplyMessageId An ID that uniquely identifies the parent message that this message is replying to. Timestamp The date and time that the message was sent. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.NamesEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.NamesEventArgs.html",
    "title": "Class NamesEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class NamesEventArgs Inheritance object NamesEventArgs Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class NamesEventArgs Constructors Name Description NamesEventArgs(IReadOnlyCollection<string>) Properties Name Description ChannelName Names"
  },
  "api/AuxLabs.Twitch.Chat.Models.NoticeEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.NoticeEventArgs.html",
    "title": "Class NoticeEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class NoticeEventArgs Inheritance object NoticeEventArgs Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class NoticeEventArgs Constructors Name Description NoticeEventArgs(IReadOnlyCollection<string>) Properties Name Description ChannelName Message Tags Methods Name Description Create(IrcPayload)"
  },
  "api/AuxLabs.Twitch.Chat.Models.NoticeTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.NoticeTags.html",
    "title": "Class NoticeTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class NoticeTags Inheritance object QueryMap BaseTags NoticeTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class NoticeTags : BaseTags, IDictionary<string, string> Properties Name Description NoticeType A value to determine the actionâ€™s outcome. TargetUserId The ID of the user that the action targeted. If specified. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.RaidTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.RaidTags.html",
    "title": "Class RaidTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RaidTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags RaidTags Implements IDictionary<, ><string, string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class RaidTags : UserNoticeTags, IDictionary<string, string> Properties Name Description ProfileImageUrl The profile image of the broadcaster raiding this channel. RaiderDisplayName The display name of the broadcaster raiding this channel. RaiderLogin The login name of the broadcaster raiding this channel. RaiderViewerCount The number of viewers raiding this channel from the broadcasterâ€™s channel. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.RitualTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.RitualTags.html",
    "title": "Class RitualTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RitualTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags RitualTags Implements IDictionary<, ><string, string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class RitualTags : UserNoticeTags, IDictionary<string, string> Properties Name Description RitualType The name of the ritual being celebrated. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.RoomStateEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.RoomStateEventArgs.html",
    "title": "Class RoomStateEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RoomStateEventArgs Inheritance object RoomStateEventArgs Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class RoomStateEventArgs Constructors Name Description RoomStateEventArgs(IReadOnlyCollection<string>) Properties Name Description ChannelName Tags Methods Name Description Create(IrcPayload)"
  },
  "api/AuxLabs.Twitch.Chat.Models.RoomStateTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.RoomStateTags.html",
    "title": "Class RoomStateTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RoomStateTags Inheritance object QueryMap BaseTags RoomStateTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class RoomStateTags : BaseTags, IDictionary<string, string> Properties Name Description ChannelId An ID that identifies the channel. FollowersOnlyMinutes Indicates how long, in minutes, the user must have followed the broadcaster before posting chat messages. IsEmoteOnly Indicates whether the chat room allows only messages with emotes. IsFollowersOnly Indicates whether only followers can post messages in the chat room. IsRituals IsSlowEnabled Indicates whether users must wait between sending messages. IsSubscribersOnly Indicates whether only subscribers and moderators can chat in the chat room. IsUniqueEnabled Indicates whether a userâ€™s messages must be unique. SlowSeconds Indicates how long, in seconds, users must wait between sending messages. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.SendMessageTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.SendMessageTags.html",
    "title": "Class SendMessageTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SendMessageTags Inheritance object QueryMap BaseTags SendMessageTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class SendMessageTags : BaseTags, IDictionary<string, string> Constructors Name Description SendMessageTags(string) Properties Name Description ReplyMessageId The id of the message to reply to Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.SubscriptionGiftTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.SubscriptionGiftTags.html",
    "title": "Class SubscriptionGiftTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags SubscriptionGiftTags Implements IDictionary<, ><string, string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class SubscriptionGiftTags : UserNoticeTags, IDictionary<string, string> Properties Name Description GiftedMonths The number of months gifted as part of a single, multi-month gift. RecipientDisplayName The display name of the subscription gift recipient. RecipientId The user ID of the subscription gift recipient. RecipientName The user name of the subscription gift recipient. SubscriptionName The display name of the subscription plan. This may be a default name or one created by the channel owner. SubscriptionType The type of subscription plan being used. TotalMonths The total number of months the user has subscribed. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.SubscriptionGiftUpgradeAnonymousTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.SubscriptionGiftUpgradeAnonymousTags.html",
    "title": "Class SubscriptionGiftUpgradeAnonymousTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftUpgradeAnonymousTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags SubscriptionGiftUpgradeAnonymousTags SubscriptionGiftUpgradeTags Implements IDictionary<, ><string, string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class SubscriptionGiftUpgradeAnonymousTags : UserNoticeTags, IDictionary<string, string> Properties Name Description PromoGiftName The subscriptions promo, if any, that is ongoing. PromoGiftTotal The number of gifts the gifter has given. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.SubscriptionGiftUpgradeTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.SubscriptionGiftUpgradeTags.html",
    "title": "Class SubscriptionGiftUpgradeTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftUpgradeTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags SubscriptionGiftUpgradeAnonymousTags SubscriptionGiftUpgradeTags Implements IDictionary<, ><string, string> Inherited Members SubscriptionGiftUpgradeAnonymousTags.PromoGiftTotal SubscriptionGiftUpgradeAnonymousTags.PromoGiftName UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class SubscriptionGiftUpgradeTags : SubscriptionGiftUpgradeAnonymousTags, IDictionary<string, string> Properties Name Description SenderDisplayName The display name of the user who gifted the subscription. SenderLogin The login name of the user who gifted the subscription. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.SubscriptionTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.SubscriptionTags.html",
    "title": "Class SubscriptionTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags SubscriptionTags Implements IDictionary<, ><string, string> Inherited Members UserNoticeTags.NoticeType UserNoticeTags.SystemMessage MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class SubscriptionTags : UserNoticeTags, IDictionary<string, string> Properties Name Description IsStreakShared Indicates whether the user wants their streaks shared. StreakMonths The number of consecutive months the user has subscribed. SubscriptionName The display name of the subscription plan. This may be a default name or one created by the channel owner SubscriptionType The type of subscription plan being used. TotalMonths The total number of months the user has subscribed. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs.html",
    "title": "Class UserNoticeEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserNoticeEventArgs Inheritance object UserNoticeEventArgs Implements IUserNoticeMessage IChatMessage IMessage IEntity<string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class UserNoticeEventArgs : IUserNoticeMessage, IChatMessage, IMessage, IEntity<string> Constructors Name Description UserNoticeEventArgs(IReadOnlyCollection<string>) Properties Name Description ChannelName Message Tags Methods Name Description Create(IrcPayload) Explicit Interface Implementations Name Description IChatMessage.BadgeInfo IChatMessage.BitsAmount IChatMessage.ChannelId IChatMessage.CustomRewardId IChatMessage.IsEmoteOnly IChatMessage.IsFirstMessage IChatMessage.IsModerator IChatMessage.IsSubscriber IChatMessage.IsVip IChatMessage.MessageType IChatMessage.Nonce IChatMessage.ReplyAuthorDisplayName IChatMessage.ReplyAuthorId IChatMessage.ReplyAuthorName IChatMessage.ReplyMessageContent IChatMessage.ReplyMessageId IChatMessage.Timestamp IMessage.Action IMessage.AuthorColor IMessage.AuthorDisplayName IMessage.AuthorId IMessage.AuthorName IMessage.AuthorType IMessage.Badges IMessage.Content IMessage.Emotes IMessage.IsTurbo IUserNoticeMessage.NoticeType IUserNoticeMessage.SystemMessage IEntity<string>.Id"
  },
  "api/AuxLabs.Twitch.Chat.Models.UserNoticeTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.UserNoticeTags.html",
    "title": "Class UserNoticeTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserNoticeTags Inheritance object QueryMap BaseTags MessageTags UserNoticeTags BitsBadgeTierTags RaidTags RitualTags SubscriptionGiftTags SubscriptionGiftUpgradeAnonymousTags SubscriptionTags Implements IDictionary<, ><string, string> Inherited Members MessageTags.Timestamp MessageTags.MessageId MessageTags.ChannelId MessageTags.AuthorId MessageTags.AuthorName MessageTags.AuthorDisplayName MessageTags.AuthorType MessageTags.AuthorColor MessageTags.Nonce MessageTags.CustomRewardId MessageTags.ReplyMessageId MessageTags.ReplyMessageContent MessageTags.ReplyAuthorId MessageTags.ReplyAuthorName MessageTags.ReplyAuthorDisplayName MessageTags.BitsAmount MessageTags.IsModerator MessageTags.IsSubscriber MessageTags.IsTurbo MessageTags.IsVIP MessageTags.IsFirstMessage MessageTags.IsEmoteOnly MessageTags.MessageType MessageTags.Badges MessageTags.BadgeInfo MessageTags.Emotes MessageTags.Action Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class UserNoticeTags : MessageTags, IDictionary<string, string> Properties Name Description NoticeType The type of notice. SystemMessage The message Twitch shows in the chat room for this notice. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.UserStateEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.UserStateEventArgs.html",
    "title": "Class UserStateEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserStateEventArgs Inheritance object UserStateEventArgs Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class UserStateEventArgs Constructors Name Description UserStateEventArgs(IReadOnlyCollection<string>) Properties Name Description ChannelName Tags Methods Name Description Create(IrcPayload)"
  },
  "api/AuxLabs.Twitch.Chat.Models.UserStateTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.UserStateTags.html",
    "title": "Class UserStateTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserStateTags Inheritance object QueryMap BaseTags GlobalUserStateTags UserStateTags Implements IDictionary<, ><string, string> Inherited Members GlobalUserStateTags.UserId GlobalUserStateTags.UserType GlobalUserStateTags.UserDisplayName GlobalUserStateTags.Color GlobalUserStateTags.Badges GlobalUserStateTags.BadgeInfo GlobalUserStateTags.EmoteSets GlobalUserStateTags.IsTurbo Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class UserStateTags : GlobalUserStateTags, IDictionary<string, string> Properties Name Description IsModerator Indicates whether the user is a moderator IsSubscriber Indicates whether the user is a subscriber. MessageId An ID that uniquely identifies a message, if one was sent. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.Models.WhisperEventArgs.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.WhisperEventArgs.html",
    "title": "Class WhisperEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WhisperEventArgs Inheritance object WhisperEventArgs Implements IWhisperMessage IMessage IEntity<string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class WhisperEventArgs : IWhisperMessage, IMessage, IEntity<string> Constructors Name Description WhisperEventArgs(IrcPrefix?, IReadOnlyCollection<string>) Properties Name Description Message ReceiverName SenderName Tags Methods Name Description Create(IrcPayload) Explicit Interface Implementations Name Description IMessage.Action IMessage.AuthorColor IMessage.AuthorDisplayName IMessage.AuthorId IMessage.AuthorName IMessage.AuthorType IMessage.Badges IMessage.Content IMessage.Emotes IMessage.IsTurbo IWhisperMessage.ThreadId IEntity<string>.Id"
  },
  "api/AuxLabs.Twitch.Chat.Models.WhisperTags.html": {
    "href": "api/AuxLabs.Twitch.Chat.Models.WhisperTags.html",
    "title": "Class WhisperTags | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WhisperTags Inheritance object QueryMap BaseTags WhisperTags Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Chat.Models Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class WhisperTags : BaseTags, IDictionary<string, string> Properties Name Description Action The message value when someone uses the /me chat command AuthorColor The color of the userâ€™s name in the chat room. AuthorDisplayName The userâ€™s display name. AuthorId The ID of the user that sent the message. AuthorType The type of user. Badges A collection of badges the user has. Emotes A collection of emotes and their position in the message. IsTurbo Indicates whether the user has site-wide commercial free mode enabled. MessageId An ID that uniquely identifies the message. ThreadId An ID that uniquely identifies the whisper thread. Methods Name Description CreateQueryMap() LoadQueryMap(IReadOnlyDictionary<string, string>)"
  },
  "api/AuxLabs.Twitch.Chat.NoticeType.html": {
    "href": "api/AuxLabs.Twitch.Chat.NoticeType.html",
    "title": "Enum NoticeType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum NoticeType Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public enum NoticeType Fields Name Description ColorChanged EmoteOnlyOff EmoteOnlyOn FollowersOff FollowersOn FollowersOnZero MessageBadCharacters MessageBanned MessageChannelBlocked MessageChannelSuspended MessageDuplicate MessageEmoteOnly MessageFollowersOnly MessageFollowersOnlyFollowed MessageFollowersOnlyZero MessageR9k MessageRatelimited MessageRejected MessageRejectedMandatory MessageRequiresVerifiedEmail MessageRequiresVerifiedPhone MessageSlowmode MessageSubsOnly MessageSuspended MessageTimedout R9kOff R9kOn SlowOff SlowOn SubsOff SubsOn TOSBan Unknown WhisperBanned WhisperBannedRecipient WhisperInvalidLogin WhisperInvalidSelf WhisperRatelimitedMinute WhisperRatelimitedSecond WhisperRestricted WhisperRestrictedRecipient"
  },
  "api/AuxLabs.Twitch.Chat.Requests.BaseChatRequest.html": {
    "href": "api/AuxLabs.Twitch.Chat.Requests.BaseChatRequest.html",
    "title": "Class BaseChatRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BaseChatRequest Inheritance object BaseChatRequest JoinChannelsRequest PartChannelsRequest SendMessageRequest Namespace: AuxLabs.Twitch.Chat.Requests Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public abstract class BaseChatRequest Properties Name Description CancellationToken Methods Name Description CreateRequest() Validate(bool)"
  },
  "api/AuxLabs.Twitch.Chat.Requests.CapabilityRequest.html": {
    "href": "api/AuxLabs.Twitch.Chat.Requests.CapabilityRequest.html",
    "title": "Class CapabilityRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CapabilityRequest Inheritance object IrcPayload CapabilityRequest Implements IPayload Inherited Members IrcPayload.IsHelloEvent IrcPayload.Tags IrcPayload.Prefix IrcPayload.Command IrcPayload.CommandRaw IrcPayload.Parameters IrcPayload.ToString() IrcPayload.TagsTypeSelector IrcPayload.UserNoticeTypeSelector Namespace: AuxLabs.Twitch.Chat.Requests Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class CapabilityRequest : IrcPayload, IPayload Constructors Name Description CapabilityRequest(bool, bool) Properties Name Description HasData"
  },
  "api/AuxLabs.Twitch.Chat.Requests.html": {
    "href": "api/AuxLabs.Twitch.Chat.Requests.html",
    "title": "Namespace AuxLabs.Twitch.Chat.Requests | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Chat.Requests Classes BaseChatRequest CapabilityRequest JoinChannelsRequest PartChannelsRequest SendMessageRequest"
  },
  "api/AuxLabs.Twitch.Chat.Requests.JoinChannelsRequest.html": {
    "href": "api/AuxLabs.Twitch.Chat.Requests.JoinChannelsRequest.html",
    "title": "Class JoinChannelsRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class JoinChannelsRequest Inheritance object BaseChatRequest JoinChannelsRequest Inherited Members BaseChatRequest.CancellationToken Namespace: AuxLabs.Twitch.Chat.Requests Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class JoinChannelsRequest : BaseChatRequest Constructors Name Description JoinChannelsRequest(string[], CancellationToken?) JoinChannelsRequest(params string[]) Properties Name Description ChannelNames Methods Name Description CreateRequest() Validate(bool)"
  },
  "api/AuxLabs.Twitch.Chat.Requests.PartChannelsRequest.html": {
    "href": "api/AuxLabs.Twitch.Chat.Requests.PartChannelsRequest.html",
    "title": "Class PartChannelsRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PartChannelsRequest Inheritance object BaseChatRequest PartChannelsRequest Inherited Members BaseChatRequest.CancellationToken Namespace: AuxLabs.Twitch.Chat.Requests Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class PartChannelsRequest : BaseChatRequest Constructors Name Description PartChannelsRequest(string[], CancellationToken?) PartChannelsRequest(params string[]) Properties Name Description ChannelNames Methods Name Description CreateRequest() Validate(bool)"
  },
  "api/AuxLabs.Twitch.Chat.Requests.SendMessageRequest.html": {
    "href": "api/AuxLabs.Twitch.Chat.Requests.SendMessageRequest.html",
    "title": "Class SendMessageRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SendMessageRequest Inheritance object BaseChatRequest SendMessageRequest Inherited Members BaseChatRequest.CancellationToken Namespace: AuxLabs.Twitch.Chat.Requests Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public class SendMessageRequest : BaseChatRequest Constructors Name Description SendMessageRequest(string, string, string, CancellationToken?) SendMessageRequest(string, string, string) Properties Name Description ChannelName Message ReplyMessageId Methods Name Description CreateRequest() Validate(bool)"
  },
  "api/AuxLabs.Twitch.Chat.RitualType.html": {
    "href": "api/AuxLabs.Twitch.Chat.RitualType.html",
    "title": "Enum RitualType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum RitualType Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public enum RitualType Fields Name Description NewChatter Unknown"
  },
  "api/AuxLabs.Twitch.Chat.TwitchChatClient.html": {
    "href": "api/AuxLabs.Twitch.Chat.TwitchChatClient.html",
    "title": "Class TwitchChatClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchChatClient Inheritance object TwitchChatClient Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.dll Syntax public class TwitchChatClient Constructors Name Description TwitchChatClient(TwitchChatConfig) TwitchChatClient(string, TwitchChatConfig) Properties Name Description Channels CommandsRequested CurrentName Identity IRC IsReadOnly MessageCacheSize MyUser Rest TagsRequested ThrowOnUnknownEvent UseBufferedResponses UserCacheSize Methods Name Description Dispose(bool) GetChannel(string) Get a channel from the cache GetChannelByName(string) JoinChannelAsync(string, CancellationToken?) JoinChannelsAsync(string[], CancellationToken?) JoinChannelsAsync(params string[]) JoinMyChannelAsync(CancellationToken?) LeaveChannelAsync(string, CancellationToken?) LeaveChannelAsync(string) LeaveChannelsAsync(string[], CancellationToken?) LeaveChannelsAsync(params string[]) RunAsync() SendMessageAsync(string, string, string, CancellationToken?) ValidateAsync() ValidateAsync(string, string) Events Name Description ChannelBitsTierUnlocked Triggered when a user shares that they just unlocked a new bits tier. ChannelJoined Triggered when the currently authorized user joins a channel. ChannelLeft Triggered when the currently authorized user leaves a channel. ChannelRaided Triggered when a user raids the specified channel. ChannelRitual ChannelStateUpdated Triggered when the state of a channel is updated. ChatCleared Triggered when the entire chat is cleared in a channel. Connected Triggered when the socket connection is established Disconnected Triggered when the socket connection is closed LoggedIn Triggered when the socket connection is established MessageDeleted Triggered when a message is deleted in a channel. MessageReceived Triggered when a message is received in a channel Reconnect Triggered when the server tells the client to reconnect Subscription SubscriptionGifted SubscriptionGiftUpgraded SubscriptionMessageReceived Triggered when a subscription message is received in a channel UnknownEventReceived Triggered when an unknown event is received UserBanned Triggered when a user is banned in a channel. UserJoinedChannel Triggered when any user joins a channel. UserLeftChannel Triggered when any user leaves a channel. UserStateUpdated Triggered when the current user's state is updated. WhisperReceived"
  },
  "api/AuxLabs.Twitch.Chat.TwitchChatConfig.html": {
    "href": "api/AuxLabs.Twitch.Chat.TwitchChatConfig.html",
    "title": "Class TwitchChatConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchChatConfig Inheritance object TwitchChatApiConfig TwitchChatConfig Inherited Members TwitchChatApiConfig.RequestCommands TwitchChatApiConfig.RequestTags TwitchChatApiConfig.ThrowOnUnknownEvent TwitchChatApiConfig.ThrowOnUnhandledTags TwitchChatApiConfig.UseVerifiedRateLimits TwitchChatApiConfig.IrcSerializer Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.dll Syntax public class TwitchChatConfig : TwitchChatApiConfig Properties Name Description MessageCacheSize How many messages to keep in the cache per channel. RestConfig Configuration for the internal rest client UseBufferedResponses Should the client wait for and return relative event data after a request is submitted? UserCacheSize How many users to keep in the cache per channel."
  },
  "api/AuxLabs.Twitch.Chat.UserNoticeType.html": {
    "href": "api/AuxLabs.Twitch.Chat.UserNoticeType.html",
    "title": "Enum UserNoticeType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum UserNoticeType Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public enum UserNoticeType Fields Name Description Announcement BitsBadgeTier Raid Resubscription RewardGift Ritual Subscription SubscriptionGift SubscriptionGiftUpgrade SubscriptionGiftUpgradeAnonymous SubscriptionMysteryGift Unknown Unraid"
  },
  "api/AuxLabs.Twitch.Chat.UserType.html": {
    "href": "api/AuxLabs.Twitch.Chat.UserType.html",
    "title": "Enum UserType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum UserType Namespace: AuxLabs.Twitch.Chat Assembly: AuxLabs.Twitch.Chat.Api.dll Syntax public enum UserType Fields Name Description Admin GlobalModerator Normal Staff"
  },
  "api/AuxLabs.Twitch.ChatColor.html": {
    "href": "api/AuxLabs.Twitch.ChatColor.html",
    "title": "Enum ChatColor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ChatColor Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum ChatColor Fields Name Description Blue BlueViolet CadetBlue Chocolate Coral DodgerBlue Firebrick GoldenRod Green HotPink None OrangeRed Red SeaGreen SpringGreen YellowGreen"
  },
  "api/AuxLabs.Twitch.CheermoteType.html": {
    "href": "api/AuxLabs.Twitch.CheermoteType.html",
    "title": "Enum CheermoteType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum CheermoteType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum CheermoteType Fields Name Description ChannelCustom DisplayOnly GlobalFirstParty GlobalThirdParty None Sponsored"
  },
  "api/AuxLabs.Twitch.CostType.html": {
    "href": "api/AuxLabs.Twitch.CostType.html",
    "title": "Enum CostType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum CostType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum CostType Fields Name Description Bits None"
  },
  "api/AuxLabs.Twitch.CultureInfoConverter.html": {
    "href": "api/AuxLabs.Twitch.CultureInfoConverter.html",
    "title": "Class CultureInfoConverter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CultureInfoConverter Inheritance object CultureInfoConverter Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class CultureInfoConverter : JsonConverter<CultureInfo> Methods Name Description Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Write(Utf8JsonWriter, CultureInfo, JsonSerializerOptions)"
  },
  "api/AuxLabs.Twitch.DateRange.html": {
    "href": "api/AuxLabs.Twitch.DateRange.html",
    "title": "Struct DateRange | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct DateRange Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public readonly struct DateRange Constructors Name Description DateRange(DateTime, DateTime) Properties Name Description EndedAt StartedAt"
  },
  "api/AuxLabs.Twitch.DefaultRateLimiter.html": {
    "href": "api/AuxLabs.Twitch.DefaultRateLimiter.html",
    "title": "Class DefaultRateLimiter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DefaultRateLimiter Inheritance object DefaultRateLimiter Implements IRateLimiter Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class DefaultRateLimiter : IRateLimiter Constructors Name Description DefaultRateLimiter() Methods Name Description EnterBucketLockAsync(string, CancellationToken) EnterGlobalLockAsync(CancellationToken) EnterLockAsync(string, CancellationToken) UpdateLimit(string, RateLimitInfo, bool)"
  },
  "api/AuxLabs.Twitch.DropStatus.html": {
    "href": "api/AuxLabs.Twitch.DropStatus.html",
    "title": "Enum DropStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum DropStatus Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum DropStatus Fields Name Description InvalidId The entitlement IDs are not valid. NotFound The entitlement IDs were not found. Success The status of the entitlements were successfully updated. Unauthorized The user or organization identified by the user access token is not authorized to update the entitlements. UpdateFailed The update failed. These are considered transient errors and the request should be retried later."
  },
  "api/AuxLabs.Twitch.EmoteFormat.html": {
    "href": "api/AuxLabs.Twitch.EmoteFormat.html",
    "title": "Enum EmoteFormat | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteFormat Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum EmoteFormat Fields Name Description Animated Static"
  },
  "api/AuxLabs.Twitch.EmotePosition.html": {
    "href": "api/AuxLabs.Twitch.EmotePosition.html",
    "title": "Struct EmotePosition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct EmotePosition Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public readonly struct EmotePosition Constructors Name Description EmotePosition(string, Range) Properties Name Description Id An ID that uniquely identifies this emote Range The position of this emote in a message Methods Name Description Parse(string, string, out EmotePosition) ToString() TryParseMany(string, out IReadOnlyCollection<EmotePosition>)"
  },
  "api/AuxLabs.Twitch.EmotePositionConverter.html": {
    "href": "api/AuxLabs.Twitch.EmotePositionConverter.html",
    "title": "Class EmotePositionConverter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EmotePositionConverter Inheritance object EmotePositionConverter Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class EmotePositionConverter : JsonConverter<EmotePosition> Methods Name Description Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Write(Utf8JsonWriter, EmotePosition, JsonSerializerOptions)"
  },
  "api/AuxLabs.Twitch.EmoteScale.html": {
    "href": "api/AuxLabs.Twitch.EmoteScale.html",
    "title": "Enum EmoteScale | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteScale Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum EmoteScale Fields Name Description Large A large version (112px x 112px) is available. Medium A medium version (56px x 56px) is available. Small A small version (28px x 28px) is available."
  },
  "api/AuxLabs.Twitch.EmoteTheme.html": {
    "href": "api/AuxLabs.Twitch.EmoteTheme.html",
    "title": "Enum EmoteTheme | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteTheme Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum EmoteTheme Fields Name Description Dark Light"
  },
  "api/AuxLabs.Twitch.EmoteType.html": {
    "href": "api/AuxLabs.Twitch.EmoteType.html",
    "title": "Enum EmoteType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EmoteType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum EmoteType Fields Name Description BitsTier A custom bits tier emote. Follower A custom follower emote. None Subscription A custom subscriber emote."
  },
  "api/AuxLabs.Twitch.EnumHelper.html": {
    "href": "api/AuxLabs.Twitch.EnumHelper.html",
    "title": "Class EnumHelper | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EnumHelper Inheritance object EnumHelper Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public static class EnumHelper Methods Name Description GetEnumValue<T>(string) GetStringValue<T>(T)"
  },
  "api/AuxLabs.Twitch.EventSub.Api.EventSubFrame.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Api.EventSubFrame.html",
    "title": "Class EventSubFrame | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubFrame Inheritance object EventSubFrame Implements IPayload Namespace: AuxLabs.Twitch.EventSub.Api Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class EventSubFrame : IPayload Properties Name Description IsHelloEvent Metadata An object that identifies the message. Payload An object that contains the message."
  },
  "api/AuxLabs.Twitch.EventSub.Api.EventSubPayload-1.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Api.EventSubPayload-1.html",
    "title": "Class EventSubPayload<TEvent> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubPayload<TEvent> Inheritance object EventSubPayload<TEvent> EventSubPayload Namespace: AuxLabs.Twitch.EventSub.Api Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class EventSubPayload<TEvent> Type Parameters Name Description TEvent Properties Name Description Challenge Event EventTypeSelector Subscription"
  },
  "api/AuxLabs.Twitch.EventSub.Api.EventSubPayload.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Api.EventSubPayload.html",
    "title": "Class EventSubPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubPayload Inheritance object EventSubPayload<object> EventSubPayload EventSubWebSocketPayload Inherited Members EventSubPayload<object>.Challenge EventSubPayload<object>.Subscription EventSubPayload<object>.Event EventSubPayload<object>.EventTypeSelector Namespace: AuxLabs.Twitch.EventSub.Api Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class EventSubPayload : EventSubPayload<object>"
  },
  "api/AuxLabs.Twitch.EventSub.Api.EventSubWebSocketPayload.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Api.EventSubWebSocketPayload.html",
    "title": "Class EventSubWebSocketPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubWebSocketPayload Inheritance object EventSubPayload<object> EventSubPayload EventSubWebSocketPayload Inherited Members EventSubPayload<object>.Challenge EventSubPayload<object>.Subscription EventSubPayload<object>.Event EventSubPayload<object>.EventTypeSelector Namespace: AuxLabs.Twitch.EventSub.Api Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class EventSubWebSocketPayload : EventSubPayload Properties Name Description Session"
  },
  "api/AuxLabs.Twitch.EventSub.Api.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Api.html",
    "title": "Namespace AuxLabs.Twitch.EventSub.Api | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.EventSub.Api Classes EventSubFrame EventSubPayload EventSubPayload<TEvent> EventSubWebSocketPayload TwitchEventSubApiClient TwitchEventSubApiConfig"
  },
  "api/AuxLabs.Twitch.EventSub.Api.TwitchEventSubApiClient.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Api.TwitchEventSubApiClient.html",
    "title": "Class TwitchEventSubApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchEventSubApiClient Inheritance object TwitchEventSubApiClient Namespace: AuxLabs.Twitch.EventSub.Api Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class TwitchEventSubApiClient : IDisposable Constructors Name Description TwitchEventSubApiClient(TwitchEventSubApiConfig) TwitchEventSubApiClient(string, TwitchEventSubApiConfig) Fields Name Description ThrowOnUnknownEvent Properties Name Description Session State Methods Name Description Dispose() Dispose(bool) Run() RunAsync() Events Name Description AuthorizationGranted A userâ€™s authorization has been granted to your client id. AuthorizationRevoked A userâ€™s authorization has been revoked for your client id. BitsCheered A user cheers on the specified channel. BitsTransactionCreated A Bits transaction occurred for a specified Twitch Extension. BroadcastEnded The specified broadcaster stops a stream. BroadcastStarted The specified broadcaster starts a stream. ChannelFollow A specified channel receives a follow. ChannelRaided A broadcaster raids another broadcasterâ€™s channel. ChannelUpdated A broadcaster updates their channel properties e.g., category, title, mature flag, broadcast, or language. CharityCampaignEnded Sends an event notification when the broadcaster stops a charity campaign. CharityCampaignProgress Sends an event notification when progress is made towards the campaignâ€™s goal or when the broadcaster changes the fundraising goal. CharityCampaignStarted Sends an event notification when the broadcaster starts a charity campaign. CharityDonation Sends an event notification when a user donates to the broadcasterâ€™s charity campaign. Connected The client has successfully made a connection to the server. Disconnected The client was forcibly disconnected from the server. DropEntitlementGranted An entitlement for a Drop is granted to a user. GoalEnded Get notified when a broadcaster ends a goal. GoalProgress Get notified when progress (either positive or negative) is made towards a broadcasterâ€™s goal. GoalStarted Get notified when a broadcaster begins a goal. HypeTrainEnded A Hype Train ends on the specified channel. HypeTrainProgress A Hype Train makes progress on the specified channel. HypeTrainStarted A Hype Train begins on the specified channel. ModeratorAdded Moderator privileges were added to a user on a specified channel. ModeratorRemoved Moderator privileges were removed from a user on a specified channel. NotificationReceived Triggered whenever a notification payload is received. PollEnded A poll ended on a specified channel. PollProgress Users respond to a poll on a specified channel. PollStarted A poll started on a specified channel. PredictionEnded A Prediction ended on a specified channel. PredictionLocked A Prediction was locked on a specified channel. PredictionProgress Users participated in a Prediction on a specified channel. PredictionStarted A Prediction started on a specified channel. Reconnect Triggered when the server needs to terminate the connection. RedemptionAdded A viewer has redeemed a custom channel points reward on the specified channel. RedemptionUpdated A redemption of a channel points custom reward has been updated for the specified channel. Revocation Triggered when the user no longer exists or they revoked the authorization token that the subscription relied on. RewardAdded A custom channel points reward has been created for the specified channel. RewardRemoved A custom channel points reward has been removed from the specified channel. RewardUpdated A custom channel points reward has been updated for the specified channel. SessionCreated Triggered when a session is created after connection. ShieldModeDisabled Sends a notification when the broadcaster deactivates Shield Mode. ShieldModeEnabled Sends a notification when the broadcaster activates Shield Mode. ShoutoutCreated Sends a notification when the specified broadcaster sends a Shoutout. ShoutoutReceived Sends a notification when the specified broadcaster receives a Shoutout. Subscription A notification when a specified channel receives a subscriber. This does not include resubscribes. SubscriptionEnded A notification when a subscription to the specified channel ends. SubscriptionGifted A notification when a viewer gives a gift subscription to one or more users in the specified channel. SubscriptionMessage A notification when a user sends a resubscription chat message in a specific channel. UnknownEventReceived An unhandled irc command was received. UserBanned A viewer is banned from the specified channel. UserUnbanned A viewer is unbanned from the specified channel. UserUpdated A user has updated their account."
  },
  "api/AuxLabs.Twitch.EventSub.Api.TwitchEventSubApiConfig.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Api.TwitchEventSubApiConfig.html",
    "title": "Class TwitchEventSubApiConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchEventSubApiConfig Inheritance object TwitchEventSubApiConfig TwitchEventSubConfig Namespace: AuxLabs.Twitch.EventSub.Api Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class TwitchEventSubApiConfig Properties Name Description ThrowOnUnknownEvent Should an exception be raised if an unhandled event is received from twitch."
  },
  "api/AuxLabs.Twitch.EventSub.BanEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.BanEventArgs.html",
    "title": "Class BanEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BanEventArgs Inheritance object BanEventArgs Namespace: AuxLabs.Twitch.EventSub Assembly: AuxLabs.Twitch.EventSub.dll Syntax public class BanEventArgs Properties Name Description BannedAt Broadcaster EndsAt IsPermanent Moderator Reason User Methods Name Description Create(TwitchEventSubClient, BanEventArgs)"
  },
  "api/AuxLabs.Twitch.EventSub.Entities.EventSubBroadcast.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Entities.EventSubBroadcast.html",
    "title": "Class EventSubBroadcast | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubBroadcast Inheritance object EventSubEntity<string> EventSubBroadcast Inherited Members EventSubEntity<string>.Id Namespace: AuxLabs.Twitch.EventSub.Entities Assembly: AuxLabs.Twitch.EventSub.dll Syntax public class EventSubBroadcast : EventSubEntity<string> Constructors Name Description EventSubBroadcast(TwitchEventSubClient, string) Properties Name Description Broadcaster BroadcastType StartedAt"
  },
  "api/AuxLabs.Twitch.EventSub.Entities.EventSubEntity-1.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Entities.EventSubEntity-1.html",
    "title": "Class EventSubEntity<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubEntity<T> Inheritance object EventSubEntity<T> EventSubBroadcast EventSubSimpleUser Namespace: AuxLabs.Twitch.EventSub.Entities Assembly: AuxLabs.Twitch.EventSub.dll Syntax public abstract class EventSubEntity<T> where T : IEquatable<T> Type Parameters Name Description T Properties Name Description Id An ID that uniquely identifies the entity."
  },
  "api/AuxLabs.Twitch.EventSub.Entities.EventSubSimpleUser.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Entities.EventSubSimpleUser.html",
    "title": "Class EventSubSimpleUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubSimpleUser Inheritance object EventSubEntity<string> EventSubSimpleUser EventSubUser Implements ISimpleUser Inherited Members EventSubEntity<string>.Id Namespace: AuxLabs.Twitch.EventSub.Entities Assembly: AuxLabs.Twitch.EventSub.dll Syntax public class EventSubSimpleUser : EventSubEntity<string>, ISimpleUser Constructors Name Description EventSubSimpleUser(TwitchEventSubClient, string) Properties Name Description DisplayName Name"
  },
  "api/AuxLabs.Twitch.EventSub.Entities.EventSubUser.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Entities.EventSubUser.html",
    "title": "Class EventSubUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubUser Inheritance object EventSubEntity<string> EventSubSimpleUser EventSubUser Implements ISimpleUser Inherited Members EventSubSimpleUser.Name EventSubSimpleUser.DisplayName EventSubEntity<string>.Id Namespace: AuxLabs.Twitch.EventSub.Entities Assembly: AuxLabs.Twitch.EventSub.dll Syntax public class EventSubUser : EventSubSimpleUser, ISimpleUser Constructors Name Description EventSubUser(TwitchEventSubClient, string) Properties Name Description Description Email IsEmailVerified"
  },
  "api/AuxLabs.Twitch.EventSub.Entities.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Entities.html",
    "title": "Namespace AuxLabs.Twitch.EventSub.Entities | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.EventSub.Entities Classes EventSubBroadcast EventSubEntity<T> EventSubSimpleUser EventSubUser"
  },
  "api/AuxLabs.Twitch.EventSub.html": {
    "href": "api/AuxLabs.Twitch.EventSub.html",
    "title": "Namespace AuxLabs.Twitch.EventSub | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.EventSub Classes BanEventArgs TwitchEventSubClient TwitchEventSubConfig Interfaces IBan"
  },
  "api/AuxLabs.Twitch.EventSub.IBan.html": {
    "href": "api/AuxLabs.Twitch.EventSub.IBan.html",
    "title": "Interface IBan | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IBan Namespace: AuxLabs.Twitch.EventSub Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public interface IBan Properties Name Description Broadcaster Moderator User"
  },
  "api/AuxLabs.Twitch.EventSub.Models.AuthorizationEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.AuthorizationEventArgs.html",
    "title": "Class AuthorizationEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationEventArgs Inheritance object AuthorizationEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class AuthorizationEventArgs Properties Name Description ClientId The client_id of the application that was granted user access. UserDisplayName The user display name for the user who has granted authorization for your client id. UserId The user id for the user who has granted authorization for your client id. UserName The user login for the user who has granted authorization for your client id."
  },
  "api/AuxLabs.Twitch.EventSub.Models.BanEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.BanEventArgs.html",
    "title": "Class BanEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BanEventArgs Inheritance object BanEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class BanEventArgs Properties Name Description BannedAt The UTC date and time of when the user was banned or put in a timeout. BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. EndsAt The UTC date and time of when the timeout ends. IsPermanent Indicates whether the ban is permanent. ModeratorDisplayName The user name of the issuer of the ban. ModeratorId The user ID of the issuer of the ban. ModeratorName The user login of the issuer of the ban. Reason The reason behind the ban. UserDisplayName The user display name for the user who was banned on the specified channel. UserId The user ID for the user who was banned on the specified channel. UserName The user login for the user who was banned on the specified channel."
  },
  "api/AuxLabs.Twitch.EventSub.Models.BitsProduct.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.BitsProduct.html",
    "title": "Class BitsProduct | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsProduct Inheritance object BitsProduct Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class BitsProduct Properties Name Description BitsAmount Bits involved in the transaction. IsDevelopment Flag indicating if the product is in development. Name Product name. Sku Unique identifier for the product acquired."
  },
  "api/AuxLabs.Twitch.EventSub.Models.BitsTransactionEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.BitsTransactionEventArgs.html",
    "title": "Class BitsTransactionEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsTransactionEventArgs Inheritance object BitsTransactionEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class BitsTransactionEventArgs Properties Name Description BroadcasterDisplayName The transactionâ€™s broadcaster display name. BroadcasterId The transactionâ€™s broadcaster ID. BroadcasterName The transactionâ€™s broadcaster login. ClientId Client ID of the extension. Id Transaction ID. Product Additional extension product information. UserDisplayName The transactionâ€™s user display name. UserId The transactionâ€™s user ID. UserName The transactionâ€™s user login."
  },
  "api/AuxLabs.Twitch.EventSub.Models.BroadcastEndedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.BroadcastEndedEventArgs.html",
    "title": "Class BroadcastEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcastEndedEventArgs Inheritance object BroadcastEndedEventArgs BroadcastStartedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class BroadcastEndedEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login."
  },
  "api/AuxLabs.Twitch.EventSub.Models.BroadcastStartedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.BroadcastStartedEventArgs.html",
    "title": "Class BroadcastStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcastStartedEventArgs Inheritance object BroadcastEndedEventArgs BroadcastStartedEventArgs Inherited Members BroadcastEndedEventArgs.BroadcasterId BroadcastEndedEventArgs.BroadcasterName BroadcastEndedEventArgs.BroadcasterDisplayName Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class BroadcastStartedEventArgs : BroadcastEndedEventArgs Properties Name Description Id The id of the stream. StartedAt The timestamp at which the stream went online at. Type The stream type."
  },
  "api/AuxLabs.Twitch.EventSub.Models.CampaignEndedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.CampaignEndedEventArgs.html",
    "title": "Class CampaignEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignEndedEventArgs Inheritance object CampaignProgressEventArgs CampaignEndedEventArgs Inherited Members CampaignProgressEventArgs.Id CampaignProgressEventArgs.BroadcasterId CampaignProgressEventArgs.BroadcasterName CampaignProgressEventArgs.BroadcasterDisplayName CampaignProgressEventArgs.CharityName CampaignProgressEventArgs.CharityDescription CampaignProgressEventArgs.CharityLogoUrl CampaignProgressEventArgs.CharityUrl CampaignProgressEventArgs.CurrentAmount CampaignProgressEventArgs.TargetAmount Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class CampaignEndedEventArgs : CampaignProgressEventArgs Properties Name Description StoppedAt The UTC timestamp of when the broadcaster stopped the campaign."
  },
  "api/AuxLabs.Twitch.EventSub.Models.CampaignProgressEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.CampaignProgressEventArgs.html",
    "title": "Class CampaignProgressEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignProgressEventArgs Inheritance object CampaignProgressEventArgs CampaignEndedEventArgs CampaignStartedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class CampaignProgressEventArgs Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId An ID that identifies the broadcaster thatâ€™s running the campaign. BroadcasterName The broadcasterâ€™s login name. CharityDescription A description of the charity. CharityLogoUrl A URL to an image of the charityâ€™s logo. CharityName The charityâ€™s name. CharityUrl A URL to the charityâ€™s website. CurrentAmount An object that contains the current amount of donations that the campaign has received. Id An ID that identifies the charity campaign. TargetAmount An object that contains the campaignâ€™s target fundraising goal."
  },
  "api/AuxLabs.Twitch.EventSub.Models.CampaignStartedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.CampaignStartedEventArgs.html",
    "title": "Class CampaignStartedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignStartedEventArgs Inheritance object CampaignProgressEventArgs CampaignStartedEventArgs Inherited Members CampaignProgressEventArgs.Id CampaignProgressEventArgs.BroadcasterId CampaignProgressEventArgs.BroadcasterName CampaignProgressEventArgs.BroadcasterDisplayName CampaignProgressEventArgs.CharityName CampaignProgressEventArgs.CharityDescription CampaignProgressEventArgs.CharityLogoUrl CampaignProgressEventArgs.CharityUrl CampaignProgressEventArgs.CurrentAmount CampaignProgressEventArgs.TargetAmount Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class CampaignStartedEventArgs : CampaignProgressEventArgs Properties Name Description StartedAt The UTC timestamp of when the broadcaster started the campaign."
  },
  "api/AuxLabs.Twitch.EventSub.Models.ChannelFollowEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ChannelFollowEventArgs.html",
    "title": "Class ChannelFollowEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelFollowEventArgs Inheritance object ChannelFollowEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ChannelFollowEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. FollowedAt Timestamp of when the follow occurred. UserDisplayName The user display name for the user now following the specified channel. UserId The user ID for the user now following the specified channel. UserName The user login for the user now following the specified channel."
  },
  "api/AuxLabs.Twitch.EventSub.Models.ChannelUpdateEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ChannelUpdateEventArgs.html",
    "title": "Class ChannelUpdateEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelUpdateEventArgs Inheritance object ChannelUpdateEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ChannelUpdateEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. CategoryId The channelâ€™s category ID. CategoryName The category name. IsMature Indicates whether the channel is flagged as mature. Language The channelâ€™s broadcast language. Title The channelâ€™s stream title."
  },
  "api/AuxLabs.Twitch.EventSub.Models.CheerEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.CheerEventArgs.html",
    "title": "Class CheerEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheerEventArgs Inheritance object CheerEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class CheerEventArgs Properties Name Description BitsAmount The number of bits cheered. BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. IsAnonymous Whether the user cheered anonymously or not. Message The message sent with the cheer. UserDisplayName The user display name for the user who cheered on the specified channel. UserId The user ID for the user who cheered on the specified channel. UserName The user login for the user who cheered on the specified channel."
  },
  "api/AuxLabs.Twitch.EventSub.Models.DonationEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.DonationEventArgs.html",
    "title": "Class DonationEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DonationEventArgs Inheritance object DonationEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class DonationEventArgs Properties Name Description Amount An object that contains the amount of money that the user donated. BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId An ID that identifies the broadcaster thatâ€™s running the campaign. BroadcasterName The broadcasterâ€™s login name. CampaignId An ID that identifies the charity campaign. CharityDescription A description of the charity. CharityLogoUrl A URL to an image of the charityâ€™s logo. CharityName The charityâ€™s name. CharityUrl A URL to the charityâ€™s website. Id An ID that identifies the donation. The ID is unique across campaigns. UserDisplayName The userâ€™s display name. UserId An ID that identifies the user that donated to the campaign. UserName The userâ€™s login name."
  },
  "api/AuxLabs.Twitch.EventSub.Models.EntitlementGrantEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.EntitlementGrantEventArgs.html",
    "title": "Class EntitlementGrantEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EntitlementGrantEventArgs Inheritance object EntitlementGrantEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class EntitlementGrantEventArgs Properties Name Description Data A collection of entitlement objects. Id Individual event ID, as assigned by EventSub."
  },
  "api/AuxLabs.Twitch.EventSub.Models.EntitlementGrantEventData.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.EntitlementGrantEventData.html",
    "title": "Class EntitlementGrantEventData | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EntitlementGrantEventData Inheritance object EntitlementGrantEventData Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class EntitlementGrantEventData Properties Name Description BenefitId Identifier of the Benefit. CampaignId The campaign this entitlement is associated with. CategoryId Twitch category ID of the game that was being played when this benefit was entitled. CategoryName The category name. CreatedAt UTC timestamp when this entitlement was granted on Twitch. EntitlementId Unique identifier of the entitlement. Use this to de-duplicate entitlements. OrganizationId The ID of the organization that owns the game that has Drops enabled. UserDisplayName The user display name of the user who was granted the entitlement. UserId Twitch user ID of the user who was granted the entitlement. UserName The user login of the user who was granted the entitlement."
  },
  "api/AuxLabs.Twitch.EventSub.Models.EventSubHypetrainContribution.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.EventSubHypetrainContribution.html",
    "title": "Class EventSubHypetrainContribution | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubHypetrainContribution Inheritance object HypeTrainContribution EventSubHypetrainContribution Inherited Members HypeTrainContribution.Total HypeTrainContribution.Type HypeTrainContribution.UserId Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class EventSubHypetrainContribution : HypeTrainContribution Properties Name Description UserDisplayName The userâ€™s display name. UserName The userâ€™s login name."
  },
  "api/AuxLabs.Twitch.EventSub.Models.GlobalCooldownSetting.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.GlobalCooldownSetting.html",
    "title": "Struct GlobalCooldownSetting | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct GlobalCooldownSetting Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public readonly struct GlobalCooldownSetting Constructors Name Description GlobalCooldownSetting(int, bool) Properties Name Description IsEnabled Is the setting enabled. Seconds The cooldown in seconds."
  },
  "api/AuxLabs.Twitch.EventSub.Models.GoalEndedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.GoalEndedEventArgs.html",
    "title": "Class GoalEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GoalEndedEventArgs Inheritance object Goal GoalEndedEventArgs Inherited Members Goal.Id Goal.BroadcasterId Goal.BroadcasterDisplayName Goal.BroadcasterName Goal.Type Goal.Description Goal.CurrentAmount Goal.TargetAmount Goal.CreatedAt Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class GoalEndedEventArgs : Goal Properties Name Description EndedAt The UTC timestamp which indicates when the broadcaster ended the goal. IsAchieved Indicates whether the broadcaster achieved their goal."
  },
  "api/AuxLabs.Twitch.EventSub.Models.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.html",
    "title": "Namespace AuxLabs.Twitch.EventSub.Models | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.EventSub.Models Classes AuthorizationEventArgs BanEventArgs BitsProduct BitsTransactionEventArgs BroadcastEndedEventArgs BroadcastStartedEventArgs CampaignEndedEventArgs CampaignProgressEventArgs CampaignStartedEventArgs ChannelFollowEventArgs ChannelUpdateEventArgs CheerEventArgs DonationEventArgs EntitlementGrantEventArgs EntitlementGrantEventData EventSubHypetrainContribution GoalEndedEventArgs HypeTrainEndedEventArgs HypeTrainEventArgs ModeratorEventArgs PollEndedEventArgs PollEventArgs PredictionEndedEventArgs PredictionEventArgs RaidEventArgs RedemptionEventArgs RewardEventArgs Session ShieldModeEnabledEventArgs ShieldModeEndedEventArgs ShieldModeEventArgs ShoutoutCreatedEventArgs ShoutoutReceivedEventArgs SubscriptionEventArgs SubscriptionGiftedEventArgs SubscriptionMessage SubscriptionMessageEventArgs UnbanEventArgs UserUpdatedEventArgs VotingOption WebSocketMetadata Structs GlobalCooldownSetting RewardSetting Enums MessageType"
  },
  "api/AuxLabs.Twitch.EventSub.Models.HypeTrainEndedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.HypeTrainEndedEventArgs.html",
    "title": "Class HypeTrainEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainEndedEventArgs Inheritance object HypeTrainEndedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class HypeTrainEndedEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. CooldownEndsAt The time when the Hype Train cooldown ends so that the next Hype Train can start. EndedAt The time when the Hype Train ended. Id The Hype Train ID. Level The starting level of the Hype Train. StartedAt The time when the Hype Train started. TopContributions The contributors with the most points contributed. Total Total points contributed to the Hype Train."
  },
  "api/AuxLabs.Twitch.EventSub.Models.HypeTrainEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.HypeTrainEventArgs.html",
    "title": "Class HypeTrainEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainEventArgs Inheritance object HypeTrainEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class HypeTrainEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. ExpiresAt The time when the Hype Train expires. Goal The number of points required to reach the next level. Id The Hype Train ID. LatestContribution The most recent contribution. Level The starting level of the Hype Train. Progress The number of points contributed to the Hype Train at the current level. StartedAt The time when the Hype Train started. TopContributions The contributors with the most points contributed. Total Total points contributed to the Hype Train."
  },
  "api/AuxLabs.Twitch.EventSub.Models.MessageType.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.MessageType.html",
    "title": "Enum MessageType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum MessageType Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public enum MessageType Fields Name Description KeepAlive Notification Reconnect Revocation Unknown Welcome"
  },
  "api/AuxLabs.Twitch.EventSub.Models.ModeratorEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ModeratorEventArgs.html",
    "title": "Class ModeratorEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModeratorEventArgs Inheritance object ModeratorEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ModeratorEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. UserDisplayName The display name of the moderator. UserId The user ID of the moderator. UserName The user login of the moderator."
  },
  "api/AuxLabs.Twitch.EventSub.Models.PollEndedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.PollEndedEventArgs.html",
    "title": "Class PollEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollEndedEventArgs Inheritance object PollEventArgs PollEndedEventArgs Inherited Members PollEventArgs.Id PollEventArgs.BroadcasterId PollEventArgs.BroadcasterName PollEventArgs.BroadcasterDisplayName PollEventArgs.Title PollEventArgs.Choices PollEventArgs.BitsVoting PollEventArgs.ChannelPointsVoting PollEventArgs.StartedAt PollEventArgs.EndsAt Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class PollEndedEventArgs : PollEventArgs Properties Name Description Status The status of the poll."
  },
  "api/AuxLabs.Twitch.EventSub.Models.PollEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.PollEventArgs.html",
    "title": "Class PollEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollEventArgs Inheritance object PollEventArgs PollEndedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class PollEventArgs Properties Name Description BitsVoting The Bits voting settings for the poll. BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. ChannelPointsVoting The Channel Points voting settings for the poll. Choices A collection of choices for the poll. EndsAt The time the poll will end. Id ID of the poll. StartedAt The time the poll started. Title Question displayed for the poll."
  },
  "api/AuxLabs.Twitch.EventSub.Models.PredictionEndedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.PredictionEndedEventArgs.html",
    "title": "Class PredictionEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionEndedEventArgs Inheritance object PredictionEventArgs PredictionEndedEventArgs Inherited Members PredictionEventArgs.Id PredictionEventArgs.BroadcasterId PredictionEventArgs.BroadcasterName PredictionEventArgs.BroadcasterDisplayName PredictionEventArgs.Title PredictionEventArgs.Options PredictionEventArgs.StartedAt PredictionEventArgs.LocksAt Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class PredictionEndedEventArgs : PredictionEventArgs Properties Name Description Status The status of the Channel Points Prediction. WinningOptionId ID of the winning outcome."
  },
  "api/AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.html",
    "title": "Class PredictionEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionEventArgs Inheritance object PredictionEventArgs PredictionEndedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class PredictionEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. Id The prediction identifier. LocksAt The time the Channel Points Prediction will automatically lock. Options A collection of outcomes for the Channel Points Prediction. StartedAt The time the Channel Points Prediction started. Title Title for the Channel Points Prediction."
  },
  "api/AuxLabs.Twitch.EventSub.Models.RaidEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.RaidEventArgs.html",
    "title": "Class RaidEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RaidEventArgs Inheritance object RaidEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class RaidEventArgs Properties Name Description FromBroadcasterDisplayName The broadcaster display name that created the raid. FromBroadcasterId The broadcaster ID that created the raid. FromBroadcasterName The broadcaster login that created the raid. ToBroadcasterDisplayName The broadcaster display name that received the raid. ToBroadcasterId The broadcaster ID that received the raid. ToBroadcasterName The broadcaster login that received the raid. Viewers The number of viewers in the raid."
  },
  "api/AuxLabs.Twitch.EventSub.Models.RedemptionEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.RedemptionEventArgs.html",
    "title": "Class RedemptionEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RedemptionEventArgs Inheritance object RedemptionEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class RedemptionEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. Id The redemption identifier. RedeemedAt Timestamp of when the reward was redeemed. Reward Basic information about the reward that was redeemed, at the time it was redeemed. Status Defaults to . UserDisplayName The user display name for the user now following the specified channel. UserId The user ID for the user now following the specified channel. UserInput The user input provided. Empty string if not provided. UserName The user login for the user now following the specified channel."
  },
  "api/AuxLabs.Twitch.EventSub.Models.RewardEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.RewardEventArgs.html",
    "title": "Class RewardEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardEventArgs Inheritance object RewardEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class RewardEventArgs Properties Name Description BackgroundColor Custom background color for the reward. BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. CooldownEndsAt Timestamp of the cooldown expiration. Cost The reward cost. CurrentRedeemsTotal The number of redemptions redeemed during the current live stream. DefaultImage Set of default images of 1x, 2x and 4x sizes for the reward. GlobalCooldown Whether a cooldown is enabled and what the cooldown is in seconds. Id The reward identifier. Image Set of custom images of 1x, 2x and 4x sizes for the reward. IsEnabled Is the reward currently enabled. IsInStock Is the reward currently in stock. IsPaused Is the reward currently paused. IsUserInputRequired Does the viewer need to enter information when redeeming the reward. MaxPerStream Whether a maximum per stream is enabled and what the maximum is. MaxPerUser Whether a maximum per user per stream is enabled and what the maximum is. Prompt The reward description. ShouldSkipRequestQueue Should redemptions be set to fulfilled status immediately when redeemed and skip the request queue instead of the normal unfulfilled status. Title The reward title."
  },
  "api/AuxLabs.Twitch.EventSub.Models.RewardSetting.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.RewardSetting.html",
    "title": "Struct RewardSetting | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct RewardSetting Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public readonly struct RewardSetting Constructors Name Description RewardSetting(int, bool) Properties Name Description IsEnabled Is the setting enabled. Value The setting's value."
  },
  "api/AuxLabs.Twitch.EventSub.Models.Session.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.Session.html",
    "title": "Class Session | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Session Inheritance object Session Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class Session Properties Name Description ConnectedAt The UTC date and time that the connection was created. Id An ID that uniquely identifies this WebSocket connection. KeepaliveTimeoutSeconds The maximum number of seconds that you should expect silence before receiving a keepalive message. ReconnectUrl The URL to reconnect to if you get a Reconnect message. Status The connectionâ€™s status."
  },
  "api/AuxLabs.Twitch.EventSub.Models.ShieldModeEnabledEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ShieldModeEnabledEventArgs.html",
    "title": "Class ShieldModeEnabledEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldModeEnabledEventArgs Inheritance object ShieldModeEventArgs ShieldModeEnabledEventArgs Inherited Members ShieldModeEventArgs.BroadcasterId ShieldModeEventArgs.BroadcasterName ShieldModeEventArgs.BroadcasterDisplayName ShieldModeEventArgs.ModeratorId ShieldModeEventArgs.ModeratorName ShieldModeEventArgs.ModeratorDisplayName Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ShieldModeEnabledEventArgs : ShieldModeEventArgs Properties Name Description EnabledAt The UTC timestamp of when the moderator activated Shield Mode."
  },
  "api/AuxLabs.Twitch.EventSub.Models.ShieldModeEndedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ShieldModeEndedEventArgs.html",
    "title": "Class ShieldModeEndedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldModeEndedEventArgs Inheritance object ShieldModeEventArgs ShieldModeEndedEventArgs Inherited Members ShieldModeEventArgs.BroadcasterId ShieldModeEventArgs.BroadcasterName ShieldModeEventArgs.BroadcasterDisplayName ShieldModeEventArgs.ModeratorId ShieldModeEventArgs.ModeratorName ShieldModeEventArgs.ModeratorDisplayName Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ShieldModeEndedEventArgs : ShieldModeEventArgs Properties Name Description EndedAt The UTC timestamp of when the moderator deactivated Shield Mode."
  },
  "api/AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.html",
    "title": "Class ShieldModeEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldModeEventArgs Inheritance object ShieldModeEventArgs ShieldModeEnabledEventArgs ShieldModeEndedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ShieldModeEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. ModeratorDisplayName The moderatorâ€™s display name. ModeratorId An ID that identifies the moderator that updated the Shield Modeâ€™s status. ModeratorName The moderatorâ€™s login name."
  },
  "api/AuxLabs.Twitch.EventSub.Models.ShoutoutCreatedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ShoutoutCreatedEventArgs.html",
    "title": "Class ShoutoutCreatedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShoutoutCreatedEventArgs Inheritance object ShoutoutReceivedEventArgs ShoutoutCreatedEventArgs Inherited Members ShoutoutReceivedEventArgs.BroadcasterId ShoutoutReceivedEventArgs.BroadcasterName ShoutoutReceivedEventArgs.BroadcasterDisplayName ShoutoutReceivedEventArgs.FromBroadcasterId ShoutoutReceivedEventArgs.FromBroadcasterName ShoutoutReceivedEventArgs.FromBroadcasterDisplayName ShoutoutReceivedEventArgs.ViewerCount ShoutoutReceivedEventArgs.StartedAt Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ShoutoutCreatedEventArgs : ShoutoutReceivedEventArgs Properties Name Description CooldownEndsAt The UTC timestamp of when the broadcaster may send a Shoutout to a different broadcaster. ModeratorDisplayName The moderatorâ€™s display name. ModeratorId An ID that identifies the moderator that sent the Shoutout. ModeratorName The moderatorâ€™s login name. TargetCooldownEndsAt The UTC timestamp of when the broadcaster may send another Shoutout to BroadcasterId"
  },
  "api/AuxLabs.Twitch.EventSub.Models.ShoutoutReceivedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.ShoutoutReceivedEventArgs.html",
    "title": "Class ShoutoutReceivedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShoutoutReceivedEventArgs Inheritance object ShoutoutReceivedEventArgs ShoutoutCreatedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class ShoutoutReceivedEventArgs Properties Name Description BroadcasterDisplayName The broadcaster display name. BroadcasterId An ID that identifies the broadcaster that received the Shoutout. BroadcasterName The broadcaster login. FromBroadcasterDisplayName The broadcaster display name. FromBroadcasterId An ID that identifies the broadcaster that sent the Shoutout. FromBroadcasterName The broadcaster login. StartedAt The UTC timestamp of when the moderator sent the Shoutout. ViewerCount The number of users that were watching the from-broadcasterâ€™s stream at the time of the Shoutout."
  },
  "api/AuxLabs.Twitch.EventSub.Models.SubscriptionEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.SubscriptionEventArgs.html",
    "title": "Class SubscriptionEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionEventArgs Inheritance object SubscriptionEventArgs SubscriptionGiftedEventArgs SubscriptionMessageEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class SubscriptionEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. IsGift Whether the subscription is a gift. Tier The tier of the subscription. UserDisplayName The user display name for the user who subscribed to the specified channel. UserId The user ID for the user who subscribed to the specified channel. UserName The user login for the user who subscribed to the specified channel."
  },
  "api/AuxLabs.Twitch.EventSub.Models.SubscriptionGiftedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.SubscriptionGiftedEventArgs.html",
    "title": "Class SubscriptionGiftedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftedEventArgs Inheritance object SubscriptionEventArgs SubscriptionGiftedEventArgs Inherited Members SubscriptionEventArgs.UserId SubscriptionEventArgs.UserName SubscriptionEventArgs.UserDisplayName SubscriptionEventArgs.BroadcasterId SubscriptionEventArgs.BroadcasterName SubscriptionEventArgs.BroadcasterDisplayName SubscriptionEventArgs.Tier SubscriptionEventArgs.IsGift Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class SubscriptionGiftedEventArgs : SubscriptionEventArgs Properties Name Description CumulativeTotal The number of subscriptions gifted by this user in the channel. IsAnonymous Whether the subscription gift was anonymous."
  },
  "api/AuxLabs.Twitch.EventSub.Models.SubscriptionMessage.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.SubscriptionMessage.html",
    "title": "Class SubscriptionMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionMessage Inheritance object SubscriptionMessage Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class SubscriptionMessage Properties Name Description Emotes A collection that includes the emote ID and start and end positions for where the emote appears in the text. Text The text of the resubscription chat message."
  },
  "api/AuxLabs.Twitch.EventSub.Models.SubscriptionMessageEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.SubscriptionMessageEventArgs.html",
    "title": "Class SubscriptionMessageEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionMessageEventArgs Inheritance object SubscriptionEventArgs SubscriptionMessageEventArgs Inherited Members SubscriptionEventArgs.UserId SubscriptionEventArgs.UserName SubscriptionEventArgs.UserDisplayName SubscriptionEventArgs.BroadcasterId SubscriptionEventArgs.BroadcasterName SubscriptionEventArgs.BroadcasterDisplayName SubscriptionEventArgs.Tier SubscriptionEventArgs.IsGift Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class SubscriptionMessageEventArgs : SubscriptionEventArgs Properties Name Description CumulativeMonths The total number of months the user has been subscribed to the channel. DurationMonths The month duration of the subscription. Message An object that contains the resubscription message and emote information needed to recreate the message. StreakMonths The number of consecutive months the userâ€™s current subscription has been active."
  },
  "api/AuxLabs.Twitch.EventSub.Models.UnbanEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.UnbanEventArgs.html",
    "title": "Class UnbanEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UnbanEventArgs Inheritance object UnbanEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class UnbanEventArgs Properties Name Description BroadcasterDisplayName The requested broadcaster display name. BroadcasterId The requested broadcaster ID. BroadcasterName The requested broadcaster login. ModeratorDisplayName The user name of the issuer of the unban. ModeratorId The user ID of the issuer of the unban. ModeratorName The user login of the issuer of the unban. UserDisplayName The user display name for the user who was unbanned on the specified channel. UserId The user id for the user who was unbanned on the specified channel. UserName The user login for the user who was unbanned on the specified channel."
  },
  "api/AuxLabs.Twitch.EventSub.Models.UserUpdatedEventArgs.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.UserUpdatedEventArgs.html",
    "title": "Class UserUpdatedEventArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserUpdatedEventArgs Inheritance object UserUpdatedEventArgs Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class UserUpdatedEventArgs Properties Name Description Description The userâ€™s description. IsEmailVerified Determines whether Twitch has verified the userâ€™s email address. UserDisplayName The userâ€™s user display name. UserEmail The userâ€™s email address. UserId The userâ€™s user id. UserName The userâ€™s user login."
  },
  "api/AuxLabs.Twitch.EventSub.Models.VotingOption.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.VotingOption.html",
    "title": "Class VotingOption | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class VotingOption Inheritance object VotingOption Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class VotingOption Properties Name Description AmountPerVote Number of specified currency required to vote once. IsEnabled Indicates if this option is enabled."
  },
  "api/AuxLabs.Twitch.EventSub.Models.WebSocketMetadata.html": {
    "href": "api/AuxLabs.Twitch.EventSub.Models.WebSocketMetadata.html",
    "title": "Class WebSocketMetadata | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WebSocketMetadata Inheritance object WebSocketMetadata Namespace: AuxLabs.Twitch.EventSub.Models Assembly: AuxLabs.Twitch.EventSub.Api.dll Syntax public class WebSocketMetadata Properties Name Description Id An ID that uniquely identifies the message. SubscriptionType The type of event sent in the message. SubscriptionVersion The version number of the subscription typeâ€™s definition. This is the same value specified in the subscription request. Timestamp The UTC date and time that the message was sent. Type The type of message. TypeRaw The type of message, in a raw string format."
  },
  "api/AuxLabs.Twitch.EventSub.TwitchEventSubClient.html": {
    "href": "api/AuxLabs.Twitch.EventSub.TwitchEventSubClient.html",
    "title": "Class TwitchEventSubClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchEventSubClient Inheritance object TwitchEventSubClient Namespace: AuxLabs.Twitch.EventSub Assembly: AuxLabs.Twitch.EventSub.dll Syntax public class TwitchEventSubClient : IDisposable Constructors Name Description TwitchEventSubClient(TwitchEventSubConfig) TwitchEventSubClient(string, TwitchEventSubConfig) Properties Name Description EventSub Identity Rest Session Methods Name Description DeleteSubscriptionAsync(string) Dispose() Dispose(bool) GetSubscriptionsAsync(string, EventSubStatus?, EventSubType?) SubscribeAsync(AuthorizationGrantedSubscription) SubscribeAsync(AuthorizationRevokedSubscription) SubscribeAsync(BanSubscription) SubscribeAsync(BitsTransactionSubscription) SubscribeAsync(BroadcastEndedSubscription) SubscribeAsync(BroadcastStartedSubscription) SubscribeAsync(CampaignProgressSubscription) SubscribeAsync(CampaignStartSubscription) SubscribeAsync(CampaignStopSubscription) SubscribeAsync(ChannelUpdateSubscription) SubscribeAsync(CheerSubscription) SubscribeAsync(DonationSubscription) SubscribeAsync(EntitlementGrantSubscription) SubscribeAsync(FollowSubscription) SubscribeAsync(GoalEndSubscription) SubscribeAsync(GoalProgressSubscription) SubscribeAsync(GoalStartSubscription) SubscribeAsync(HypetrainEndSubscription) SubscribeAsync(HypetrainProgressSubscription) SubscribeAsync(HypetrainStartSubscription) SubscribeAsync(ModeratorAddSubscription) SubscribeAsync(ModeratorRemoveSubscription) SubscribeAsync(PollEndSubscription) SubscribeAsync(PollProgressSubscription) SubscribeAsync(PollStartSubscription) SubscribeAsync(PredictionEndSubscription) SubscribeAsync(PredictionLockSubscription) SubscribeAsync(PredictionProgressSubscription) SubscribeAsync(PredictionStartSubscription) SubscribeAsync(RaidSubscription) SubscribeAsync(RedemptionAddSubscription) SubscribeAsync(RedemptionUpdateSubscription) SubscribeAsync(RewardAddSubscription) SubscribeAsync(RewardRemoveSubscription) SubscribeAsync(RewardUpdateSubscription) SubscribeAsync(ShieldModeEndSubscription) SubscribeAsync(ShieldModeStartSubscription) SubscribeAsync(ShoutoutCreateSubscription) SubscribeAsync(ShoutoutReceiveSubscription) SubscribeAsync(SubscribeSubscription) SubscribeAsync(SubscriptionEndSubscription) SubscribeAsync(SubscriptionGiftSubscription) SubscribeAsync(SubscriptionMessageSubscription) SubscribeAsync(UnbanSubscription) SubscribeAsync(UserUpdateSubscription) ValidateAsync(string) Events Name Description BroadcastEnded BroadcastStarted Connected Triggered when the socket connection is established Disconnected Triggered when the socket connection is closed NotificationReceived Triggered when a notification payload is received. Reconnect Triggered when the server tells the client to reconnect Revocation SessionCreated UserBanned UserUpdated"
  },
  "api/AuxLabs.Twitch.EventSub.TwitchEventSubConfig.html": {
    "href": "api/AuxLabs.Twitch.EventSub.TwitchEventSubConfig.html",
    "title": "Class TwitchEventSubConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchEventSubConfig Inheritance object TwitchEventSubApiConfig TwitchEventSubConfig Inherited Members TwitchEventSubApiConfig.ThrowOnUnknownEvent Namespace: AuxLabs.Twitch.EventSub Assembly: AuxLabs.Twitch.EventSub.dll Syntax public class TwitchEventSubConfig : TwitchEventSubApiConfig Properties Name Description RestConfig Configuration for the internal rest client"
  },
  "api/AuxLabs.Twitch.EventSubStatus.html": {
    "href": "api/AuxLabs.Twitch.EventSubStatus.html",
    "title": "Enum EventSubStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EventSubStatus Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum EventSubStatus Fields Name Description AuthorizationRevoked The authorization was revoked for one or more users specified in the Condition object. CallbackVerificationFailed The specified callback URL failed verification. CallbackVerificationPending The subscription is pending verification of the specified callback URL. Enabled The subscription is enabled. FailuresExceeded The notification delivery failure rate was too high. ModeratorRemoved The moderator that authorized the subscription is no longer one of the broadcaster's moderators. Unknown UserRemoved One of the users specified in the Condition object was removed. VersionRemoved The subscribed to subscription type and version is no longer supported. WebSocketDisconnected The client closed the connection. WebSocketFailedHeartbeat The client failed to respond to a ping message. WebSocketInboundTraffic The client sent a non-pong message. WebSocketInternalError The Twitch WebSocket server experienced an unexpected error. WebSocketNetworkError The Twitch WebSocket server experienced a network error writing the message to the client. WebSocketTimeout The Twitch WebSocket server timed out writing the message to the client. WebSocketUnused The client failed to subscribe to events within the required time."
  },
  "api/AuxLabs.Twitch.EventSubType.html": {
    "href": "api/AuxLabs.Twitch.EventSubType.html",
    "title": "Enum EventSubType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum EventSubType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum EventSubType Fields Name Description ChannelBan A viewer is banned from the specified channel. ChannelCheer A user cheers on the specified channel. ChannelFollow A specified channel receives a follow. ChannelModeratorAdd Moderator privileges were added to a user on a specified channel. ChannelModeratorRemove Moderator privileges were removed from a user on a specified channel. ChannelPointsRedemptionAdd A viewer has redeemed a custom channel points reward on the specified channel. ChannelPointsRedemptionUpdate A redemption of a channel points custom reward has been updated for the specified channel. ChannelPointsRewardAdd A custom channel points reward has been created for the specified channel. ChannelPointsRewardRemove A custom channel points reward has been removed from the specified channel. ChannelPointsRewardUpdate A custom channel points reward has been updated for the specified channel. ChannelPollEnd A poll ended on a specified channel. ChannelPollProgress Users respond to a poll on a specified channel. ChannelPollStart A poll started on a specified channel. ChannelPredictionEnd A Prediction ended on a specified channel. ChannelPredictionLock A Prediction was locked on a specified channel. ChannelPredictionProgress Users participated in a Prediction on a specified channel. ChannelPredictionStart A Prediction started on a specified channel. ChannelRaid A broadcaster raids another broadcasterâ€™s channel. ChannelSubscribe A notification when a specified channel receives a subscriber. This does not include resubscribes. ChannelSubscriptionEnd A notification when a subscription to the specified channel ends. ChannelSubscriptionGift A notification when a viewer gives a gift subscription to one or more users in the specified channel. ChannelSubscriptionMessage A notification when a user sends a resubscription chat message in a specific channel. ChannelUnban A viewer is unbanned from the specified channel. ChannelUpdate A broadcaster updates their channel properties e.g., category, title, mature flag, broadcast, or language. CharityCampaignProgress Sends an event notification when progress is made towards the campaignâ€™s goal or when the broadcaster changes the fundraising goal. CharityCampaignStart Sends an event notification when the broadcaster starts a charity campaign. CharityCampaignStop Sends an event notification when the broadcaster stops a charity campaign. CharityDonation Sends an event notification when a user donates to the broadcasterâ€™s charity campaign. DropEntitlementGrant An entitlement for a Drop is granted to a user. ExtensionBitsTransactionCreate A Bits transaction occurred for a specified Twitch Extension. GoalEnd Get notified when a broadcaster ends a goal. GoalProgress Get notified when progress (either positive or negative) is made towards a broadcasterâ€™s goal. GoalStart Get notified when a broadcaster Starts a goal. HypeTrainEnd A Hype Train ends on the specified channel. HypeTrainProgress A Hype Train makes progress on the specified channel. HypeTrainStart A Hype Train Starts on the specified channel. None ShieldModeEnd Sends a notification when the broadcaster deactivates Shield Mode. ShieldModeStart Sends a notification when the broadcaster activates Shield Mode. ShoutoutCreate Sends a notification when the specified broadcaster sends a Shoutout. ShoutoutReceived Sends a notification when the specified broadcaster receives a Shoutout. StreamOffline The specified broadcaster stops a stream. StreamOnline The specified broadcaster starts a stream. UserAuthorizationGrant A userâ€™s authorization has been granted to your client id. UserAuthorizationRevoke A userâ€™s authorization has been revoked for your client id. UserUpdate A user has updated their account."
  },
  "api/AuxLabs.Twitch.ExtensionType.html": {
    "href": "api/AuxLabs.Twitch.ExtensionType.html",
    "title": "Enum ExtensionType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ExtensionType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum ExtensionType Fields Name Description Component Mobile Overlay Panel Unknown"
  },
  "api/AuxLabs.Twitch.FulfillmentStatus.html": {
    "href": "api/AuxLabs.Twitch.FulfillmentStatus.html",
    "title": "Enum FulfillmentStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum FulfillmentStatus Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum FulfillmentStatus Fields Name Description Claimed Fulfilled"
  },
  "api/AuxLabs.Twitch.GoalType.html": {
    "href": "api/AuxLabs.Twitch.GoalType.html",
    "title": "Enum GoalType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum GoalType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum GoalType Fields Name Description Follower The goal is to increase followers. NewSubscription The goal is to increase subscriptions. NewSubscriptionCount The goal is to increase subscriptions. None Subscription The goal is to increase subscriptions. SusbcriptionCount The goal is to increase subscriptions."
  },
  "api/AuxLabs.Twitch.html": {
    "href": "api/AuxLabs.Twitch.html",
    "title": "Namespace AuxLabs.Twitch | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch Classes AsyncEnumerableExtensions An extension class for squashing . CDN CultureInfoConverter DefaultRateLimiter EmotePositionConverter EnumHelper HttpException InterfaceConverter<TImpl, TInter> InterfaceConverterFactory<TImpl, TInter> MissingScopeException NoEqualityComparer QueryMap RateLimitedException Require RFCDateTimeConverter SimpleReward TwitchConstants TwitchException TwitchRestException UnexpectedTagsException WebSocketClosedException Structs Cacheable<TEntity, TId> DateRange EmotePosition RateLimitInfo Title TwitchImage Interfaces IChannel IChatUser IEntity<TId> IPartialUser IRateLimiter ISimpleUser IUpdatable IUserFollow IUserInfo IUserRelation Enums AnalyticType AnnouncementColor AutomodAction AutomodFilter BitsPeriod BlockContext BroadcasterType BroadcastType ChatColor CheermoteType CostType DropStatus EmoteFormat EmoteScale EmoteTheme EmoteType EventSubStatus EventSubType ExtensionType FulfillmentStatus GoalType HypeTrainContributionType PollStatus PredictionColor PredictionStatus ProductType RedemptionSort RedemptionStatus SubscriptionType TokenType TrackSourceType TransportMethod UserType VideoPeriod VideoSort VideoType"
  },
  "api/AuxLabs.Twitch.HttpException.html": {
    "href": "api/AuxLabs.Twitch.HttpException.html",
    "title": "Class HttpException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HttpException Inheritance object HttpException Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class HttpException : Exception Constructors Name Description HttpException(HttpStatusCode, string) Properties Name Description HttpCode Reason"
  },
  "api/AuxLabs.Twitch.HypeTrainContributionType.html": {
    "href": "api/AuxLabs.Twitch.HypeTrainContributionType.html",
    "title": "Enum HypeTrainContributionType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum HypeTrainContributionType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum HypeTrainContributionType Fields Name Description Bits Other Subscriptions"
  },
  "api/AuxLabs.Twitch.IChannel.html": {
    "href": "api/AuxLabs.Twitch.IChannel.html",
    "title": "Interface IChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IChannel Inherited Members IEntity<string>.Id Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IChannel : IEntity<string> Properties Name Description Name"
  },
  "api/AuxLabs.Twitch.IChatUser.html": {
    "href": "api/AuxLabs.Twitch.IChatUser.html",
    "title": "Interface IChatUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IChatUser Inherited Members ISimpleUser.DisplayName IPartialUser.Name IEntity<string>.Id Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IChatUser : ISimpleUser, IPartialUser, IEntity<string> Properties Name Description Color"
  },
  "api/AuxLabs.Twitch.IEntity-1.html": {
    "href": "api/AuxLabs.Twitch.IEntity-1.html",
    "title": "Interface IEntity<TId> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IEntity<TId> Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IEntity<TId> Type Parameters Name Description TId Properties Name Description Id"
  },
  "api/AuxLabs.Twitch.InterfaceConverter-2.html": {
    "href": "api/AuxLabs.Twitch.InterfaceConverter-2.html",
    "title": "Class InterfaceConverter<TImpl, TInter> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class InterfaceConverter<TImpl, TInter> Inheritance object InterfaceConverter<TImpl, TInter> Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class InterfaceConverter<TImpl, TInter> : JsonConverter<TInter> where TImpl : class, TInter Type Parameters Name Description TImpl TInter Methods Name Description Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Write(Utf8JsonWriter, TInter, JsonSerializerOptions)"
  },
  "api/AuxLabs.Twitch.InterfaceConverterFactory-2.html": {
    "href": "api/AuxLabs.Twitch.InterfaceConverterFactory-2.html",
    "title": "Class InterfaceConverterFactory<TImpl, TInter> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class InterfaceConverterFactory<TImpl, TInter> Inheritance object InterfaceConverterFactory<TImpl, TInter> Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class InterfaceConverterFactory<TImpl, TInter> : JsonConverterFactory where TImpl : class, TInter Type Parameters Name Description TImpl TInter Constructors Name Description InterfaceConverterFactory() Properties Name Description ImplementationType InterfaceType Methods Name Description CanConvert(Type) CreateConverter(Type, JsonSerializerOptions)"
  },
  "api/AuxLabs.Twitch.IPartialUser.html": {
    "href": "api/AuxLabs.Twitch.IPartialUser.html",
    "title": "Interface IPartialUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IPartialUser Inherited Members IEntity<string>.Id Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IPartialUser : IEntity<string> Properties Name Description Name"
  },
  "api/AuxLabs.Twitch.IRateLimiter.html": {
    "href": "api/AuxLabs.Twitch.IRateLimiter.html",
    "title": "Interface IRateLimiter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IRateLimiter Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IRateLimiter Methods Name Description EnterLockAsync(string, CancellationToken) UpdateLimit(string, RateLimitInfo, bool)"
  },
  "api/AuxLabs.Twitch.ISimpleUser.html": {
    "href": "api/AuxLabs.Twitch.ISimpleUser.html",
    "title": "Interface ISimpleUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ISimpleUser Inherited Members IPartialUser.Name IEntity<string>.Id Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface ISimpleUser : IPartialUser, IEntity<string> Properties Name Description DisplayName"
  },
  "api/AuxLabs.Twitch.IUpdatable.html": {
    "href": "api/AuxLabs.Twitch.IUpdatable.html",
    "title": "Interface IUpdatable | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUpdatable Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IUpdatable Methods Name Description UpdateAsync()"
  },
  "api/AuxLabs.Twitch.IUserFollow.html": {
    "href": "api/AuxLabs.Twitch.IUserFollow.html",
    "title": "Interface IUserFollow | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUserFollow Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IUserFollow Properties Name Description BroadcasterDisplayName The display name of the user thatâ€™s being followed. BroadcasterId The ID of the user thatâ€™s being followed by UserId. BroadcasterName The login name of the user thatâ€™s being followed. FollowedAt The UTC date and time of when UserId began following BroadcasterId. UserDisplayName The followerâ€™s display name. UserId The ID of the user that's following BroadcasterId. UserName The followerâ€™s login name."
  },
  "api/AuxLabs.Twitch.IUserInfo.html": {
    "href": "api/AuxLabs.Twitch.IUserInfo.html",
    "title": "Interface IUserInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUserInfo Inherited Members ISimpleUser.DisplayName IPartialUser.Name IEntity<string>.Id Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IUserInfo : ISimpleUser, IPartialUser, IEntity<string>"
  },
  "api/AuxLabs.Twitch.IUserRelation.html": {
    "href": "api/AuxLabs.Twitch.IUserRelation.html",
    "title": "Interface IUserRelation | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IUserRelation Inherited Members ISimpleUser.DisplayName IPartialUser.Name IEntity<string>.Id Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public interface IUserRelation : ISimpleUser, IPartialUser, IEntity<string> Properties Name Description RelatedDisplayName RelatedId RelatedName"
  },
  "api/AuxLabs.Twitch.MissingScopeException.html": {
    "href": "api/AuxLabs.Twitch.MissingScopeException.html",
    "title": "Class MissingScopeException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MissingScopeException Inheritance object TwitchException MissingScopeException Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class MissingScopeException : TwitchException Constructors Name Description MissingScopeException(params string[]) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.NoEqualityComparer.html": {
    "href": "api/AuxLabs.Twitch.NoEqualityComparer.html",
    "title": "Class NoEqualityComparer | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class NoEqualityComparer Inheritance object NoEqualityComparer Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class NoEqualityComparer : IEqualityComparer<string> Fields Name Description Instance Methods Name Description Equals(string, string) GetHashCode(string)"
  },
  "api/AuxLabs.Twitch.PollStatus.html": {
    "href": "api/AuxLabs.Twitch.PollStatus.html",
    "title": "Enum PollStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum PollStatus Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum PollStatus Fields Name Description Active The poll is running. Archived The poll has been archived and is no longer visible on the channel. Completed The poll ended on schedule. Invalid Something went wrong while determining the state. Moderated The poll was deleted. Terminated The poll was terminated before its scheduled end."
  },
  "api/AuxLabs.Twitch.PredictionColor.html": {
    "href": "api/AuxLabs.Twitch.PredictionColor.html",
    "title": "Enum PredictionColor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum PredictionColor Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum PredictionColor Fields Name Description Blue Pink"
  },
  "api/AuxLabs.Twitch.PredictionStatus.html": {
    "href": "api/AuxLabs.Twitch.PredictionStatus.html",
    "title": "Enum PredictionStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum PredictionStatus Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum PredictionStatus Fields Name Description Active The Prediction is running and viewers can make predictions. Cancelled The broadcaster canceled the Prediction and refunded the Channel Points to the participants. Locked The broadcaster locked the Prediction, which means viewers can no longer make predictions. Resolved The winning outcome was determined and the Channel Points were distributed to the viewers who predicted the correct outcome."
  },
  "api/AuxLabs.Twitch.ProductType.html": {
    "href": "api/AuxLabs.Twitch.ProductType.html",
    "title": "Enum ProductType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ProductType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum ProductType Fields Name Description BitsInExtension None"
  },
  "api/AuxLabs.Twitch.PubSub.html": {
    "href": "api/AuxLabs.Twitch.PubSub.html",
    "title": "Namespace AuxLabs.Twitch.PubSub | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.PubSub Classes PubSubPayload PubSubPayload<TPayload> PubSubRequest PubSubResponse TwitchPubSubApiClient TwitchPubSubApiConfig Structs PubSubTopic Enums PubSubPayloadType PubSubTopicType"
  },
  "api/AuxLabs.Twitch.PubSub.PubSubPayload-1.html": {
    "href": "api/AuxLabs.Twitch.PubSub.PubSubPayload-1.html",
    "title": "Class PubSubPayload<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubPayload<TPayload> Inheritance object PubSubPayload<TPayload> PubSubPayload Implements IPayload Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public class PubSubPayload<TPayload> : IPayload Type Parameters Name Description TPayload Properties Name Description Data Error IsHelloEvent Nonce Type"
  },
  "api/AuxLabs.Twitch.PubSub.PubSubPayload.html": {
    "href": "api/AuxLabs.Twitch.PubSub.PubSubPayload.html",
    "title": "Class PubSubPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubPayload Inheritance object PubSubPayload<PubSubResponse> PubSubPayload Implements IPayload Inherited Members PubSubPayload<PubSubResponse>.IsHelloEvent PubSubPayload<PubSubResponse>.Type PubSubPayload<PubSubResponse>.Nonce PubSubPayload<PubSubResponse>.Error PubSubPayload<PubSubResponse>.Data Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public class PubSubPayload : PubSubPayload<PubSubResponse>, IPayload"
  },
  "api/AuxLabs.Twitch.PubSub.PubSubPayloadType.html": {
    "href": "api/AuxLabs.Twitch.PubSub.PubSubPayloadType.html",
    "title": "Enum PubSubPayloadType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum PubSubPayloadType Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public enum PubSubPayloadType Fields Name Description Listen Message Response Unknown Unlisten"
  },
  "api/AuxLabs.Twitch.PubSub.PubSubRequest.html": {
    "href": "api/AuxLabs.Twitch.PubSub.PubSubRequest.html",
    "title": "Class PubSubRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubRequest Inheritance object PubSubRequest Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public class PubSubRequest Properties Name Description Token Topics"
  },
  "api/AuxLabs.Twitch.PubSub.PubSubResponse.html": {
    "href": "api/AuxLabs.Twitch.PubSub.PubSubResponse.html",
    "title": "Class PubSubResponse | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PubSubResponse Inheritance object PubSubResponse Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public class PubSubResponse Properties Name Description MessageData Topic"
  },
  "api/AuxLabs.Twitch.PubSub.PubSubTopic.html": {
    "href": "api/AuxLabs.Twitch.PubSub.PubSubTopic.html",
    "title": "Struct PubSubTopic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct PubSubTopic Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public readonly struct PubSubTopic Constructors Name Description PubSubTopic(string) Properties Name Description Ids Type Methods Name Description ToString()"
  },
  "api/AuxLabs.Twitch.PubSub.PubSubTopicType.html": {
    "href": "api/AuxLabs.Twitch.PubSub.PubSubTopicType.html",
    "title": "Enum PubSubTopicType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum PubSubTopicType Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public enum PubSubTopicType Fields Name Description AutoModQueue AutoMod flags a message as potentially inappropriate, and when a moderator takes action on a message. BitsBadgeUnlocks Message sent when a user earns a new Bits badge in a particular channel, and chooses to share the notification with chat. BitsV1 Anyone cheers in a specified channel. BitsV2 Anyone cheers in a specified channel. ChannelPointRedemptions A custom reward is redeemed in a channel. ChannelSubscriptions Anyone subscribes (first month), resubscribes (subsequent months), or gifts a subscription to a channel. LowTrustUserStatus The broadcaster or a moderator updates the low trust status of a user, or a new message has been sent in chat by a potential ban evader or a bans shared user. ModerationNotifications A userâ€™s message held by AutoMod has been approved or denied. ModeratorActions Examples of moderator actions are bans, unbans, timeouts, deleting messages, changing chat mode (followers-only, subs-only), changing AutoMod levels, and adding a mod. Unknown Whispers Anyone whispers the specified user."
  },
  "api/AuxLabs.Twitch.PubSub.TwitchPubSubApiClient.html": {
    "href": "api/AuxLabs.Twitch.PubSub.TwitchPubSubApiClient.html",
    "title": "Class TwitchPubSubApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchPubSubApiClient Inheritance object TwitchPubSubApiClient Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public class TwitchPubSubApiClient : IDisposable Constructors Name Description TwitchPubSubApiClient(TwitchPubSubApiConfig) TwitchPubSubApiClient(string, TwitchPubSubApiConfig) Fields Name Description ThrowOnUnknownEvent Properties Name Description State Methods Name Description Dispose() Dispose(bool) Run() RunAsync() Events Name Description Connected The client has successfully made a connection to the server. Disconnected The client was forcibly disconnected from the server. UnknownEventReceived An unhandled irc command was received."
  },
  "api/AuxLabs.Twitch.PubSub.TwitchPubSubApiConfig.html": {
    "href": "api/AuxLabs.Twitch.PubSub.TwitchPubSubApiConfig.html",
    "title": "Class TwitchPubSubApiConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchPubSubApiConfig Inheritance object TwitchPubSubApiConfig Namespace: AuxLabs.Twitch.PubSub Assembly: AuxLabs.Twitch.PubSub.Api.dll Syntax public class TwitchPubSubApiConfig Properties Name Description ThrowOnUnknownEvent Should an exception be raised if an unhandled event is received from twitch."
  },
  "api/AuxLabs.Twitch.QueryMap.html": {
    "href": "api/AuxLabs.Twitch.QueryMap.html",
    "title": "Class QueryMap | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class QueryMap Inheritance object QueryMap BaseTags AutomodSettingsArgs DeleteBanArgs DeleteBlockArgs DeleteBlockedTermsArgs DeleteEventSubscriptionArgs DeleteMessageArgs DeleteRaidArgs DeleteVideosArgs GetActiveExtensionsArgs GetAnalyticsArgs GetBadgesArgs GetBannedUsersArgs GetBitsLeaderboardArgs GetBlockedTermsArgs GetBlocksArgs GetBroadcastKeyArgs GetBroadcastMarkersArgs GetBroadcastsArgs GetChannelEditorsArgs GetChannelsArgs GetChannelTeamsArgs GetCharityCampaignArgs GetCharityDonationsArgs GetChatSettingsArgs GetChattersArgs GetCheermotesArgs GetClipsArgs GetCurrentTrackArgs GetDropStatusArgs GetEmotesArgs GetEmoteSetsArgs GetEventSubscriptionsArgs GetExtensionTransactionsArgs GetFollowedBroadcastsArgs GetFollowsArgs GetGamesArgs GetGoalsArgs GetHypeTrainsArgs GetPlaylistsArgs GetPlaylistTracksArgs GetPollsArgs GetPredictionsArgs GetRedemptionsArgs GetRewardArgs GetRolesArgs GetScheduleArgs GetSubscriberArgs GetSubscriptionsArgs GetTeamArgs GetTopGamesArgs GetUserColorArgs GetUsersArgs GetVideosArgs ManageRewardArgs ManageRolesArgs ManageSegmentArgs ModifyRedemptionsArgs PatchChannelArgs PatchChatSettingsArgs PatchScheduleArgs PostAnnouncementArgs PostAppAccessTokenArgs PostAutomodMessageArgs PostBanArgs PostBlockedTermArgs PostClipArgs PostCommercialBody PostEnforcementStatusArgs PostRaidArgs PostRevokeTokenArgs PostRewardArgs PostSegmentArgs PostShoutoutArgs PostWhisperArgs PutBlockArgs PutShieldModeArgs PutUserArgs PutUserChatColorArgs SearchCategoriesArgs SearchChannelsArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public abstract class QueryMap : IDictionary<string, string> Methods Name Description CreateQueryMap()"
  },
  "api/AuxLabs.Twitch.RateLimitedException.html": {
    "href": "api/AuxLabs.Twitch.RateLimitedException.html",
    "title": "Class RateLimitedException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RateLimitedException Inheritance object RateLimitedException Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class RateLimitedException : TimeoutException Constructors Name Description RateLimitedException()"
  },
  "api/AuxLabs.Twitch.RateLimitInfo.html": {
    "href": "api/AuxLabs.Twitch.RateLimitInfo.html",
    "title": "Struct RateLimitInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct RateLimitInfo Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public readonly struct RateLimitInfo Properties Name Description IsGlobal Lag Limit Path Remaining Reset"
  },
  "api/AuxLabs.Twitch.RedemptionSort.html": {
    "href": "api/AuxLabs.Twitch.RedemptionSort.html",
    "title": "Enum RedemptionSort | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum RedemptionSort Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum RedemptionSort Fields Name Description Newest Oldest"
  },
  "api/AuxLabs.Twitch.RedemptionStatus.html": {
    "href": "api/AuxLabs.Twitch.RedemptionStatus.html",
    "title": "Enum RedemptionStatus | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum RedemptionStatus Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum RedemptionStatus Fields Name Description Cancelled Fulfilled Unfulfilled"
  },
  "api/AuxLabs.Twitch.Require.html": {
    "href": "api/AuxLabs.Twitch.Require.html",
    "title": "Class Require | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Require Inheritance object Require Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public static class Require Methods Name Description After(DateTime, DateTime, string, string) After(DateTime?, DateTime, string, string) AtLeast(int, int, string, string) AtLeast(int?, int, string, string) AtLeast(uint?, int, string, string) AtLeast(uint, int, string, string) AtMost(int, int, string, string) AtMost(int?, int, string, string) AtMost(uint?, int, string, string) AtMost(uint, int, string, string) Before(DateTime, DateTime, string, string) Before(DateTime?, DateTime, string, string) Equal(object, object, string, string) Exclusive(object[], string[], bool, string) GreaterThan(int, int, string, string) GreaterThan(int?, int, string, string) GreaterThan(uint?, int, string, string) GreaterThan(uint, int, string, string) HasAtLeast<T>(IEnumerable<T>, int, string, string) HasAtMost<T>(IEnumerable<T>, int, string, string) HasGreaterThan<T>(IEnumerable<T>, int, string, string) HasLessThan<T>(IEnumerable<T>, int, string, string) LengthAtLeast(string, int, string, string) LengthAtMost(string, int, string, string) LengthGreaterThan(string, int, string, string) LengthLessThan(string, int, string, string) LessThan(int, int, string, string) LessThan(int?, int, string, string) LessThan(uint?, int, string, string) LessThan(uint, int, string, string) NotEmpty(string, string, string) NotEmptyOrWhitespace(string, string, string) NotNull(object, string, string) NotNullOrEmpty(string, string, string) NotNullOrWhitespace(string, string, string) NotZero(int, string, string) NotZero(int?, string, string) NotZero(uint?, string, string) NotZero(uint, string, string) OnOrAfter(DateTime, DateTime, string, string) OnOrAfter(DateTime?, DateTime, string, string) OnOrBefore(DateTime, DateTime, string, string) OnOrBefore(DateTime?, DateTime, string, string) Scopes(IEnumerable<string>, string[])"
  },
  "api/AuxLabs.Twitch.Rest.Api.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.html",
    "title": "Namespace AuxLabs.Twitch.Rest.Api | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Rest.Api Classes RestError TwitchIdentityApiClient A client that implements Twitch's identity api for manging access tokens. TwitchJsonSerializerOptions TwitchRestApiClient TwitchRestApiConfig Interfaces ITwitchApi ITwitchIdentityApi"
  },
  "api/AuxLabs.Twitch.Rest.Api.ITwitchApi.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.ITwitchApi.html",
    "title": "Interface ITwitchApi | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ITwitchApi Namespace: AuxLabs.Twitch.Rest.Api Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public interface ITwitchApi : IDisposable Properties Name Description Authorization ClientId Methods Name Description DeleteBanAsync(DeleteBanArgs, CancellationToken?) Removes the ban or timeout that was placed on the specified user. DeleteBlockAsync(DeleteBlockArgs, CancellationToken?) Removes the user from the broadcasterâ€™s list of blocked users. DeleteBlockedTermAsync(DeleteBlockedTermsArgs, CancellationToken?) Removes the word or phrase from the broadcasterâ€™s list of blocked terms. DeleteChatMessagesAsync(DeleteMessageArgs, CancellationToken?) Removes a single chat message or all chat messages from the broadcasterâ€™s chat room. DeleteEventSubscriptionAsync(DeleteEventSubscriptionArgs, CancellationToken?) Deletes an EventSub subscription. DeleteModeratorAsync(ManageModeratorArgs, CancellationToken?) Removes a moderator from the broadcasterâ€™s chat room. DeleteRaidAsync(DeleteRaidArgs, CancellationToken?) Cancel a pending raid. DeleteRewardAsync(ManageRewardArgs, CancellationToken?) Deletes a custom reward that the broadcaster created. Only the app that created a reward is able to delete it. DeleteSegmentAsync(ManageSegmentArgs, CancellationToken?) Updates a scheduled broadcast segment. DeleteVideoAsync(DeleteVideosArgs, CancellationToken?) Deletes one or more videos. You may delete past broadcasts, highlights, or uploads. DeleteVipAsync(ManageVipArgs, CancellationToken?) Removes the specified user as a VIP in the broadcasterâ€™s channel. GetActiveExtensionsAsync(GetActiveExtensionsArgs, CancellationToken?) Gets a list of all extensions (both active and inactive) that the broadcaster has installed. GetAutomodSettingsAsync(AutomodSettingsArgs, CancellationToken?) Gets the broadcasterâ€™s AutoMod settings. GetBadgesAsync(GetBadgesArgs, CancellationToken?) Gets the broadcasterâ€™s list of custom chat badges. GetBadgesAsync(CancellationToken?) Gets Twitchâ€™s list of chat badges, which users may use in any channelâ€™s chat room. GetBannedUsersAsync(GetBannedUsersArgs, CancellationToken?) Gets all users that the broadcaster banned or put in a timeout. GetBitsLeaderboardAsync(GetBitsLeaderboardArgs, CancellationToken?) Gets the Bits leaderboard for the authenticated broadcaster. GetBlockedTermsAsync(GetBlockedTermsArgs, CancellationToken?) Gets the broadcasterâ€™s list of non-private, blocked words or phrases. GetBlocksAsync(GetBlocksArgs, CancellationToken?) Gets the list of users that the broadcaster has blocked. GetBroadcastKeyAsync(GetBroadcastKeyArgs, CancellationToken?) Gets the channelâ€™s broadcast key. GetBroadcastMarkersAsync(GetBroadcastMarkersArgs, CancellationToken?) Gets a list of markers from the userâ€™s most recent stream or from the specified VOD/video. GetBroadcastsAsync(GetBroadcastsArgs, CancellationToken?) Gets a list of all broadcasts. GetCategoriesAsync(SearchCategoriesArgs, CancellationToken?) Gets the games or categories that match the specified query. GetChannelEditorsAsync(GetChannelEditorsArgs, CancellationToken?) Gets the broadcasterâ€™s list editors. GetChannelsAsync(GetChannelsArgs, CancellationToken?) Gets information about one or more channels. GetChannelsAsync(SearchChannelsArgs, CancellationToken?) Gets the channels that match the specified query and have streamed content within the past 6 months. GetCharityCampaignAsync(GetCharityCampaignArgs, CancellationToken?) Gets information about the charity campaign that a broadcaster is running. GetCharityDonationsAsync(GetCharityDonationsArgs, CancellationToken?) Gets the list of donations that users have made to the broadcasterâ€™s active charity campaign. GetChatSettingsAsync(GetChatSettingsArgs, CancellationToken?) Gets the broadcasterâ€™s chat settings. GetChattersAsync(GetChattersArgs, CancellationToken?) Gets the list of users that are connected to the broadcasterâ€™s chat session. GetCheermotesAsync(GetCheermotesArgs, CancellationToken?) Gets a collection of Cheermotes that can be used to cheer bits in any bits-enabled channel. GetClipsAsync(GetClipsArgs, CancellationToken?) Gets one or more video clips that were captured from streams. GetCurrentTrackAsync(GetCurrentTrackArgs, CancellationToken?) Gets the Soundtrack track that the broadcaster is playing. GetDropsStatusAsync(GetDropStatusArgs, CancellationToken?) Gets an organizationâ€™s list of entitlements that have been granted to a game, a user, or both. GetEmotesAsync(GetEmotesArgs, CancellationToken?) Gets the broadcasterâ€™s list of custom emotes. GetEmotesAsync(CancellationToken?) Gets the list of global emotes. GetEmoteSetsAsync(GetEmoteSetsArgs, CancellationToken?) Gets emotes for one or more specified emote sets. GetEventSubscriptionsAsync(GetEventSubscriptionsArgs, CancellationToken?) Gets a collection of EventSub subscriptions that the client in the access token created. GetExtensionAnalyticsAsync(GetExtensionAnalyticsArgs, CancellationToken?) Gets an analytics report for one or more extensions. The response contains the URLs used to download the reports (CSV files). GetExtensionTransactionsAsync(GetExtensionTransactionsArgs, CancellationToken?) Gets an extensionâ€™s list of transactions. GetFollowedBroadcastsAsync(GetFollowedBroadcastsArgs, CancellationToken?) Gets the list of broadcasters that the user follows and that are streaming live. GetFollowedChannelsAsync(GetFollowedChannelsArgs, CancellationToken?) Gets a list of broadcasters that the specified user follows. GetFollowersAsync(GetFollowersArgs, CancellationToken?) Gets a list of users that follow the specified broadcaster. GetGameAnalyticsAsync(GetGameAnalyticsArgs, CancellationToken?) Gets an analytics report for one or more games. The response contains the URLs used to download the reports (CSV files). GetGamesAsync(GetGamesArgs, CancellationToken?) Gets information about specified categories or games. GetGoalsAsync(GetGoalsArgs, CancellationToken?) Gets the broadcasterâ€™s list of active goals. GetHypetrainEventsAsync(GetHypeTrainsArgs, CancellationToken?) Gets information about the broadcasterâ€™s current or most recent Hype Train event. GetModeratorsAsync(GetModeratorsArgs, CancellationToken?) Gets all users allowed to moderate the broadcasterâ€™s chat room. GetPlaylistsAsync(GetPlaylistsArgs, CancellationToken?) Gets a list of Soundtrack playlists. GetPlaylistTracksAsync(GetPlaylistTracksArgs, CancellationToken?) Gets the Soundtrack playlistâ€™s tracks. GetPollAsync(GetPredictionsArgs, CancellationToken?) Gets a list of polls that the broadcaster created. GetPredictionAsync(GetPredictionsArgs, CancellationToken?) Gets a list of Channel Points Predictions that the broadcaster created. GetRewardRedemptionAsync(GetRedemptionsArgs, CancellationToken?) Gets a list of redemptions for the specified custom reward. Only the app that created a reward is able to see it's redemptions. GetRewardsAsync(GetRewardArgs, CancellationToken?) Gets a list of custom rewards that the specified broadcaster created. GetScheduleAsync(GetScheduleArgs, CancellationToken?) Gets the broadcasterâ€™s streaming schedule. GetShieldModeAsync(GetShieldModeArgs, CancellationToken?) Activates or deactivates the broadcasterâ€™s Shield Mode. GetSubscriberAsync(GetSubscriberArgs, CancellationToken?) Checks whether the user subscribes to the broadcasterâ€™s channel. GetSubscriptionsAsync(GetSubscriptionsArgs, CancellationToken?) Updates the specified userâ€™s information. GetTeamAsync(GetTeamArgs, CancellationToken?) Gets information about the specified Twitch team. GetTeamsAsync(GetChannelTeamsArgs, CancellationToken?) Gets information about one or more users. GetTopGamesAsync(GetTopGamesArgs, CancellationToken?) Gets information about all broadcasts on Twitch. GetUserChatColorsAsync(GetUserColorArgs, CancellationToken?) Gets the color used for the userâ€™s name in chat. GetUserExtensionsAsync(CancellationToken?) Gets a list of all extensions (both active and inactive) that the broadcaster has installed. GetUsersAsync(GetUsersArgs, CancellationToken?) Gets information about one or more users. GetVideosAsync(GetVideosArgs, CancellationToken?) Gets information about one or more published videos. GetVipsAsync(GetVipsArgs, CancellationToken?) Gets a list of the broadcasterâ€™s VIPs. PatchChannelAsync(PatchChannelArgs, PatchChannelBody, CancellationToken?) Updates a channelâ€™s properties. PatchChatSettingsAsync(PatchChatSettingsArgs, PatchChatSettingsBody, CancellationToken?) Updates the broadcasterâ€™s chat settings. PatchDropsStatusAsync(PatchDropsStatusArgs, CancellationToken?) Updates the Drop entitlementâ€™s fulfillment status. PatchPollAsync(PatchPollBody, CancellationToken?) Ends an active poll. PatchPredictionaAsync(PostPredictionBody, CancellationToken?) Locks, resolves, or cancels a Channel Points Prediction. PatchRewardAsync(ManageRewardArgs, PostRewardBody, CancellationToken?) Updates a custom reward. The app used to create the reward is the only app that may update the reward. PatchRewardRedemptionAsync(RedemptionStatus, ModifyRedemptionsArgs, CancellationToken?) Updates a redemptionâ€™s status. The app used to create the reward is the only app that may update the redemption. PatchScheduleAsync(PatchScheduleArgs, CancellationToken?) Updates the broadcasterâ€™s schedule settings, such as scheduling a vacation. PatchSegmentAsync(ManageSegmentArgs, PatchSegmentBody, CancellationToken?) Updates a scheduled broadcast segment. PostAutomodMessageAsync(PostAutomodMessageArgs, CancellationToken?) Allow or deny the message that AutoMod flagged for review. PostBanAsync(PostBanArgs, PostBanBody, CancellationToken?) Bans a user from participating in the specified broadcasterâ€™s chat room or puts them in a timeout. PostBlockedTermAsync(PostBlockedTermArgs, PostBlockedTermBody, CancellationToken?) Gets the broadcasterâ€™s list of non-private, blocked words or phrases. PostBroadcastMarkerAsync(PostBroadcastMarkerBody, CancellationToken?) Adds a marker to a live stream. PostChatAnnouncementAsync(PostAnnouncementArgs, PostAnnouncementBody, CancellationToken?) Sends an announcement to the broadcasterâ€™s chat room. PostClipAsync(PostClipArgs, CancellationToken?) Creates a clip from the broadcasterâ€™s stream. PostCommercialAsync(PostCommercialBody, CancellationToken?) Starts a commercial on the specified channel. PostEnforcementStatusAsync(PostEnforcementStatusArgs, PostEnforcementStatusBody, CancellationToken?) Checks whether AutoMod would flag the specified message for review. PostEventSubscriptionAsync<TCondition>(PostEventSubscriptionBody<TCondition>, CancellationToken?) Creates an EventSub subscription. PostModeratorAsync(ManageModeratorArgs, CancellationToken?) Adds a moderator to the broadcasterâ€™s chat room. PostPollAsync(PutPollBody, CancellationToken?) Creates a poll that viewers in the broadcasterâ€™s channel can vote on. PostPredictionAsync(PostPredictionBody, CancellationToken?) Creates a Channel Points Prediction. PostRaidAsync(PostRaidArgs, CancellationToken?) Raid another channel by sending the broadcasterâ€™s viewers to the targeted channel. PostRewardsAsync(PostRewardArgs, PostRewardBody, CancellationToken?) Creates a custom reward in the broadcasterâ€™s channel. PostSegmentAsync(PostSegmentArgs, PostSegmentBody, CancellationToken?) Adds a single or recurring broadcast to the broadcasterâ€™s streaming schedule. PostShoutoutAsync(PostShoutoutArgs, CancellationToken?) Sends a shoutout to the specified broadcaster. PostVipAsync(ManageVipArgs, CancellationToken?) Adds the specified user as a VIP in the broadcasterâ€™s channel. PostWhisperAsync(PostWhisperArgs, PostWhisperBody, CancellationToken?) Sends a whisper message to the specified user. PutAutomodSettingsAsync(AutomodSettingsArgs, PutAutomodSettingsBody, CancellationToken?) Updates the broadcasterâ€™s AutoMod settings. PutBlockAsync(PutBlockArgs, CancellationToken?) Blocks the specified user from interacting with or having contact with the broadcaster. PutExtensionsAsync(ExtensionMap, CancellationToken?) Updates an installed extensionâ€™s information. PutShieldModeAsync(PutShieldModeArgs, PutShieldModeBody, CancellationToken?) Activates or deactivates the broadcasterâ€™s Shield Mode. PutUserAsync(PutUserArgs, CancellationToken?) Updates the specified userâ€™s information. PutUserChatColorAsync(PutUserChatColorArgs, CancellationToken?) Updates the color used for the user's name in chat."
  },
  "api/AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.html",
    "title": "Interface ITwitchIdentityApi | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ITwitchIdentityApi Namespace: AuxLabs.Twitch.Rest.Api Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public interface ITwitchIdentityApi : IDisposable Methods Name Description PostAccessTokenAsync(PostAppAccessTokenArgs, CancellationToken?) PostAccessTokenAsync(PostUserAccessTokenArgs, CancellationToken?) PostRefreshTokenAsync(PostRefreshTokenArgs, CancellationToken?) RevokeTokenAsync(PostRevokeTokenArgs, CancellationToken?) ValidateAsync(string, CancellationToken?)"
  },
  "api/AuxLabs.Twitch.Rest.Api.RestError.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.RestError.html",
    "title": "Class RestError | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestError Inheritance object RestError Namespace: AuxLabs.Twitch.Rest.Api Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RestError Properties Name Description Code Error Message"
  },
  "api/AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.html",
    "title": "Class TwitchIdentityApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchIdentityApiClient A client that implements Twitch's identity api for manging access tokens. Inheritance object TwitchIdentityApiClient Implements ITwitchIdentityApi IDisposable Namespace: AuxLabs.Twitch.Rest.Api Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class TwitchIdentityApiClient : ITwitchIdentityApi, IDisposable Constructors Name Description TwitchIdentityApiClient() TwitchIdentityApiClient(string, string, string) TwitchIdentityApiClient(string, string) TwitchIdentityApiClient(string) Properties Name Description ClientId Your appâ€™s registered client ID. ClientSecret Your appâ€™s registered client secret. Identity Information about the currently authorized user. RefreshToken Methods Name Description Dispose() Dispose(bool) PostAccessTokenAsync(PostAppAccessTokenArgs, CancellationToken?) Get an access token that identifies you as the specified application PostAccessTokenAsync(PostUserAccessTokenArgs, CancellationToken?) Get an access token that identifies you as the specified user PostRefreshTokenAsync(PostRefreshTokenArgs, CancellationToken?) Refresh an expired user access token RevokeTokenAsync(PostRevokeTokenArgs, CancellationToken?) Revoke an access token that is no longer needed ValidateAsync(CancellationToken?) Get an app identity using the provided app credentials. ValidateAsync(string, CancellationToken?) Get information relating to a user access token ValidateAsync(string, string, CancellationToken?) Get information relating to a user access token"
  },
  "api/AuxLabs.Twitch.Rest.Api.TwitchJsonSerializerOptions.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.TwitchJsonSerializerOptions.html",
    "title": "Class TwitchJsonSerializerOptions | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchJsonSerializerOptions Inheritance object TwitchJsonSerializerOptions Namespace: AuxLabs.Twitch.Rest.Api Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public static class TwitchJsonSerializerOptions Properties Name Description Default"
  },
  "api/AuxLabs.Twitch.Rest.Api.TwitchRestApiClient.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.TwitchRestApiClient.html",
    "title": "Class TwitchRestApiClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestApiClient Inheritance object TwitchRestApiClient Implements ITwitchApi IDisposable Namespace: AuxLabs.Twitch.Rest.Api Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class TwitchRestApiClient : ITwitchApi, IDisposable Constructors Name Description TwitchRestApiClient(TwitchRestApiConfig) TwitchRestApiClient(string, TwitchRestApiConfig) Properties Name Description Authorization ClientId Identity Methods Name Description DeleteBanAsync(DeleteBanArgs, CancellationToken?) Removes the ban or timeout that was placed on the specified user. DeleteBlockAsync(DeleteBlockArgs, CancellationToken?) Removes the user from the broadcasterâ€™s list of blocked users. DeleteBlockedTermAsync(DeleteBlockedTermsArgs, CancellationToken?) Removes the word or phrase from the broadcasterâ€™s list of blocked terms. DeleteChatMessagesAsync(DeleteMessageArgs, CancellationToken?) Removes a single chat message or all chat messages from the broadcasterâ€™s chat room. DeleteEventSubscriptionAsync(DeleteEventSubscriptionArgs, CancellationToken?) Deletes an EventSub subscription. DeleteModeratorAsync(ManageModeratorArgs, CancellationToken?) Removes a moderator from the broadcasterâ€™s chat room. DeleteRaidAsync(DeleteRaidArgs, CancellationToken?) Cancel a pending raid. DeleteRewardAsync(ManageRewardArgs, CancellationToken?) Deletes a custom reward that the broadcaster created. Only the app that created a reward is able to delete it. DeleteSegmentAsync(ManageSegmentArgs, CancellationToken?) Updates a scheduled broadcast segment. DeleteVideoAsync(DeleteVideosArgs, CancellationToken?) Deletes one or more videos. You may delete past broadcasts, highlights, or uploads. DeleteVipAsync(ManageVipArgs, CancellationToken?) Removes the specified user as a VIP in the broadcasterâ€™s channel. Dispose() Dispose(bool) GetActiveExtensionsAsync(GetActiveExtensionsArgs, CancellationToken?) Gets a list of all extensions (both active and inactive) that the broadcaster has installed. GetAutomodSettingsAsync(AutomodSettingsArgs, CancellationToken?) Gets the broadcasterâ€™s AutoMod settings. GetBadgesAsync(GetBadgesArgs, CancellationToken?) Gets the broadcasterâ€™s list of custom chat badges. GetBadgesAsync(CancellationToken?) Gets Twitchâ€™s list of chat badges, which users may use in any channelâ€™s chat room. GetBannedUsersAsync(GetBannedUsersArgs, CancellationToken?) Gets all users that the broadcaster banned or put in a timeout. GetBitsLeaderboardAsync(GetBitsLeaderboardArgs, CancellationToken?) Gets the Bits leaderboard for the authenticated broadcaster. GetBlockedTermsAsync(GetBlockedTermsArgs, CancellationToken?) Gets the broadcasterâ€™s list of non-private, blocked words or phrases. GetBlocksAsync(GetBlocksArgs, CancellationToken?) Gets the list of users that the broadcaster has blocked. GetBroadcastKeyAsync(GetBroadcastKeyArgs, CancellationToken?) Gets the channelâ€™s broadcast key. GetBroadcastMarkersAsync(GetBroadcastMarkersArgs, CancellationToken?) Gets a list of markers from the userâ€™s most recent stream or from the specified VOD/video. GetBroadcastsAsync(GetBroadcastsArgs, CancellationToken?) Gets a list of all broadcasts. GetCategoriesAsync(SearchCategoriesArgs, CancellationToken?) Gets the games or categories that match the specified query. GetChannelEditorsAsync(GetChannelEditorsArgs, CancellationToken?) Gets the broadcasterâ€™s list editors. GetChannelsAsync(GetChannelsArgs, CancellationToken?) Gets information about one or more channels. GetChannelsAsync(SearchChannelsArgs, CancellationToken?) Gets the channels that match the specified query and have streamed content within the past 6 months. GetCharityCampaignAsync(GetCharityCampaignArgs, CancellationToken?) Gets information about the charity campaign that a broadcaster is running. GetCharityDonationsAsync(GetCharityDonationsArgs, CancellationToken?) Gets the list of donations that users have made to the broadcasterâ€™s active charity campaign. GetChatSettingsAsync(GetChatSettingsArgs, CancellationToken?) Gets the broadcasterâ€™s chat settings. GetChattersAsync(GetChattersArgs, CancellationToken?) Gets the list of users that are connected to the broadcasterâ€™s chat session. GetCheermotesAsync(GetCheermotesArgs, CancellationToken?) Gets a collection of Cheermotes that can be used to cheer bits in any bits-enabled channel. GetClipsAsync(GetClipsArgs, CancellationToken?) Gets one or more video clips that were captured from streams. GetCurrentTrackAsync(GetCurrentTrackArgs, CancellationToken?) Gets the Soundtrack track that the broadcaster is playing. GetDropsStatusAsync(GetDropStatusArgs, CancellationToken?) Gets an organizationâ€™s list of entitlements that have been granted to a game, a user, or both. GetEmotesAsync(GetEmotesArgs, CancellationToken?) Gets the broadcasterâ€™s list of custom emotes. GetEmotesAsync(CancellationToken?) Gets the list of global emotes. GetEmoteSetsAsync(GetEmoteSetsArgs, CancellationToken?) Gets emotes for one or more specified emote sets. GetEventSubscriptionsAsync(GetEventSubscriptionsArgs, CancellationToken?) Gets a collection of EventSub subscriptions that the client in the access token created. GetExtensionAnalyticsAsync(GetExtensionAnalyticsArgs, CancellationToken?) Gets an analytics report for one or more extensions. The response contains the URLs used to download the reports (CSV files). GetExtensionTransactionsAsync(GetExtensionTransactionsArgs, CancellationToken?) Gets an extensionâ€™s list of transactions. GetFollowedBroadcastsAsync(GetFollowedBroadcastsArgs, CancellationToken?) Gets the list of broadcasters that the user follows and that are streaming live. GetFollowedChannelsAsync(GetFollowedChannelsArgs, CancellationToken?) Gets a list of broadcasters that the specified user follows. GetFollowersAsync(GetFollowersArgs, CancellationToken?) Gets a list of users that follow the specified broadcaster. GetGameAnalyticsAsync(GetGameAnalyticsArgs, CancellationToken?) Gets an analytics report for one or more games. The response contains the URLs used to download the reports (CSV files). GetGamesAsync(GetGamesArgs, CancellationToken?) Gets information about specified categories or games. GetGoalsAsync(GetGoalsArgs, CancellationToken?) Gets the broadcasterâ€™s list of active goals. GetHypetrainEventsAsync(GetHypeTrainsArgs, CancellationToken?) Gets information about the broadcasterâ€™s current or most recent Hype Train event. GetModeratorsAsync(GetModeratorsArgs, CancellationToken?) Gets all users allowed to moderate the broadcasterâ€™s chat room. GetPlaylistsAsync(GetPlaylistsArgs, CancellationToken?) Gets a list of Soundtrack playlists. GetPlaylistTracksAsync(GetPlaylistTracksArgs, CancellationToken?) Gets the Soundtrack playlistâ€™s tracks. GetPollAsync(GetPredictionsArgs, CancellationToken?) Gets a list of polls that the broadcaster created. GetPredictionAsync(GetPredictionsArgs, CancellationToken?) Gets a list of Channel Points Predictions that the broadcaster created. GetRewardRedemptionAsync(GetRedemptionsArgs, CancellationToken?) Gets a list of redemptions for the specified custom reward. Only the app that created a reward is able to see it's redemptions. GetRewardsAsync(GetRewardArgs, CancellationToken?) Gets a list of custom rewards that the specified broadcaster created. GetScheduleAsync(GetScheduleArgs, CancellationToken?) Gets the broadcasterâ€™s streaming schedule. GetShieldModeAsync(GetShieldModeArgs, CancellationToken?) Activates or deactivates the broadcasterâ€™s Shield Mode. GetSubscriberAsync(GetSubscriberArgs, CancellationToken?) Checks whether the user subscribes to the broadcasterâ€™s channel. GetSubscriptionsAsync(GetSubscriptionsArgs, CancellationToken?) Updates the specified userâ€™s information. GetTeamAsync(GetTeamArgs, CancellationToken?) Gets information about the specified Twitch team. GetTeamsAsync(GetChannelTeamsArgs, CancellationToken?) Gets information about one or more users. GetTopGamesAsync(GetTopGamesArgs, CancellationToken?) Gets information about all broadcasts on Twitch. GetUserChatColorsAsync(GetUserColorArgs, CancellationToken?) Gets the color used for the userâ€™s name in chat. GetUserExtensionsAsync(CancellationToken?) Gets a list of all extensions (both active and inactive) that the broadcaster has installed. GetUsersAsync(GetUsersArgs, CancellationToken?) Gets information about one or more users. GetVideosAsync(GetVideosArgs, CancellationToken?) Gets information about one or more published videos. GetVipsAsync(GetVipsArgs, CancellationToken?) Gets a list of the broadcasterâ€™s VIPs. PatchChannelAsync(PatchChannelArgs, PatchChannelBody, CancellationToken?) Updates a channelâ€™s properties. PatchChatSettingsAsync(PatchChatSettingsArgs, PatchChatSettingsBody, CancellationToken?) Updates the broadcasterâ€™s chat settings. PatchDropsStatusAsync(PatchDropsStatusArgs, CancellationToken?) Updates the Drop entitlementâ€™s fulfillment status. PatchPollAsync(PatchPollBody, CancellationToken?) Ends an active poll. PatchPredictionaAsync(PostPredictionBody, CancellationToken?) Locks, resolves, or cancels a Channel Points Prediction. PatchRewardAsync(ManageRewardArgs, PostRewardBody, CancellationToken?) Updates a custom reward. The app used to create the reward is the only app that may update the reward. PatchRewardRedemptionAsync(RedemptionStatus, ModifyRedemptionsArgs, CancellationToken?) Updates a redemptionâ€™s status. The app used to create the reward is the only app that may update the redemption. PatchScheduleAsync(PatchScheduleArgs, CancellationToken?) Updates the broadcasterâ€™s schedule settings, such as scheduling a vacation. PatchSegmentAsync(ManageSegmentArgs, PatchSegmentBody, CancellationToken?) Updates a scheduled broadcast segment. PostAutomodMessageAsync(PostAutomodMessageArgs, CancellationToken?) Allow or deny the message that AutoMod flagged for review. PostBanAsync(PostBanArgs, PostBanBody, CancellationToken?) Bans a user from participating in the specified broadcasterâ€™s chat room or puts them in a timeout. PostBlockedTermAsync(PostBlockedTermArgs, PostBlockedTermBody, CancellationToken?) Gets the broadcasterâ€™s list of non-private, blocked words or phrases. PostBroadcastMarkerAsync(PostBroadcastMarkerBody, CancellationToken?) Adds a marker to a live stream. PostChatAnnouncementAsync(PostAnnouncementArgs, PostAnnouncementBody, CancellationToken?) Sends an announcement to the broadcasterâ€™s chat room. PostClipAsync(PostClipArgs, CancellationToken?) Creates a clip from the broadcasterâ€™s stream. PostCommercialAsync(PostCommercialBody, CancellationToken?) Starts a commercial on the specified channel. PostEnforcementStatusAsync(PostEnforcementStatusArgs, PostEnforcementStatusBody, CancellationToken?) Checks whether AutoMod would flag the specified message for review. PostEventSubscriptionAsync<TCondition>(PostEventSubscriptionBody<TCondition>, CancellationToken?) Creates an EventSub subscription. PostModeratorAsync(ManageModeratorArgs, CancellationToken?) Adds a moderator to the broadcasterâ€™s chat room. PostPollAsync(PutPollBody, CancellationToken?) Creates a poll that viewers in the broadcasterâ€™s channel can vote on. PostPredictionAsync(PostPredictionBody, CancellationToken?) Creates a Channel Points Prediction. PostRaidAsync(PostRaidArgs, CancellationToken?) Raid another channel by sending the broadcasterâ€™s viewers to the targeted channel. PostRewardsAsync(PostRewardArgs, PostRewardBody, CancellationToken?) Creates a custom reward in the broadcasterâ€™s channel. PostSegmentAsync(PostSegmentArgs, PostSegmentBody, CancellationToken?) Adds a single or recurring broadcast to the broadcasterâ€™s streaming schedule. PostShoutoutAsync(PostShoutoutArgs, CancellationToken?) Sends a shoutout to the specified broadcaster. PostVipAsync(ManageVipArgs, CancellationToken?) Adds the specified user as a VIP in the broadcasterâ€™s channel. PostWhisperAsync(PostWhisperArgs, PostWhisperBody, CancellationToken?) Sends a whisper message to the specified user. PutAutomodSettingsAsync(AutomodSettingsArgs, PutAutomodSettingsBody, CancellationToken?) Updates the broadcasterâ€™s AutoMod settings. PutBlockAsync(PutBlockArgs, CancellationToken?) Blocks the specified user from interacting with or having contact with the broadcaster. PutExtensionsAsync(ExtensionMap, CancellationToken?) Updates an installed extensionâ€™s information. PutShieldModeAsync(PutShieldModeArgs, PutShieldModeBody, CancellationToken?) Activates or deactivates the broadcasterâ€™s Shield Mode. PutUserAsync(PutUserArgs, CancellationToken?) Updates the specified userâ€™s information. PutUserChatColorAsync(PutUserChatColorArgs, CancellationToken?) Updates the color used for the user's name in chat. RefreshTokenAsync(CancellationToken?) Refresh the token for the authorized user. RevokeTokenAsync(CancellationToken?) Revoke the currently authorized user's token. ValidateAsync(CancellationToken?) ValidateAsync(string, string, CancellationToken?)"
  },
  "api/AuxLabs.Twitch.Rest.Api.TwitchRestApiConfig.html": {
    "href": "api/AuxLabs.Twitch.Rest.Api.TwitchRestApiConfig.html",
    "title": "Class TwitchRestApiConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestApiConfig Inheritance object TwitchRestApiConfig TwitchRestConfig Namespace: AuxLabs.Twitch.Rest.Api Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class TwitchRestApiConfig Properties Name Description ClientId ClientSecret"
  },
  "api/AuxLabs.Twitch.Rest.Entities.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.html",
    "title": "Namespace AuxLabs.Twitch.Rest.Entities | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Rest.Entities Classes RestBroadcast RestChannel RestChatUser RestEditor RestEmote RestEntity<T> RestEventSubscription RestExtensionTransaction RestFollowedChannel RestFollower RestGlobalEmote RestPartialUser RestSelfUser RestSimpleChannel RestSimpleUser RestUser"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestBroadcast.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestBroadcast.html",
    "title": "Class RestBroadcast | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestBroadcast Inheritance object RestEntity<string> RestBroadcast Implements IUpdatable Inherited Members RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestBroadcast : RestEntity<string>, IUpdatable Properties Name Description Culture GameId GameName IsMature RawThumbnailUrl StartedAt Tags Title Type User ViewerCount Methods Name Description GetChannelAsync() Get the channel associated with this broadcast. GetThumbnailUrl(int, int) GetUserAsync() Get the user associated with this broadcast. ToString() UpdateAsync()"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestChannel.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestChannel.html",
    "title": "Class RestChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestChannel Inheritance object RestEntity<string> RestSimpleChannel RestChannel Implements IChannel Inherited Members RestSimpleChannel.DisplayName RestSimpleChannel.Name RestSimpleChannel.GetUserAsync() RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestChannel : RestSimpleChannel, IChannel Properties Name Description Culture The broadcasterâ€™s preferred language. The value is an ISO 639-1 two-letter language code. Delay The value of the broadcasterâ€™s stream delay setting. GameId An ID that uniquely identifies the game that the broadcaster is playing or last played. GameName The name of the game that the broadcaster is playing or last played. Tags The tags applied to the channel. Title The title of the stream that the broadcaster is currently streaming or last streamed. Methods Name Description UpdateAsync()"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestChatUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestChatUser.html",
    "title": "Class RestChatUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestChatUser Inheritance object RestEntity<string> RestPartialUser RestSimpleUser RestChatUser Implements IChatUser Inherited Members RestSimpleUser.DisplayName RestSimpleUser.ToString() RestPartialUser.Name RestPartialUser.GetChannelAsync() RestPartialUser.GetBroadcastAsync() RestPartialUser.GetFollowerAsync(string) RestPartialUser.GetFollowersAsync(int) RestPartialUser.GetFollowedChannelsAsync(int) RestPartialUser.GetFollowedChannelAsync(string) RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestChatUser : RestSimpleUser, IChatUser Constructors Name Description RestChatUser(TwitchRestClient, string) Properties Name Description Color"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestEditor.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestEditor.html",
    "title": "Class RestEditor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestEditor Inheritance object RestEntity<string> RestPartialUser RestEditor Inherited Members RestPartialUser.Name RestPartialUser.ToString() RestPartialUser.GetChannelAsync() RestPartialUser.GetBroadcastAsync() RestPartialUser.GetFollowerAsync(string) RestPartialUser.GetFollowersAsync(int) RestPartialUser.GetFollowedChannelsAsync(int) RestPartialUser.GetFollowedChannelAsync(string) RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestEditor : RestPartialUser Constructors Name Description RestEditor(TwitchRestClient, string) Properties Name Description CreatedAt"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestEmote.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestEmote.html",
    "title": "Class RestEmote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestEmote Inheritance object RestEntity<string> RestGlobalEmote RestEmote Inherited Members RestGlobalEmote.Name RestGlobalEmote.Images RestGlobalEmote.Formats RestGlobalEmote.Scales RestGlobalEmote.Themes RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestEmote : RestGlobalEmote Constructors Name Description RestEmote(TwitchRestClient, string) Properties Name Description BroadcasterId EmoteSetId Tier Type"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestEntity-1.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestEntity-1.html",
    "title": "Class RestEntity<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestEntity<T> Inheritance object RestEntity<T> RestBroadcast RestEventSubscription RestExtensionTransaction RestGlobalEmote RestPartialUser RestSimpleChannel Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public abstract class RestEntity<T> where T : IEquatable<T> Type Parameters Name Description T Properties Name Description Id An ID that uniquely identifies the entity."
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestEventSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestEventSubscription.html",
    "title": "Class RestEventSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestEventSubscription Inheritance object RestEntity<string> RestEventSubscription Inherited Members RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestEventSubscription : RestEntity<string> Constructors Name Description RestEventSubscription(TwitchRestClient, string) Properties Name Description Condition Cost CreatedAt Status Transport Type Version Methods Name Description DeleteAsync() ToString()"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestExtensionTransaction.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestExtensionTransaction.html",
    "title": "Class RestExtensionTransaction | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestExtensionTransaction Inheritance object RestEntity<string> RestExtensionTransaction Inherited Members RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestExtensionTransaction : RestEntity<string> Properties Name Description Broadcaster The broadcaster that owns the channel where the transaction occurred. ProductData Contains details about the digital product. ProductType The type of transaction. Timestamp The UTC date and time of the transaction. User The user that purchased the digital product."
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestFollowedChannel.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestFollowedChannel.html",
    "title": "Class RestFollowedChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestFollowedChannel Inheritance object RestEntity<string> RestSimpleChannel RestFollowedChannel Implements IChannel Inherited Members RestSimpleChannel.DisplayName RestSimpleChannel.Name RestSimpleChannel.GetUserAsync() RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestFollowedChannel : RestSimpleChannel, IChannel Properties Name Description FollowedAt"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestFollower.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestFollower.html",
    "title": "Class RestFollower | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestFollower Inheritance object RestEntity<string> RestPartialUser RestSimpleUser RestFollower Inherited Members RestSimpleUser.DisplayName RestSimpleUser.ToString() RestPartialUser.Name RestPartialUser.GetChannelAsync() RestPartialUser.GetBroadcastAsync() RestPartialUser.GetFollowerAsync(string) RestPartialUser.GetFollowersAsync(int) RestPartialUser.GetFollowedChannelsAsync(int) RestPartialUser.GetFollowedChannelAsync(string) RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestFollower : RestSimpleUser Properties Name Description FollowedAt"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestGlobalEmote.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestGlobalEmote.html",
    "title": "Class RestGlobalEmote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestGlobalEmote Inheritance object RestEntity<string> RestGlobalEmote RestEmote Inherited Members RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestGlobalEmote : RestEntity<string> Constructors Name Description RestGlobalEmote(TwitchRestClient, string) Properties Name Description Formats Images Name Scales Themes"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestPartialUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestPartialUser.html",
    "title": "Class RestPartialUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestPartialUser Inheritance object RestEntity<string> RestPartialUser RestEditor RestSimpleUser Inherited Members RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestPartialUser : RestEntity<string> Constructors Name Description RestPartialUser(TwitchRestClient, string) Properties Name Description Name Userâ€™s login name Methods Name Description GetBroadcastAsync() Get the broadcast associated with this user. GetChannelAsync() Get the channel associated with this user. GetFollowedChannelAsync(string) GetFollowedChannelsAsync(int) GetFollowerAsync(string) GetFollowersAsync(int) ToString()"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestSelfUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestSelfUser.html",
    "title": "Class RestSelfUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestSelfUser Inheritance object RestEntity<string> RestPartialUser RestSimpleUser RestUser RestSelfUser Inherited Members RestUser.CreatedAt RestUser.Description RestUser.ViewCount RestUser.OfflineImageUrl RestUser.ProfileImageUrl RestUser.BroadcasterType RestUser.Type RestSimpleUser.DisplayName RestSimpleUser.ToString() RestPartialUser.Name RestPartialUser.GetChannelAsync() RestPartialUser.GetBroadcastAsync() RestPartialUser.GetFollowerAsync(string) RestPartialUser.GetFollowersAsync(int) RestPartialUser.GetFollowedChannelsAsync(int) RestPartialUser.GetFollowedChannelAsync(string) RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestSelfUser : RestUser Properties Name Description Email Date when the user was created Methods Name Description ModifyAsync(string) UpdateAsync()"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestSimpleChannel.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestSimpleChannel.html",
    "title": "Class RestSimpleChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestSimpleChannel Inheritance object RestEntity<string> RestSimpleChannel RestChannel RestFollowedChannel Implements IChannel Inherited Members RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestSimpleChannel : RestEntity<string>, IChannel Properties Name Description DisplayName The broadcasterâ€™s display name. Name The broadcasterâ€™s login name. Methods Name Description GetUserAsync() Get the user associated with this channel."
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestSimpleUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestSimpleUser.html",
    "title": "Class RestSimpleUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestSimpleUser Inheritance object RestEntity<string> RestPartialUser RestSimpleUser RestChatUser RestFollower RestUser Inherited Members RestPartialUser.Name RestPartialUser.GetChannelAsync() RestPartialUser.GetBroadcastAsync() RestPartialUser.GetFollowerAsync(string) RestPartialUser.GetFollowersAsync(int) RestPartialUser.GetFollowedChannelsAsync(int) RestPartialUser.GetFollowedChannelAsync(string) RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestSimpleUser : RestPartialUser Constructors Name Description RestSimpleUser(TwitchRestClient, string) Properties Name Description DisplayName Userâ€™s display name Methods Name Description ToString()"
  },
  "api/AuxLabs.Twitch.Rest.Entities.RestUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Entities.RestUser.html",
    "title": "Class RestUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RestUser Inheritance object RestEntity<string> RestPartialUser RestSimpleUser RestUser RestSelfUser Inherited Members RestSimpleUser.DisplayName RestSimpleUser.ToString() RestPartialUser.Name RestPartialUser.GetChannelAsync() RestPartialUser.GetBroadcastAsync() RestPartialUser.GetFollowerAsync(string) RestPartialUser.GetFollowersAsync(int) RestPartialUser.GetFollowedChannelsAsync(int) RestPartialUser.GetFollowedChannelAsync(string) RestEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Entities Assembly: AuxLabs.Twitch.Rest.dll Syntax public class RestUser : RestSimpleUser Properties Name Description BroadcasterType Userâ€™s broadcaster type CreatedAt Userâ€™s verified email address Description Userâ€™s channel description OfflineImageUrl URL of the userâ€™s offline image ProfileImageUrl URL of the userâ€™s profile image Type Userâ€™s type ViewCount Total number of views of the userâ€™s channel Methods Name Description UpdateAsync()"
  },
  "api/AuxLabs.Twitch.Rest.html": {
    "href": "api/AuxLabs.Twitch.Rest.html",
    "title": "Namespace AuxLabs.Twitch.Rest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Rest Classes TwitchRestClient TwitchRestConfig Interfaces IEventCondition"
  },
  "api/AuxLabs.Twitch.Rest.IEventCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.IEventCondition.html",
    "title": "Interface IEventCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IEventCondition Namespace: AuxLabs.Twitch.Rest Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public interface IEventCondition"
  },
  "api/AuxLabs.Twitch.Rest.Models.AcceptedTransport.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.AcceptedTransport.html",
    "title": "Class AcceptedTransport | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AcceptedTransport Inheritance object Transport AcceptedTransport Inherited Members Transport.Method Transport.Callback Transport.Secret Transport.SessionId Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AcceptedTransport : Transport Properties Name Description ConnectedAt The date and time that the WebSocket was connected. Only specified for websockets. DisconnectedAt The date and time that the WebSocket was disconnected. Only specified for websockets."
  },
  "api/AuxLabs.Twitch.Rest.Models.AccessTokenInfo.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.AccessTokenInfo.html",
    "title": "Class AccessTokenInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AccessTokenInfo Inheritance object AccessTokenInfo Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AccessTokenInfo Properties Name Description ClientId ExpiresInSeconds Scopes UserId UserName"
  },
  "api/AuxLabs.Twitch.Rest.Models.Album.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Album.html",
    "title": "Class Album | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Album Inheritance object Album Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Album Properties Name Description Id The albumâ€™s Amazon Standard Identification Number. ImageUrl A URL to the albumâ€™s cover art. Name The albumâ€™s name."
  },
  "api/AuxLabs.Twitch.Rest.Models.Analytic.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Analytic.html",
    "title": "Class Analytic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Analytic Inheritance object Analytic ExtensionAnalytic GameAnalytic Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class Analytic Properties Name Description DateRange The reporting windowâ€™s start and end dates. Type The type of report. Url The URL used to download the report."
  },
  "api/AuxLabs.Twitch.Rest.Models.AppIdentity.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.AppIdentity.html",
    "title": "Class AppIdentity | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AppIdentity Inheritance object AppIdentity UserIdentity Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AppIdentity Properties Name Description AccessToken ExpiresInSeconds TokenType"
  },
  "api/AuxLabs.Twitch.Rest.Models.Artist.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Artist.html",
    "title": "Class Artist | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Artist Inheritance object Artist Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Artist Properties Name Description Id The artistâ€™s Amazon Standard Identification Number. Name The artistâ€™s name. UserId The ID of the Twitch user that created the track."
  },
  "api/AuxLabs.Twitch.Rest.Models.AuthorizationCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.AuthorizationCondition.html",
    "title": "Class AuthorizationCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationCondition Inheritance object AuthorizationCondition Implements IEventCondition Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AuthorizationCondition : IEventCondition Constructors Name Description AuthorizationCondition() AuthorizationCondition(string) Properties Name Description ClientId Your application's client id. Operators Name Description implicit operator string(AuthorizationCondition) implicit operator AuthorizationCondition(string)"
  },
  "api/AuxLabs.Twitch.Rest.Models.AutomodSettings.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.AutomodSettings.html",
    "title": "Class AutomodSettings | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AutomodSettings Inheritance object AutomodSettings Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AutomodSettings Properties Name Description Aggression The Automod level for hostility involving aggression. BroadcasterId The broadcasterâ€™s ID. Bullying The Automod level for hostility involving name calling or insults. Disability The Automod level for discrimination against disability. Misogyny The Automod level for discrimination against women. ModeratorId The moderatorâ€™s ID. OverallLevel The default AutoMod level for the broadcaster. RaceEthnicityOrReligion The Automod level for racial discrimination. SexBasedTerms The Automod level for sexual content. SexualitySexOrGender The AutoMod level for discrimination based on sexuality, sex, or gender. Swearing The Automod level for profanity."
  },
  "api/AuxLabs.Twitch.Rest.Models.Badge.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Badge.html",
    "title": "Class Badge | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Badge Inheritance object Badge Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Badge Properties Name Description ClickAction The action to take when clicking on the badge. ClickUrl The URL to navigate to when clicking on the badge. Description The description of the badge. Id An ID that identifies this version of the badge. The ID can be any value. LargeImageUrl A URL to the large version (72px x 72px) of the badge. MediumImageUrl A URL to the medium version (36px x 36px) of the badge. SmallImageUrl A URL to the small version (18px x 18px) of the badge. Title The title of the badge."
  },
  "api/AuxLabs.Twitch.Rest.Models.BadgeSet.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BadgeSet.html",
    "title": "Class BadgeSet | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BadgeSet Inheritance object BadgeSet Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BadgeSet Properties Name Description SetId An ID that identifies this set of chat badges. Versions A collection of chat badges in this set."
  },
  "api/AuxLabs.Twitch.Rest.Models.Ban.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Ban.html",
    "title": "Class Ban | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Ban Inheritance object Ban Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Ban Properties Name Description BroadcasterId The broadcaster whose chat room the user was banned from chatting in. CreatedAt The UTC date and time that the ban or timeout was placed. EndsAt The UTC date and time that the timeout will end. ModeratorId The moderator that banned or put the user in the timeout. UserId The user that was banned or put in a timeout."
  },
  "api/AuxLabs.Twitch.Rest.Models.BannedUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BannedUser.html",
    "title": "Class BannedUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BannedUser Inheritance object BannedUser Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BannedUser Properties Name Description CreatedAt The UTC date and time of when the user was banned. ExpiresAt The UTC date and time of when the timeout expires ModeratorDisplayName The moderatorâ€™s display name. ModeratorId The ID of the moderator that banned the user or put them in a timeout. ModeratorName The moderatorâ€™s login name. Reason The reason the user was banned or put in a timeout if the moderator provided one. UserDisplayName The banned userâ€™s display name. UserId The ID of the banned user. UserName The banned userâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.BitsTier.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BitsTier.html",
    "title": "Class BitsTier | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsTier Inheritance object BitsTier Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BitsTier Properties Name Description CanCheer Determines whether users can cheer at this tier level. Color The hex code of the color associated with this tier level Images The animated and static image sets for the Cheermote. Level The tier level. MinimumBits The minimum number of Bits that you must cheer at this tier level. ShowInBitsCard Determines whether this tier level is shown in the Bits card."
  },
  "api/AuxLabs.Twitch.Rest.Models.BitsUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BitsUser.html",
    "title": "Class BitsUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsUser Inheritance object BitsUser Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BitsUser Properties Name Description Rank The userâ€™s position on the leaderboard. TotalBits The number of bits the user has cheered. UserId An ID that identifies a user on the leaderboard. UserLogin The userâ€™s login name. UserName The userâ€™s display name."
  },
  "api/AuxLabs.Twitch.Rest.Models.BlockedTerm.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BlockedTerm.html",
    "title": "Class BlockedTerm | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BlockedTerm Inheritance object BlockedTerm Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BlockedTerm Properties Name Description BroadcasterId The broadcaster that owns the list of blocked terms. CreatedAt The UTC date and time that the term was blocked. ExpiresAt The UTC date and time that the blocked term is set to expire. Id An ID that identifies this blocked term. ModeratorId The moderator that blocked the word or phrase from being used in the broadcasterâ€™s chat room. Text The blocked word or phrase. UpdatedAt The UTC date and time that the term was updated."
  },
  "api/AuxLabs.Twitch.Rest.Models.BlockReason.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BlockReason.html",
    "title": "Enum BlockReason | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum BlockReason Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public enum BlockReason Fields Name Description Harassment Other Spam"
  },
  "api/AuxLabs.Twitch.Rest.Models.Broadcast.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Broadcast.html",
    "title": "Class Broadcast | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Broadcast Inheritance object Broadcast Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Broadcast Properties Name Description Culture The broadcaster's preferred language. GameId The ID of the category or game being played. GameName The name of the category or game being played. Id An ID that identifies the stream. IsMature Indicates whether the stream is meant for mature audiences. StartedAt The UTC date and time of when the broadcast began. Tags The tags applied to the stream. ThumbnailUrl A URL to an image of a frame from the last 5 minutes of the stream. Title The streamâ€™s title. Type The type of stream. UserDisplayName The userâ€™s display name. UserId The ID of the user thatâ€™s broadcasting the stream. UserName The userâ€™s login name. ViewerCount The number of users watching the stream."
  },
  "api/AuxLabs.Twitch.Rest.Models.BroadcasterCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BroadcasterCondition.html",
    "title": "Class BroadcasterCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcasterCondition Inheritance object BroadcasterCondition ModeratorCondition RewardCondition Implements IEventCondition Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BroadcasterCondition : IEventCondition Constructors Name Description BroadcasterCondition() BroadcasterCondition(string) Properties Name Description BroadcasterId The broadcaster user ID of the channel for which notifications will be received. Operators Name Description implicit operator string(BroadcasterCondition) implicit operator BroadcasterCondition(string)"
  },
  "api/AuxLabs.Twitch.Rest.Models.BroadcastMarker.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.BroadcastMarker.html",
    "title": "Class BroadcastMarker | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcastMarker Inheritance object BroadcastMarker Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BroadcastMarker Properties Name Description CreatedAt The UTC date and time of when the user created the marker. Description A description that the user gave the marker to help them remember why they marked the location. Id An ID that identifies this marker. PositionSeconds The relative offset (in seconds) of the marker from the beginning of the stream."
  },
  "api/AuxLabs.Twitch.Rest.Models.Category.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Category.html",
    "title": "Class Category | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Category Inheritance object Category Game Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Category Properties Name Description BoxArtUrl A URL to the categoryâ€™s box art. Id An ID that identifies the category. Name The categoryâ€™s name."
  },
  "api/AuxLabs.Twitch.Rest.Models.Channel.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Channel.html",
    "title": "Class Channel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Channel Inheritance object Channel ChannelBroadcast Implements ISimpleUser IPartialUser IChannel IEntity<string> Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Channel : ISimpleUser, IPartialUser, IChannel, IEntity<string> Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId An ID that uniquely identifies the broadcaster. BroadcasterName The broadcasterâ€™s login name. Culture The broadcasterâ€™s preferred language. Delay The value of the broadcasterâ€™s stream delay setting, in seconds. GameId An ID that uniquely identifies the game that the broadcaster is playing or last played. GameName The name of the game that the broadcaster is playing or last played. Tags The tags applied to the channel. Title The title of the stream that the broadcaster is currently streaming or last streamed. Explicit Interface Implementations Name Description IEntity<string>.Id"
  },
  "api/AuxLabs.Twitch.Rest.Models.ChannelBroadcast.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ChannelBroadcast.html",
    "title": "Class ChannelBroadcast | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelBroadcast Inheritance object Channel ChannelBroadcast Implements ISimpleUser IPartialUser IChannel IEntity<string> Inherited Members Channel.BroadcasterId Channel.BroadcasterName Channel.BroadcasterDisplayName Channel.Culture Channel.GameId Channel.GameName Channel.Title Channel.Delay Channel.Tags Channel.IEntity<string>.Id Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ChannelBroadcast : Channel, ISimpleUser, IPartialUser, IChannel, IEntity<string> Properties Name Description IsLive Determines whether the broadcaster is streaming live. StartedAt The UTC date and time of when the broadcaster started streaming. ThumbnailUrl A URL to a thumbnail of the broadcasterâ€™s profile image."
  },
  "api/AuxLabs.Twitch.Rest.Models.ChannelEditor.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ChannelEditor.html",
    "title": "Class ChannelEditor | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelEditor Inheritance object ChannelEditor Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ChannelEditor Properties Name Description CreatedAt The date and time when the user became one of the broadcasterâ€™s editors. UserId An ID that uniquely identifies a user with editor permissions. UserName The userâ€™s display name."
  },
  "api/AuxLabs.Twitch.Rest.Models.ChannelTeam.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ChannelTeam.html",
    "title": "Class ChannelTeam | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelTeam Inheritance object SimpleTeam ChannelTeam Inherited Members SimpleTeam.Id SimpleTeam.Name SimpleTeam.DisplayName SimpleTeam.BackgroundImageUrl SimpleTeam.BannerUrl SimpleTeam.CreatedAt SimpleTeam.UpdatedAt SimpleTeam.Description SimpleTeam.ThumbnailUrl Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ChannelTeam : SimpleTeam Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId An ID that identifies the broadcaster. BroadcasterName The broadcasterâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.CharityAmount.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.CharityAmount.html",
    "title": "Struct CharityAmount | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct CharityAmount Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public struct CharityAmount Properties Name Description Currency The ISO-4217 three-letter currency code that identifies the type of currency. DecimalPlaces The number of decimal places used by the currency. Value The monetary amount in the currencyâ€™s minor unit."
  },
  "api/AuxLabs.Twitch.Rest.Models.CharityCampaign.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.CharityCampaign.html",
    "title": "Class CharityCampaign | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CharityCampaign Inheritance object CharityCampaign Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CharityCampaign Properties Name Description BroadcasterId An ID that identifies the broadcaster thatâ€™s running the campaign. BroadcasterLogin The broadcasterâ€™s login name. BroadcasterName The broadcasterâ€™s display name. CharityDescription A description of the charity. CharityLogoUrl A URL to an image of the charityâ€™s logo. CharityName The charityâ€™s name. CharityWebsiteUrl A URL to the charityâ€™s website. CurrentAmount The current amount of donations that the campaign has received. Id An ID that identifies the charity campaign. TargetAmount The campaignâ€™s fundraising goal."
  },
  "api/AuxLabs.Twitch.Rest.Models.CharityDonation.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.CharityDonation.html",
    "title": "Class CharityDonation | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CharityDonation Inheritance object CharityDonation Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CharityDonation Properties Name Description Amount The amount of money that the user donated. CampaignId An ID that identifies the charity campaign that the donation applies to. Id An ID that identifies the donation. UserId An ID that identifies a user that donated money to the campaign. UserLogin The userâ€™s login name. UserName The userâ€™s display name."
  },
  "api/AuxLabs.Twitch.Rest.Models.ChatSettings.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ChatSettings.html",
    "title": "Class ChatSettings | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChatSettings Inheritance object PatchChatSettingsBody ChatSettings Inherited Members PatchChatSettingsBody.IsEmoteOnly PatchChatSettingsBody.IsFollowerOnly PatchChatSettingsBody.FollowerOnlyMinutes PatchChatSettingsBody.IsModeratorDelayed PatchChatSettingsBody.ModeratorDelaySeconds PatchChatSettingsBody.IsSlowEnabled PatchChatSettingsBody.SlowSeconds PatchChatSettingsBody.IsSubscriberOnly PatchChatSettingsBody.IsUniqueEnabled PatchChatSettingsBody.Validate() Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ChatSettings : PatchChatSettingsBody Properties Name Description BroadcasterId The ID of the broadcaster specified in the request. ModeratorId The moderatorâ€™s ID."
  },
  "api/AuxLabs.Twitch.Rest.Models.Cheermote.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Cheermote.html",
    "title": "Class Cheermote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Cheermote Inheritance object Cheermote Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Cheermote Properties Name Description IsCharitable Indicates whether this Cheermote provides a charitable contribution match during charity campaigns. LastUpdatedAt The date and time when this Cheermote was last updated. Name The prefix of the Cheermote string that you use in chat to cheer bits. Order The order that the Cheermotes are shown in the bits card. Tiers A collection of tier levels that the Cheermote supports. Type The type of Cheermote."
  },
  "api/AuxLabs.Twitch.Rest.Models.CheermoteFormat.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.CheermoteFormat.html",
    "title": "Class CheermoteFormat | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheermoteFormat Inheritance object CheermoteFormat Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CheermoteFormat Properties Name Description AnimatedImage StaticImage"
  },
  "api/AuxLabs.Twitch.Rest.Models.CheermoteImage.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.CheermoteImage.html",
    "title": "Class CheermoteImage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheermoteImage Inheritance object CheermoteImage Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CheermoteImage Properties Name Description Size1 Size1AndHalf Size2 Size3 Size4"
  },
  "api/AuxLabs.Twitch.Rest.Models.CheermoteTheme.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.CheermoteTheme.html",
    "title": "Class CheermoteTheme | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheermoteTheme Inheritance object CheermoteTheme Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CheermoteTheme Properties Name Description Dark Light"
  },
  "api/AuxLabs.Twitch.Rest.Models.Clip.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Clip.html",
    "title": "Class Clip | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Clip Inheritance object SimpleClip Clip Inherited Members SimpleClip.Id SimpleClip.EditUrl Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Clip : SimpleClip Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId An ID that identifies the broadcaster that the video was clipped from. CreatedAt The date and time of when the clip was created. CreatorDisplayName The userâ€™s display name. CreatorId An ID that identifies the user that created the clip. DurationSeconds The length of the clip, in seconds. EmbedUrl A URL that you can use in an iframe to embed the clip. GameId The ID of the game that was being played when the clip was created. Language The language that the broadcaster broadcasts in. OffsetSeconds The zero-based offset, in seconds, to where the clip starts in the video ThumbnailUrl A URL to a thumbnail image of the clip. Title The title of the clip. Url A URL to the clip. VideoId An ID that identifies the video that the clip came from. ViewCount The number of times the clip has been viewed."
  },
  "api/AuxLabs.Twitch.Rest.Models.Commercial.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Commercial.html",
    "title": "Class Commercial | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Commercial Contains information about the status of a commercial request. Inheritance object Commercial Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Commercial Properties Name Description Length The length of the commercial you requested. Message A message that indicates whether Twitch was able to serve an ad. RetryAfter The number of seconds you must wait before running another commercial."
  },
  "api/AuxLabs.Twitch.Rest.Models.ComponentExtension.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ComponentExtension.html",
    "title": "Class ComponentExtension | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ComponentExtension Inheritance object SimpleExtension ComponentExtension Inherited Members SimpleExtension.Id SimpleExtension.Version SimpleExtension.Name SimpleExtension.IsActive Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ComponentExtension : SimpleExtension Properties Name Description X The x-coordinate where the extension is placed. Y The y-coordinate where the extension is placed."
  },
  "api/AuxLabs.Twitch.Rest.Models.Cost.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Cost.html",
    "title": "Class Cost | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Cost Inheritance object Cost Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Cost Properties Name Description Amount The amount exchanged for the digital product. Type The type of currency exchanged."
  },
  "api/AuxLabs.Twitch.Rest.Models.DropEntitlementCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.DropEntitlementCondition.html",
    "title": "Class DropEntitlementCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DropEntitlementCondition Inheritance object DropEntitlementCondition Implements IEventCondition Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DropEntitlementCondition : IEventCondition Constructors Name Description DropEntitlementCondition() DropEntitlementCondition(string, string, string) Properties Name Description CampaignId Optional. The campaign ID for a specific campaign for which notifications will be received. CategoryId Optional. The category (or game) ID of the game for which notifications will be received. OrganizationId The organization ID of the organization that owns the game on the developer portal. Operators Name Description implicit operator (string, string, string)(DropEntitlementCondition) implicit operator DropEntitlementCondition(ValueTuple<string, string, string>)"
  },
  "api/AuxLabs.Twitch.Rest.Models.Emote.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Emote.html",
    "title": "Class Emote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Emote Inheritance object GlobalEmote Emote Inherited Members GlobalEmote.Id GlobalEmote.Name GlobalEmote.Images GlobalEmote.Formats GlobalEmote.Scales GlobalEmote.Themes Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Emote : GlobalEmote Properties Name Description BroadcasterId The ID of the broadcaster who owns the emote. EmoteSetId An ID that identifies the emote set that the emote belongs to. Tier The subscriber tier at which the emote is unlocked. Type The type of emote."
  },
  "api/AuxLabs.Twitch.Rest.Models.Entitlement.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Entitlement.html",
    "title": "Class Entitlement | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Entitlement Inheritance object Entitlement Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Entitlement Properties Name Description BenefitId An ID that identifies the benefit (reward). GameId An ID that identifies the game the user was playing when the reward was entitled. Id An ID that identifies the entitlement. LastUpdatedAt The UTC date and time of when the entitlement was last updated. Status The entitlementâ€™s fulfillment status. Timestamp The UTC date and time of when the entitlement was granted. UserId An ID that identifies the user who was granted the entitlement."
  },
  "api/AuxLabs.Twitch.Rest.Models.EntitlementDrop.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.EntitlementDrop.html",
    "title": "Class EntitlementDrop | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EntitlementDrop Inheritance object EntitlementDrop Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class EntitlementDrop Properties Name Description EntitlementIds The list of entitlements that the status applies to. Status Indicates the status of the specified entitlements."
  },
  "api/AuxLabs.Twitch.Rest.Models.EventSubResponse.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.EventSubResponse.html",
    "title": "Class EventSubResponse | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubResponse Inheritance object TwitchResponse<EventSubscription> EventSubResponse Inherited Members TwitchResponse<EventSubscription>.Data Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class EventSubResponse : TwitchResponse<EventSubscription> Properties Name Description MaxTotalCost The maximum total cost that youâ€™re allowed to incur for all subscriptions you create. Pagination Contains information used to page through the list of results. Total The total number of subscriptions youâ€™ve created. TotalCost The sum of all of your subscription costs."
  },
  "api/AuxLabs.Twitch.Rest.Models.EventSubscription-1.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.EventSubscription-1.html",
    "title": "Class EventSubscription<TCondition> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubscription<TCondition> Inheritance object EventSubscription<TCondition> EventSubscription Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class EventSubscription<TCondition> where TCondition : IEventCondition Type Parameters Name Description TCondition Properties Name Description Condition The subscriptionâ€™s parameter values. Cost The amount that the subscription counts against your limit. CreatedAt The date and time of when the subscription was created. Id An ID that identifies the subscription. Status The subscriptionâ€™s status. Transport The transport details used to send the notifications. Type The subscriptionâ€™s type. TypeRaw The notificationâ€™s subscription type in raw string form. Version The version number that identifies this definition of the subscriptionâ€™s data."
  },
  "api/AuxLabs.Twitch.Rest.Models.EventSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.EventSubscription.html",
    "title": "Class EventSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EventSubscription Inheritance object EventSubscription<IEventCondition> EventSubscription Inherited Members EventSubscription<IEventCondition>.Id EventSubscription<IEventCondition>.Status EventSubscription<IEventCondition>.TypeRaw EventSubscription<IEventCondition>.Type EventSubscription<IEventCondition>.Version EventSubscription<IEventCondition>.Condition EventSubscription<IEventCondition>.CreatedAt EventSubscription<IEventCondition>.Transport EventSubscription<IEventCondition>.Cost Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class EventSubscription : EventSubscription<IEventCondition>"
  },
  "api/AuxLabs.Twitch.Rest.Models.Extension.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Extension.html",
    "title": "Class Extension | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Extension Inheritance object SimpleExtension Extension Inherited Members SimpleExtension.Id SimpleExtension.Version SimpleExtension.Name SimpleExtension.IsActive Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Extension : SimpleExtension Properties Name Description CanActivate Determines whether the extension is configured and can be activated. Types The extension types that you can activate for this extension."
  },
  "api/AuxLabs.Twitch.Rest.Models.ExtensionAnalytic.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ExtensionAnalytic.html",
    "title": "Class ExtensionAnalytic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionAnalytic Contains information about an extension's analytic report. Inheritance object Analytic ExtensionAnalytic Inherited Members Analytic.Url Analytic.Type Analytic.DateRange Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ExtensionAnalytic : Analytic Properties Name Description ExtensionId An ID that identifies the extension that the report was generated for."
  },
  "api/AuxLabs.Twitch.Rest.Models.ExtensionCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ExtensionCondition.html",
    "title": "Class ExtensionCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionCondition Inheritance object ExtensionCondition Implements IEventCondition Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ExtensionCondition : IEventCondition Constructors Name Description ExtensionCondition() ExtensionCondition(string) Properties Name Description ClientId The client ID of the extension. Operators Name Description implicit operator string(ExtensionCondition) implicit operator ExtensionCondition(string)"
  },
  "api/AuxLabs.Twitch.Rest.Models.ExtensionMap.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ExtensionMap.html",
    "title": "Class ExtensionMap | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionMap Inheritance object ExtensionMap Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ExtensionMap Properties Name Description Component A dictionary that contains the data for a video-component extension. Overlay A dictionary that contains the data for a video-overlay extension. Panel A dictionary that contains the data for a panel extension."
  },
  "api/AuxLabs.Twitch.Rest.Models.ExtensionTransaction.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ExtensionTransaction.html",
    "title": "Class ExtensionTransaction | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ExtensionTransaction Inheritance object ExtensionTransaction Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ExtensionTransaction Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId The ID of the broadcaster that owns the channel where the transaction occurred. BroadcasterName The broadcasterâ€™s login name. Id An ID that identifies the transaction. ProductData Contains details about the digital product. ProductType The type of transaction. Timestamp The UTC date and time of the transaction. UserDisplayName The userâ€™s display name. UserId The ID of the user that purchased the digital product. UserName The userâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.FollowedChannel.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.FollowedChannel.html",
    "title": "Class FollowedChannel | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class FollowedChannel Inheritance object FollowedChannel Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class FollowedChannel Properties Name Description BroadcasterDisplayName BroadcasterId BroadcasterName FollowedAt"
  },
  "api/AuxLabs.Twitch.Rest.Models.Follower.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Follower.html",
    "title": "Class Follower | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Follower Inheritance object Follower Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Follower Properties Name Description FollowedAt The UTC timestamp when the user started following the broadcaster. UserDisplayName The userâ€™s display name. UserId An ID that uniquely identifies the user thatâ€™s following the broadcaster. UserName The userâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.Game.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Game.html",
    "title": "Class Game | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Game Inheritance object Category Game Inherited Members Category.Id Category.Name Category.BoxArtUrl Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Game : Category Properties Name Description IgdbId The ID that IGDB uses to identify this game."
  },
  "api/AuxLabs.Twitch.Rest.Models.GameAnalytic.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.GameAnalytic.html",
    "title": "Class GameAnalytic | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GameAnalytic Contains information about a game's analytic report. Inheritance object Analytic GameAnalytic Inherited Members Analytic.Url Analytic.Type Analytic.DateRange Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GameAnalytic : Analytic Properties Name Description GameId An ID that identifies the game that the report was generated for."
  },
  "api/AuxLabs.Twitch.Rest.Models.GlobalEmote.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.GlobalEmote.html",
    "title": "Class GlobalEmote | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GlobalEmote Inheritance object GlobalEmote Emote Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GlobalEmote Properties Name Description Formats The formats that the emote is available in. Id An ID that identifies this emote. Images The image URLs for the emote. Name The name of the emote. Scales The sizes that the emote is available in. Themes The background themes that the emote is available in."
  },
  "api/AuxLabs.Twitch.Rest.Models.Goal.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Goal.html",
    "title": "Class Goal | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Goal Inheritance object Goal GoalEndedEventArgs Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Goal Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId An ID that identifies the broadcaster that created the goal. BroadcasterName The broadcasterâ€™s login name. CreatedAt The UTC date and time that the broadcaster created the goal. CurrentAmount The goalâ€™s current value. Description A description of the goal. Id An ID that identifies this goal. TargetAmount The goalâ€™s target value. Type The type of goal."
  },
  "api/AuxLabs.Twitch.Rest.Models.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.html",
    "title": "Namespace AuxLabs.Twitch.Rest.Models | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Rest.Models Classes AcceptedTransport AccessTokenInfo Album Analytic AppIdentity Artist AuthorizationCondition AutomodSettings Badge BadgeSet Ban BannedUser BitsTier BitsUser BlockedTerm Broadcast BroadcasterCondition BroadcastMarker Category Channel ChannelBroadcast ChannelEditor ChannelTeam CharityCampaign CharityDonation ChatSettings Cheermote CheermoteFormat CheermoteImage CheermoteTheme Clip Commercial Contains information about the status of a commercial request. ComponentExtension Cost DropEntitlementCondition Emote Entitlement EntitlementDrop EventSubResponse EventSubscription EventSubscription<TCondition> Extension ExtensionAnalytic Contains information about an extension's analytic report. ExtensionCondition ExtensionMap ExtensionTransaction FollowedChannel Follower Game GameAnalytic Contains information about a game's analytic report. GlobalEmote Goal HypeTrain HypeTrainContribution HypeTrainInfo MockMessage ModeratorCondition Playlist Poll PollOption Prediction PredictionOption PredictionUser ProductData Raid RaidCondition Redemption Reward RewardCondition Schedule ScheduleSegment ShieldMode SimpleChatUser SimpleClip SimpleExtension SimpleSubscription SimpleTeam SimpleUser Soundtrack Subscription Team TeamUser Track TrackSource Transport TwitchMetaResponse<T> An object that represents data returned by a Twitch request, but with some metadata. TwitchResponse<T> An object that represents data returned by a Twitch request. User UserCondition UserIdentity Vacation Video Structs CharityAmount Pagination RewardSetting VideoOffset Enums BlockReason RaidConditionType"
  },
  "api/AuxLabs.Twitch.Rest.Models.HypeTrain.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.HypeTrain.html",
    "title": "Class HypeTrain | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrain Inheritance object HypeTrain Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class HypeTrain Properties Name Description BroadcasterId The ID of the broadcaster thatâ€™s running the Hype Train. CooldownEndsAt The UTC date and time that another Hype Train can start. ExpiresAt The UTC date and time that the Hype Train ends. Goal The value needed to reach the next level. Id An ID that identifies this Hype Train. LastContribution The most recent contribution towards the Hype Trainâ€™s goal. Level The highest level that the Hype Train reached StartedAt The UTC date and time that this Hype Train started. TopContributions The top contributors for each contribution type. Total The current total amount raised."
  },
  "api/AuxLabs.Twitch.Rest.Models.HypeTrainContribution.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.HypeTrainContribution.html",
    "title": "Class HypeTrainContribution | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainContribution Inheritance object HypeTrainContribution EventSubHypetrainContribution Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class HypeTrainContribution Properties Name Description Total The total amount contributed. Type The contribution method used. UserId The ID of the user that made the contribution."
  },
  "api/AuxLabs.Twitch.Rest.Models.HypeTrainInfo.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.HypeTrainInfo.html",
    "title": "Class HypeTrainInfo | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypeTrainInfo Inheritance object HypeTrainInfo Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class HypeTrainInfo Properties Name Description Data The event's data. Id An ID that identifies this event. Timestamp The UTC date and time that the event occurred. Type The type of event. Version The version number of the definition of the eventâ€™s data."
  },
  "api/AuxLabs.Twitch.Rest.Models.MockMessage.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.MockMessage.html",
    "title": "Class MockMessage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class MockMessage Inheritance object MockMessage Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class MockMessage Constructors Name Description MockMessage() MockMessage(string, string) Properties Name Description Id A caller-defined ID used to correlate this message with the same message in the response. IsPermitted Indicates whether Twitch would approve the message or hold it for moderator review. Text The message to check."
  },
  "api/AuxLabs.Twitch.Rest.Models.ModeratorCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ModeratorCondition.html",
    "title": "Class ModeratorCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModeratorCondition Inheritance object BroadcasterCondition ModeratorCondition Implements IEventCondition Inherited Members BroadcasterCondition.BroadcasterId Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ModeratorCondition : BroadcasterCondition, IEventCondition Constructors Name Description ModeratorCondition() ModeratorCondition(string, string) Properties Name Description ModeratorId The ID of the moderator of the channel you want to get notifications for. Operators Name Description implicit operator (string, string)(ModeratorCondition) implicit operator ModeratorCondition(ValueTuple<string, string>)"
  },
  "api/AuxLabs.Twitch.Rest.Models.Pagination.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Pagination.html",
    "title": "Struct Pagination | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct Pagination Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public struct Pagination Properties Name Description Cursor The cursor used to get the next page of results."
  },
  "api/AuxLabs.Twitch.Rest.Models.Playlist.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Playlist.html",
    "title": "Class Playlist | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Playlist Inheritance object Playlist Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Playlist Properties Name Description Description A short description about the music that the playlist includes. Id The playlistâ€™s Amazon Standard Identification Number. ImageUrl A URL to the playlistâ€™s image art. Title The playlistâ€™s title."
  },
  "api/AuxLabs.Twitch.Rest.Models.Poll.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Poll.html",
    "title": "Class Poll | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Poll Inheritance object Poll Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Poll Properties Name Description BitsPerVote Not used; will be set to 0. BroadcasterDisplayName The broadcasterâ€™s login name. BroadcasterId An ID that identifies the broadcaster that created the poll. BroadcasterName The broadcasterâ€™s display name. ChannelPointsPerVote The number of points the viewer must spend to cast one additional vote. Choices A list of choices that viewers can choose from. DurationSeconds The length of time that the poll will run for. EndedAt The UTC date and time of when the poll ended. Id An ID that identifies the poll. IsBitsVotingEnabled Not used; will be set to false. IsChannelPointsVotingEnabled Indicates whether viewers may cast additional votes using Channel Points. StartedAt The UTC date and time of when the poll began. Status The pollâ€™s status. Title The question that viewers are voting on."
  },
  "api/AuxLabs.Twitch.Rest.Models.PollOption.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.PollOption.html",
    "title": "Class PollOption | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollOption Inheritance object PollOption Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PollOption Properties Name Description BitsVotes Not used; will be set to 0. ChannelPointsVotes The number of votes cast using Channel Points. Id An ID that identifies this choice. Title The choiceâ€™s title. Votes The total number of votes cast for this choice."
  },
  "api/AuxLabs.Twitch.Rest.Models.Prediction.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Prediction.html",
    "title": "Class Prediction | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Prediction Inheritance object Prediction Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Prediction Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId An ID that identifies the broadcaster that created the prediction. BroadcasterName The broadcasterâ€™s login name. CreatedAt The UTC date and time of when the Prediction began. EndedAt The UTC date and time of when the Prediction ended. Id An ID that identifies this prediction. LockedAt The UTC date and time of when the Prediction was locked. Outcomes A collection of possible outcomes for the prediction. PredictionDurationSeconds The length of time that the prediction will run for. Status The predictionâ€™s status. Title The question that the prediction asks. WinningOutcomeId The ID of the winning outcome."
  },
  "api/AuxLabs.Twitch.Rest.Models.PredictionOption.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.PredictionOption.html",
    "title": "Class PredictionOption | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionOption Inheritance object PredictionOption Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PredictionOption Properties Name Description ChannelPointsTotal The number of Channel Points spent by viewers on this outcome. Color The color that visually identifies this outcome in the UX. Id An ID that identifies this outcome. Title The outcomeâ€™s text. TopPredictors A collection of viewers who were the top predictors UserCount The number of unique viewers that chose this outcome."
  },
  "api/AuxLabs.Twitch.Rest.Models.PredictionUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.PredictionUser.html",
    "title": "Class PredictionUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionUser Inheritance object PredictionUser Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PredictionUser Properties Name Description ChannelPointsUsed The number of Channel Points the viewer spent. ChannelPointsWon The number of Channel Points distributed to the viewer. DisplayName The viewerâ€™s display name. Id An ID that identifies the viewer. Name The viewerâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.ProductData.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ProductData.html",
    "title": "Class ProductData | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ProductData Inheritance object ProductData Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ProductData Properties Name Description Cost Contains details about the digital productâ€™s cost. DisplayName The name of the digital product. Domain Set to twitch.ext. + the extension's ID. ExpiresAt This is always null since you may purchase only unexpired products. IsBroadcast Determines whether the data was broadcast to all instances of the extension. IsInDevelopment Determines whether the product is in development. Sku An ID that identifies the digital product."
  },
  "api/AuxLabs.Twitch.Rest.Models.Raid.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Raid.html",
    "title": "Class Raid | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Raid Inheritance object Raid Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Raid Properties Name Description CreatedAt The UTC date and time of when the raid was requested. IsMature Indicates whether the channel being raided contains mature content."
  },
  "api/AuxLabs.Twitch.Rest.Models.RaidCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.RaidCondition.html",
    "title": "Class RaidCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RaidCondition Inheritance object RaidCondition Implements IEventCondition Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RaidCondition : IEventCondition Constructors Name Description RaidCondition() RaidCondition(RaidConditionType, string) Properties Name Description FromBroadcasterId Optional. The broadcaster user ID that created the channel raid you want to get notifications for. ToBroadcasterId Optional. The broadcaster user ID that received the channel raid you want to get notifications for. Operators Name Description implicit operator (RaidConditionType, string)(RaidCondition) implicit operator RaidCondition(ValueTuple<RaidConditionType, string>)"
  },
  "api/AuxLabs.Twitch.Rest.Models.RaidConditionType.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.RaidConditionType.html",
    "title": "Enum RaidConditionType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum RaidConditionType Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public enum RaidConditionType Fields Name Description From To"
  },
  "api/AuxLabs.Twitch.Rest.Models.Redemption.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Redemption.html",
    "title": "Class Redemption | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Redemption Inheritance object Redemption Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Redemption Properties Name Description BroadcasterId The ID that uniquely identifies the broadcaster. BroadcasterLogin The broadcasterâ€™s login name. BroadcasterName The broadcasterâ€™s display name. Id The ID that uniquely identifies this redemption. RedeemedAt The date and time of when the reward was redeemed Reward The reward that the user redeemed. Status The state of the redemption. UserId The ID that uniquely identifies the user that redeemed the reward. UserInput The text the user entered at the prompt when they redeemed the reward. UserLogin The userâ€™s login name. UserName The userâ€™s display name."
  },
  "api/AuxLabs.Twitch.Rest.Models.Reward.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Reward.html",
    "title": "Class Reward | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Reward Inheritance object SimpleReward Reward Inherited Members SimpleReward.Id SimpleReward.Title SimpleReward.Prompt SimpleReward.Cost Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Reward : SimpleReward Properties Name Description BackgroundColor The background color to use for the reward. BroadcasterId The ID that uniquely identifies the broadcaster. BroadcasterLogin The broadcasterâ€™s login name. BroadcasterName The broadcasterâ€™s display name. CooldownExpiresAt The timestamp of when the cooldown period expires. DefaultImages A set of default images for the reward. GlobalCooldownSetting Determines whether to apply a cooldown period between redemptions. Images A set of custom images for the reward. IsEnabled Determines whether the reward is enabled. IsInStock Determines whether the reward is currently in stock. IsPaused Determines whether the reward is currently paused. IsUserInputRequired Determines whether the user must enter information when redeeming the reward. MaxPerStreamSetting Determiness whether to apply a maximum to the number to the redemptions allowed per live stream. MaxPerUserSetting Determines whether to apply a maximum to the number of redemptions allowed per user per live stream. ShouldSkipRequestQueue Determines whether redemptions should be set to fulfilled status immediately when a reward is redeemed. TotalRedemptions The number of redemptions redeemed during the current live stream."
  },
  "api/AuxLabs.Twitch.Rest.Models.RewardCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.RewardCondition.html",
    "title": "Class RewardCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardCondition Inheritance object BroadcasterCondition RewardCondition Implements IEventCondition Inherited Members BroadcasterCondition.BroadcasterId Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RewardCondition : BroadcasterCondition, IEventCondition Constructors Name Description RewardCondition() RewardCondition(string, string) Properties Name Description RewardId Optional. Specify a reward id to only receive notifications for a specific reward. Operators Name Description implicit operator (string, string)(RewardCondition) implicit operator RewardCondition(ValueTuple<string, string>)"
  },
  "api/AuxLabs.Twitch.Rest.Models.RewardSetting.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.RewardSetting.html",
    "title": "Struct RewardSetting | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct RewardSetting Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public readonly struct RewardSetting Constructors Name Description RewardSetting(bool, uint) Properties Name Description IsEnabled Value"
  },
  "api/AuxLabs.Twitch.Rest.Models.Schedule.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Schedule.html",
    "title": "Class Schedule | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Schedule Inheritance object Schedule Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Schedule Properties Name Description BroadcasterDisplayName The broadcasterâ€™s display name. BroadcasterId The ID of the broadcaster that owns the broadcast schedule. BroadcasterName The broadcasterâ€™s login name. Segments The list of broadcasts in the broadcasterâ€™s streaming schedule. Vacation The dates when the broadcaster is on vacation and not streaming."
  },
  "api/AuxLabs.Twitch.Rest.Models.ScheduleSegment.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ScheduleSegment.html",
    "title": "Class ScheduleSegment | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ScheduleSegment Inheritance object ScheduleSegment Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ScheduleSegment Properties Name Description CancelledUntil Indicates whether the broadcaster canceled this segment of a recurring broadcast. Category The type of content that the broadcaster plans to stream. EndsAt The UTC date and time of when the broadcast ends. Id An ID that identifies this broadcast segment. IsRecurring Determines whether the broadcast is part of a recurring series that streams at the same time each week or is a one-time broadcast. StartsAt The UTC date and time of when the broadcast starts. Title The broadcast segmentâ€™s title."
  },
  "api/AuxLabs.Twitch.Rest.Models.ShieldMode.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.ShieldMode.html",
    "title": "Class ShieldMode | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldMode Inheritance object ShieldMode Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ShieldMode Properties Name Description IsActive Determines whether Shield Mode is active. LastActivatedAt The UTC timestamp of when Shield Mode was last activated. ModeratorDisplayName The moderatorâ€™s display name. ModeratorId An ID that identifies the moderator that last activated Shield Mode. ModeratorName The moderatorâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.SimpleChatUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.SimpleChatUser.html",
    "title": "Class SimpleChatUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleChatUser Inheritance object SimpleUser SimpleChatUser Implements ISimpleUser IPartialUser IEntity<string> Inherited Members SimpleUser.Id SimpleUser.Name SimpleUser.DisplayName Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SimpleChatUser : SimpleUser, ISimpleUser, IPartialUser, IEntity<string> Properties Name Description Color The color of the user's name in chat."
  },
  "api/AuxLabs.Twitch.Rest.Models.SimpleClip.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.SimpleClip.html",
    "title": "Class SimpleClip | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleClip Inheritance object SimpleClip Clip Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SimpleClip Properties Name Description EditUrl A URL that you can use to edit the clipâ€™s title, identify the part of the clip to publish, and publish the clip. Id An ID that uniquely identifies the clip."
  },
  "api/AuxLabs.Twitch.Rest.Models.SimpleExtension.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.SimpleExtension.html",
    "title": "Class SimpleExtension | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleExtension Inheritance object SimpleExtension ComponentExtension Extension Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SimpleExtension Properties Name Description Id An ID that identifies the extension. IsActive Determines the extensionâ€™s activation state. Name The extensionâ€™s name. Version The extensionâ€™s version."
  },
  "api/AuxLabs.Twitch.Rest.Models.SimpleSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.SimpleSubscription.html",
    "title": "Class SimpleSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleSubscription Inheritance object SimpleSubscription Subscription Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SimpleSubscription Properties Name Description BroadcasterDisplayName BroadcasterId BroadcasterName GifterDisplayName GifterId GifterName IsGift Determines whether the subscription is a gift subscription. Tier The type of subscription."
  },
  "api/AuxLabs.Twitch.Rest.Models.SimpleTeam.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.SimpleTeam.html",
    "title": "Class SimpleTeam | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleTeam Inheritance object SimpleTeam ChannelTeam Team Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SimpleTeam Properties Name Description BackgroundImageUrl A URL to the teamâ€™s background image. BannerUrl A URL to the teamâ€™s banner. CreatedAt The UTC date and time of when the team was created. Description The teamâ€™s description. The description may contain formatting such as Markdown, HTML, newline (\\n) characters, etc. DisplayName The teamâ€™s display name. Id An ID that identifies the team. Name The teamâ€™s name. ThumbnailUrl A URL to a thumbnail image of the teamâ€™s logo. UpdatedAt The UTC date and time of the last time the team was updated."
  },
  "api/AuxLabs.Twitch.Rest.Models.SimpleUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.SimpleUser.html",
    "title": "Class SimpleUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleUser Inheritance object SimpleUser SimpleChatUser User Implements ISimpleUser IPartialUser IEntity<string> Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SimpleUser : ISimpleUser, IPartialUser, IEntity<string> Properties Name Description DisplayName The userâ€™s display name. Id The ID of the user Name The userâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.Soundtrack.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Soundtrack.html",
    "title": "Class Soundtrack | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Soundtrack Inheritance object Soundtrack Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Soundtrack Properties Name Description Source The source of the track thatâ€™s currently playing. Track Describes a track."
  },
  "api/AuxLabs.Twitch.Rest.Models.Subscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Subscription.html",
    "title": "Class Subscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Subscription Inheritance object SimpleSubscription Subscription Inherited Members SimpleSubscription.BroadcasterId SimpleSubscription.BroadcasterName SimpleSubscription.BroadcasterDisplayName SimpleSubscription.GifterId SimpleSubscription.GifterName SimpleSubscription.GifterDisplayName SimpleSubscription.IsGift SimpleSubscription.Tier Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Subscription : SimpleSubscription Properties Name Description PlanName The name of the subscription. UserDisplayName The userâ€™s display name. UserId An ID that identifies the subscribing user. UserName The userâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.Team.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Team.html",
    "title": "Class Team | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Team Inheritance object SimpleTeam Team Inherited Members SimpleTeam.Id SimpleTeam.Name SimpleTeam.DisplayName SimpleTeam.BackgroundImageUrl SimpleTeam.BannerUrl SimpleTeam.CreatedAt SimpleTeam.UpdatedAt SimpleTeam.Description SimpleTeam.ThumbnailUrl Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Team : SimpleTeam Properties Name Description Users The list of team members."
  },
  "api/AuxLabs.Twitch.Rest.Models.TeamUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.TeamUser.html",
    "title": "Class TeamUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TeamUser Inheritance object TeamUser Implements ISimpleUser IPartialUser IEntity<string> Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class TeamUser : ISimpleUser, IPartialUser, IEntity<string> Properties Name Description DisplayName The userâ€™s display name. Id The ID of the user Name The userâ€™s login name."
  },
  "api/AuxLabs.Twitch.Rest.Models.Track.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Track.html",
    "title": "Class Track | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Track Inheritance object Track Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Track Properties Name Description Album Describes the album that the track is found on. Artists The artists included on the track. DurationSeconds The duration of the track, in seconds. Id The trackâ€™s Amazon Standard Identification Number. Isrc The trackâ€™s International Standard Recording Code. Title The trackâ€™s title."
  },
  "api/AuxLabs.Twitch.Rest.Models.TrackSource.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.TrackSource.html",
    "title": "Class TrackSource | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TrackSource Inheritance object TrackSource Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class TrackSource Properties Name Description Id The playlistâ€™s or stationâ€™s Amazon Standard Identification Number. ImageUrl A URL to the playlistâ€™s or stationâ€™s image art. SoundtrackUrl A URL to the playlist on Soundtrack. SpotifyUrl A URL to the playlist on Spotify. Title The playlistâ€™s or stationâ€™s title. Type The type of content that this source maps to."
  },
  "api/AuxLabs.Twitch.Rest.Models.Transport.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Transport.html",
    "title": "Class Transport | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Transport Inheritance object Transport AcceptedTransport Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Transport Constructors Name Description Transport() Transport(string, string) Transport(string) Properties Name Description Callback The callback URL where the notifications are sent. Only required for webhooks. Method The transport method. Secret The secret used to verify the signature. Only required for webhooks. SessionId An ID that identifies the WebSocket to send notifications to. Only required for websockets."
  },
  "api/AuxLabs.Twitch.Rest.Models.TwitchMetaResponse-1.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.TwitchMetaResponse-1.html",
    "title": "Class TwitchMetaResponse<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchMetaResponse<T> An object that represents data returned by a Twitch request, but with some metadata. Inheritance object TwitchResponse<T> TwitchMetaResponse<T> Inherited Members TwitchResponse<T>.Data Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class TwitchMetaResponse<T> : TwitchResponse<T> where T : class Type Parameters Name Description T Properties Name Description DateRange A range of dates relating to the objects returned in . Pagination Contains information used to page through the list of results. Points The current number of subscriber points earned by this broadcaster. Total The total number of objects returned in ."
  },
  "api/AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html",
    "title": "Class TwitchResponse<T> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchResponse<T> An object that represents data returned by a Twitch request. Inheritance object TwitchResponse<T> EventSubResponse TwitchMetaResponse<T> Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class TwitchResponse<T> where T : class Type Parameters Name Description T Properties Name Description Data A collection of objects returned from a request"
  },
  "api/AuxLabs.Twitch.Rest.Models.User.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.User.html",
    "title": "Class User | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class User Inheritance object SimpleUser User Implements ISimpleUser IPartialUser IEntity<string> Inherited Members SimpleUser.Id SimpleUser.Name SimpleUser.DisplayName Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class User : SimpleUser, ISimpleUser, IPartialUser, IEntity<string> Properties Name Description BroadcasterType Userâ€™s broadcaster type CreatedAt Date when the user was created Description Userâ€™s channel description Email Userâ€™s verified email address OfflineImageUrl URL of the userâ€™s offline image ProfileImageUrl URL of the userâ€™s profile image Type Userâ€™s type ViewCount Total number of views of the userâ€™s channel"
  },
  "api/AuxLabs.Twitch.Rest.Models.UserCondition.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.UserCondition.html",
    "title": "Class UserCondition | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserCondition Inheritance object UserCondition Implements IEventCondition Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class UserCondition : IEventCondition Constructors Name Description UserCondition() UserCondition(string) Properties Name Description UserId The user ID for the user you want notifications for. Operators Name Description implicit operator string(UserCondition) implicit operator UserCondition(string)"
  },
  "api/AuxLabs.Twitch.Rest.Models.UserIdentity.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.UserIdentity.html",
    "title": "Class UserIdentity | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserIdentity Inheritance object AppIdentity UserIdentity Inherited Members AppIdentity.AccessToken AppIdentity.ExpiresInSeconds AppIdentity.TokenType Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class UserIdentity : AppIdentity Properties Name Description RefreshToken Scopes UserId UserName"
  },
  "api/AuxLabs.Twitch.Rest.Models.Vacation.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Vacation.html",
    "title": "Class Vacation | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Vacation Inheritance object Vacation Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Vacation Properties Name Description EndsAt The UTC date and time of when the broadcasterâ€™s vacation ends. StartsAt The UTC date and time of when the broadcasterâ€™s vacation starts."
  },
  "api/AuxLabs.Twitch.Rest.Models.Video.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.Video.html",
    "title": "Class Video | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class Video Inheritance object Video Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class Video Properties Name Description CreatedAt The date and time, in UTC, of when the video was created. Description The videoâ€™s description. Duration The videoâ€™s length in ISO 8601 duration format. Id An ID that identifies the video. Language The ISO 639-1 two-letter language code that the video was broadcast in. MutedSegments The segments that Twitch Audio Recognition muted. PublishedAt The date and time, in UTC, of when the video was published. StreamId The ID of the stream that the video originated from if the video is a Archive. ThumbnailUrl A URL to a thumbnail image of the video. Title The videoâ€™s title. Type The videoâ€™s type. Url The videoâ€™s URL. UserDisplayName The broadcasterâ€™s display name. UserId The ID of the broadcaster that owns the video. UserName The broadcasterâ€™s login name. Viewable The videoâ€™s viewable state. Always set to public. ViewCount The number of times that users have watched the video."
  },
  "api/AuxLabs.Twitch.Rest.Models.VideoOffset.html": {
    "href": "api/AuxLabs.Twitch.Rest.Models.VideoOffset.html",
    "title": "Struct VideoOffset | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct VideoOffset Namespace: AuxLabs.Twitch.Rest.Models Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public readonly struct VideoOffset Constructors Name Description VideoOffset(int, int) Properties Name Description Duration Offset"
  },
  "api/AuxLabs.Twitch.Rest.Requests.AuthorizationGrantedSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.AuthorizationGrantedSubscription.html",
    "title": "Class AuthorizationGrantedSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationGrantedSubscription Inheritance object PostEventSubscriptionBody<AuthorizationCondition> AuthorizationSubscriptionBase AuthorizationGrantedSubscription Inherited Members PostEventSubscriptionBody<AuthorizationCondition>.Type PostEventSubscriptionBody<AuthorizationCondition>.Version PostEventSubscriptionBody<AuthorizationCondition>.Condition PostEventSubscriptionBody<AuthorizationCondition>.Transport PostEventSubscriptionBody<AuthorizationCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AuthorizationGrantedSubscription : AuthorizationSubscriptionBase Constructors Name Description AuthorizationGrantedSubscription(string, string, string) AuthorizationGrantedSubscription(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.AuthorizationRevokedSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.AuthorizationRevokedSubscription.html",
    "title": "Class AuthorizationRevokedSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationRevokedSubscription Inheritance object PostEventSubscriptionBody<AuthorizationCondition> AuthorizationSubscriptionBase AuthorizationRevokedSubscription Inherited Members PostEventSubscriptionBody<AuthorizationCondition>.Type PostEventSubscriptionBody<AuthorizationCondition>.Version PostEventSubscriptionBody<AuthorizationCondition>.Condition PostEventSubscriptionBody<AuthorizationCondition>.Transport PostEventSubscriptionBody<AuthorizationCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AuthorizationRevokedSubscription : AuthorizationSubscriptionBase Constructors Name Description AuthorizationRevokedSubscription(string, string, string) AuthorizationRevokedSubscription(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.AuthorizationSubscriptionBase.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.AuthorizationSubscriptionBase.html",
    "title": "Class AuthorizationSubscriptionBase | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AuthorizationSubscriptionBase Inheritance object PostEventSubscriptionBody<AuthorizationCondition> AuthorizationSubscriptionBase AuthorizationGrantedSubscription AuthorizationRevokedSubscription Inherited Members PostEventSubscriptionBody<AuthorizationCondition>.Type PostEventSubscriptionBody<AuthorizationCondition>.Version PostEventSubscriptionBody<AuthorizationCondition>.Condition PostEventSubscriptionBody<AuthorizationCondition>.Transport PostEventSubscriptionBody<AuthorizationCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class AuthorizationSubscriptionBase : PostEventSubscriptionBody<AuthorizationCondition> Constructors Name Description AuthorizationSubscriptionBase(string, string, string) AuthorizationSubscriptionBase(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.AutomodSettingsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.AutomodSettingsArgs.html",
    "title": "Class AutomodSettingsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class AutomodSettingsArgs Inheritance object QueryMap AutomodSettingsArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class AutomodSettingsArgs : QueryMap, IDictionary<string, string>, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose AutoMod settings you want to get. ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.BanSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.BanSubscription.html",
    "title": "Class BanSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BanSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase BanSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BanSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description BanSubscription(string, string, string) BanSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.html",
    "title": "Class BitsTransactionSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BitsTransactionSubscription Inheritance object PostEventSubscriptionBody<ExtensionCondition> BitsTransactionSubscription Inherited Members PostEventSubscriptionBody<ExtensionCondition>.Type PostEventSubscriptionBody<ExtensionCondition>.Version PostEventSubscriptionBody<ExtensionCondition>.Condition PostEventSubscriptionBody<ExtensionCondition>.Transport PostEventSubscriptionBody<ExtensionCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BitsTransactionSubscription : PostEventSubscriptionBody<ExtensionCondition> Constructors Name Description BitsTransactionSubscription(string, string, string) BitsTransactionSubscription(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.BroadcastEndedSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.BroadcastEndedSubscription.html",
    "title": "Class BroadcastEndedSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcastEndedSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcastEndedSubscription Inherited Members PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BroadcastEndedSubscription : PostEventSubscriptionBody<BroadcasterCondition> Constructors Name Description BroadcastEndedSubscription(string, string, string) BroadcastEndedSubscription(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.BroadcasterSubscriptionBase.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.BroadcasterSubscriptionBase.html",
    "title": "Class BroadcasterSubscriptionBase | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcasterSubscriptionBase Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase BanSubscription CampaignProgressSubscription CampaignStartSubscription CampaignStopSubscription CheerSubscription DonationSubscription GoalEndSubscription GoalProgressSubscription GoalStartSubscription HypetrainEndSubscription HypetrainProgressSubscription HypetrainStartSubscription ModeratorAddSubscription ModeratorRemoveSubscription PollEndSubscription PollProgressSubscription PollStartSubscription PredictionEndSubscription PredictionLockSubscription PredictionProgressSubscription PredictionStartSubscription RewardAddSubscription SubscribeSubscription SubscriptionEndSubscription SubscriptionGiftSubscription SubscriptionMessageSubscription UnbanSubscription Implements IScopedRequest Inherited Members PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class BroadcasterSubscriptionBase : PostEventSubscriptionBody<BroadcasterCondition>, IScopedRequest Constructors Name Description BroadcasterSubscriptionBase(string, string, string) BroadcasterSubscriptionBase(string, string) Properties Name Description Scopes Methods Name Description Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.BroadcastStartedSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.BroadcastStartedSubscription.html",
    "title": "Class BroadcastStartedSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class BroadcastStartedSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcastStartedSubscription Inherited Members PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class BroadcastStartedSubscription : PostEventSubscriptionBody<BroadcasterCondition> Constructors Name Description BroadcastStartedSubscription(string, string, string) BroadcastStartedSubscription(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.CampaignProgressSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.CampaignProgressSubscription.html",
    "title": "Class CampaignProgressSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignProgressSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase CampaignProgressSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CampaignProgressSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description CampaignProgressSubscription(string, string, string) CampaignProgressSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.CampaignStartSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.CampaignStartSubscription.html",
    "title": "Class CampaignStartSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignStartSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase CampaignStartSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CampaignStartSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description CampaignStartSubscription(string, string, string) CampaignStartSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.CampaignStopSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.CampaignStopSubscription.html",
    "title": "Class CampaignStopSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CampaignStopSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase CampaignStopSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CampaignStopSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description CampaignStopSubscription(string, string, string) CampaignStopSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ChannelUpdateSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ChannelUpdateSubscription.html",
    "title": "Class ChannelUpdateSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ChannelUpdateSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> ChannelUpdateSubscription Inherited Members PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ChannelUpdateSubscription : PostEventSubscriptionBody<BroadcasterCondition> Constructors Name Description ChannelUpdateSubscription(string, string, string) ChannelUpdateSubscription(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.CheerSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.CheerSubscription.html",
    "title": "Class CheerSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class CheerSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase CheerSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class CheerSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description CheerSubscription(string, string, string) CheerSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DeleteBanArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DeleteBanArgs.html",
    "title": "Class DeleteBanArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteBanArgs Inheritance object QueryMap DeleteBanArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DeleteBanArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose chat room the user is being banned from. ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes UserId The ID of the user to remove the ban or timeout from. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DeleteBlockArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DeleteBlockArgs.html",
    "title": "Class DeleteBlockArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteBlockArgs Inheritance object QueryMap DeleteBlockArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DeleteBlockArgs : QueryMap, IDictionary<string, string>, IScopedRequest Constructors Name Description DeleteBlockArgs() DeleteBlockArgs(string) Properties Name Description Scopes UserId The ID of the user to remove from the broadcasterâ€™s list of blocked users. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>) Operators Name Description implicit operator string(DeleteBlockArgs) implicit operator DeleteBlockArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DeleteBlockedTermsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DeleteBlockedTermsArgs.html",
    "title": "Class DeleteBlockedTermsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteBlockedTermsArgs Inheritance object QueryMap DeleteBlockedTermsArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DeleteBlockedTermsArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose blocked terms youâ€™re getting. ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes TermId The ID of the blocked term to remove from the broadcasterâ€™s list of blocked terms. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DeleteEventSubscriptionArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DeleteEventSubscriptionArgs.html",
    "title": "Class DeleteEventSubscriptionArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteEventSubscriptionArgs Inheritance object QueryMap DeleteEventSubscriptionArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DeleteEventSubscriptionArgs : QueryMap, IDictionary<string, string> Constructors Name Description DeleteEventSubscriptionArgs() DeleteEventSubscriptionArgs(string) Properties Name Description SubscriptionId The ID of the subscription to delete. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string(DeleteEventSubscriptionArgs) implicit operator DeleteEventSubscriptionArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DeleteMessageArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DeleteMessageArgs.html",
    "title": "Class DeleteMessageArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteMessageArgs Inheritance object QueryMap DeleteMessageArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DeleteMessageArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster that owns the chat room to remove messages from. MessageId The ID of the message to remove. ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DeleteRaidArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DeleteRaidArgs.html",
    "title": "Class DeleteRaidArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteRaidArgs Inheritance object QueryMap DeleteRaidArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DeleteRaidArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Constructors Name Description DeleteRaidArgs() DeleteRaidArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster that initiated the raid. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Operators Name Description implicit operator string(DeleteRaidArgs) implicit operator DeleteRaidArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DeleteVideosArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DeleteVideosArgs.html",
    "title": "Class DeleteVideosArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DeleteVideosArgs Inheritance object QueryMap DeleteVideosArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DeleteVideosArgs : QueryMap, IDictionary<string, string>, IScopedRequest Constructors Name Description DeleteVideosArgs() DeleteVideosArgs(params string[]) Properties Name Description Scopes VideoIds The collection of video ids to delete. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>) Operators Name Description implicit operator string[](DeleteVideosArgs) implicit operator DeleteVideosArgs(string[])"
  },
  "api/AuxLabs.Twitch.Rest.Requests.DonationSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.DonationSubscription.html",
    "title": "Class DonationSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class DonationSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase DonationSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class DonationSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description DonationSubscription(string, string, string) DonationSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.EntitlementGrantSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.EntitlementGrantSubscription.html",
    "title": "Class EntitlementGrantSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class EntitlementGrantSubscription Inheritance object PostEventSubscriptionBody<DropEntitlementCondition> EntitlementGrantSubscription Inherited Members PostEventSubscriptionBody<DropEntitlementCondition>.Type PostEventSubscriptionBody<DropEntitlementCondition>.Version PostEventSubscriptionBody<DropEntitlementCondition>.Condition PostEventSubscriptionBody<DropEntitlementCondition>.Transport PostEventSubscriptionBody<DropEntitlementCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class EntitlementGrantSubscription : PostEventSubscriptionBody<DropEntitlementCondition> Constructors Name Description EntitlementGrantSubscription(string, string, string, string, string) EntitlementGrantSubscription(string, string, string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.FollowSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.FollowSubscription.html",
    "title": "Class FollowSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class FollowSubscription Inheritance object PostEventSubscriptionBody<ModeratorCondition> ModeratorSubscriptionBase FollowSubscription Implements IScopedRequest Inherited Members ModeratorSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<ModeratorCondition>.Type PostEventSubscriptionBody<ModeratorCondition>.Version PostEventSubscriptionBody<ModeratorCondition>.Condition PostEventSubscriptionBody<ModeratorCondition>.Transport PostEventSubscriptionBody<ModeratorCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class FollowSubscription : ModeratorSubscriptionBase, IScopedRequest Constructors Name Description FollowSubscription(string, string, string, string) FollowSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetActiveExtensionsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetActiveExtensionsArgs.html",
    "title": "Class GetActiveExtensionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetActiveExtensionsArgs Inheritance object QueryMap GetActiveExtensionsArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetActiveExtensionsArgs : QueryMap, IDictionary<string, string>, IScopedRequest Constructors Name Description GetActiveExtensionsArgs() GetActiveExtensionsArgs(string) Properties Name Description Scopes UserId The ID of the user to remove from the broadcasterâ€™s list of blocked users. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>) Operators Name Description implicit operator string(GetActiveExtensionsArgs) implicit operator GetActiveExtensionsArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetAnalyticsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetAnalyticsArgs.html",
    "title": "Class GetAnalyticsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetAnalyticsArgs Inheritance object QueryMap GetAnalyticsArgs GetExtensionAnalyticsArgs GetGameAnalyticsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class GetAnalyticsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After EndedAt Optional, ending date/time for returned reports First The maximum number of items to return per page in the response. StartedAt Optional, starting date/time for returned reports Type Optional, type of analytics report that is returned Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBadgesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBadgesArgs.html",
    "title": "Class GetBadgesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBadgesArgs Inheritance object QueryMap GetBadgesArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBadgesArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetBadgesArgs() GetBadgesArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster whose chat badges you want to get. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string(GetBadgesArgs) implicit operator GetBadgesArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBannedUsersArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBannedUsersArgs.html",
    "title": "Class GetBannedUsersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBannedUsersArgs Inheritance object QueryMap GetBannedUsersArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBannedUsersArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After Before BroadcasterId The ID of the broadcaster whose list of banned users you want to get. First Scopes UserIds A list of user IDs used to filter the results. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBitsLeaderboardArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBitsLeaderboardArgs.html",
    "title": "Class GetBitsLeaderboardArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBitsLeaderboardArgs Inheritance object QueryMap GetBitsLeaderboardArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBitsLeaderboardArgs : QueryMap, IDictionary<string, string>, IScopedRequest Properties Name Description Count Optional, the number of results to return. Period Optional, the time period over which data is aggregated Scopes StartedAt Optional, the start date used for determining the aggregation period. UserId Optional, an ID that identifies a user that cheered bits in the channel. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBlockedTermsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBlockedTermsArgs.html",
    "title": "Class GetBlockedTermsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBlockedTermsArgs Inheritance object QueryMap GetBlockedTermsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBlockedTermsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster whose blocked terms youâ€™re getting. First ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBlocksArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBlocksArgs.html",
    "title": "Class GetBlocksArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBlocksArgs Inheritance object QueryMap GetBlocksArgs Implements IDictionary<, ><string, string> IPaginatedRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBlocksArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster whose list of blocked users you want to get. First Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBroadcastKeyArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBroadcastKeyArgs.html",
    "title": "Class GetBroadcastKeyArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBroadcastKeyArgs Inheritance object QueryMap GetBroadcastKeyArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBroadcastKeyArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Constructors Name Description GetBroadcastKeyArgs() GetBroadcastKeyArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster that owns the channel. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Operators Name Description implicit operator string(GetBroadcastKeyArgs) implicit operator GetBroadcastKeyArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBroadcastMarkersArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBroadcastMarkersArgs.html",
    "title": "Class GetBroadcastMarkersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBroadcastMarkersArgs Inheritance object QueryMap GetBroadcastMarkersArgs Implements IDictionary<, ><string, string> IPaginatedRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBroadcastMarkersArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IScopedRequest Properties Name Description After Before First The maximum number of items to return per page in the response. Scopes UserId A user ID. VideoId A video on demand (VOD)/video ID. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetBroadcastsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetBroadcastsArgs.html",
    "title": "Class GetBroadcastsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetBroadcastsArgs Inheritance object QueryMap GetBroadcastsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetBroadcastsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After Before First The maximum number of items to return per page in the response. GameIds A game (category) ID used to filter the list of streams. Languages A collection of ISO 639-1 two-letter language codes used to filter the list of streams. Type The type of stream to filter the list of streams by. UserIds A user ID used to filter the list of streams. UserNames A user login name used to filter the list of streams. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetChannelEditorsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetChannelEditorsArgs.html",
    "title": "Class GetChannelEditorsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetChannelEditorsArgs Inheritance object QueryMap GetChannelEditorsArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetChannelEditorsArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Constructors Name Description GetChannelEditorsArgs() GetChannelEditorsArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster that owns the channel. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Operators Name Description implicit operator string(GetChannelEditorsArgs) implicit operator GetChannelEditorsArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetChannelsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetChannelsArgs.html",
    "title": "Class GetChannelsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetChannelsArgs Inheritance object QueryMap GetChannelsArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetChannelsArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetChannelsArgs() GetChannelsArgs(params string[]) Properties Name Description ChannelIds A collection of IDs of the broadcasters whose channel you want to get. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string[](GetChannelsArgs) implicit operator GetChannelsArgs(string[])"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetChannelTeamsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetChannelTeamsArgs.html",
    "title": "Class GetChannelTeamsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetChannelTeamsArgs Inheritance object QueryMap GetChannelTeamsArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetChannelTeamsArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetChannelTeamsArgs() GetChannelTeamsArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster whose teams you want to get. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string(GetChannelTeamsArgs) implicit operator GetChannelTeamsArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetCharityCampaignArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetCharityCampaignArgs.html",
    "title": "Class GetCharityCampaignArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetCharityCampaignArgs Inheritance object QueryMap GetCharityCampaignArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetCharityCampaignArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Constructors Name Description GetCharityCampaignArgs() GetCharityCampaignArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster thatâ€™s currently running a charity campaign. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Operators Name Description implicit operator string(GetCharityCampaignArgs) implicit operator GetCharityCampaignArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetCharityDonationsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetCharityDonationsArgs.html",
    "title": "Class GetCharityDonationsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetCharityDonationsArgs Inheritance object QueryMap GetCharityDonationsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetCharityDonationsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster thatâ€™s currently running a charity campaign. First The maximum number of items to return per page in the response. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetChatSettingsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetChatSettingsArgs.html",
    "title": "Class GetChatSettingsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetChatSettingsArgs Inheritance object QueryMap GetChatSettingsArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetChatSettingsArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose chat settings you want to get. ModeratorId The ID of the broadcaster or one of the broadcasterâ€™s moderators. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetChattersArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetChattersArgs.html",
    "title": "Class GetChattersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetChattersArgs Inheritance object QueryMap GetChattersArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetChattersArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster whose list of chatters you want to get. First The maximum number of items to return per page in the response. ModeratorId The ID of the broadcaster or one of the broadcasterâ€™s moderators. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetCheermotesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetCheermotesArgs.html",
    "title": "Class GetCheermotesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetCheermotesArgs Inheritance object QueryMap GetCheermotesArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetCheermotesArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetCheermotesArgs() GetCheermotesArgs(string) Properties Name Description BroadcasterId Optional, the ID of the broadcaster that owns the channel. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string(GetCheermotesArgs) implicit operator GetCheermotesArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetClipsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetClipsArgs.html",
    "title": "Class GetClipsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetClipsArgs Inheritance object QueryMap GetClipsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetClipsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After Before BroadcasterId An ID that identifies the broadcaster whose video clips you want to get. ClipIds An ID that identifies the clip to get. EndedAt The end date used to filter clips. First The maximum number of items to return per page in the response. GameId An ID that identifies the game whose clips you want to get. StartedAt The start date used to filter clips. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetCurrentTrackArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetCurrentTrackArgs.html",
    "title": "Class GetCurrentTrackArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetCurrentTrackArgs Inheritance object QueryMap GetCurrentTrackArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetCurrentTrackArgs : QueryMap, IDictionary<string, string> Properties Name Description BroadcasterId The ID of the broadcaster thatâ€™s playing a Soundtrack track. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetDropStatusArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetDropStatusArgs.html",
    "title": "Class GetDropStatusArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetDropStatusArgs Inheritance object QueryMap GetDropStatusArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetDropStatusArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After EntitlementIds IDs that identify the entitlements to get. First The maximum number of items to return per page in the response. GameId An ID that identifies a game that offered entitlements. Status The entitlementâ€™s fulfillment status. UserId The ID of the user that owns the redemption code. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetEmotesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetEmotesArgs.html",
    "title": "Class GetEmotesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetEmotesArgs Inheritance object QueryMap GetEmotesArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetEmotesArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetEmotesArgs() GetEmotesArgs(string) Properties Name Description BroadcasterId An ID that identifies the broadcaster whose emotes you want to get. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string(GetEmotesArgs) implicit operator GetEmotesArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetEmoteSetsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetEmoteSetsArgs.html",
    "title": "Class GetEmoteSetsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetEmoteSetsArgs Inheritance object QueryMap GetEmoteSetsArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetEmoteSetsArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetEmoteSetsArgs() GetEmoteSetsArgs(params string[]) Properties Name Description EmoteSetIds A collection of IDs that identify the emote sets to get. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string[](GetEmoteSetsArgs) implicit operator GetEmoteSetsArgs(string[])"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetEventSubscriptionsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetEventSubscriptionsArgs.html",
    "title": "Class GetEventSubscriptionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetEventSubscriptionsArgs Inheritance object QueryMap GetEventSubscriptionsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetEventSubscriptionsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After Status Filter subscriptions by its status. Type Filter subscriptions by subscription type. UserId Filter subscriptions by user ID. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before IPaginatedRequest.First"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetExtensionAnalyticsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetExtensionAnalyticsArgs.html",
    "title": "Class GetExtensionAnalyticsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetExtensionAnalyticsArgs Inheritance object QueryMap GetAnalyticsArgs GetExtensionAnalyticsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IScopedRequest Inherited Members GetAnalyticsArgs.EndedAt GetAnalyticsArgs.StartedAt GetAnalyticsArgs.Type GetAnalyticsArgs.First GetAnalyticsArgs.After GetAnalyticsArgs.Validate() GetAnalyticsArgs.IPaginatedRequest.Before Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetExtensionAnalyticsArgs : GetAnalyticsArgs, IDictionary<string, string>, IPaginatedRequest, IScopedRequest Properties Name Description ExtensionId Optional, the extensionâ€™s client ID. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetExtensionTransactionsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetExtensionTransactionsArgs.html",
    "title": "Class GetExtensionTransactionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetExtensionTransactionsArgs Inheritance object QueryMap GetExtensionTransactionsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetExtensionTransactionsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After ExtensionId The ID of the extension whose list of transactions you want to get. First The maximum number of items to return per page in the response. TransactionIds Optional, a collection of transaction ids used to filter the list of transactions. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetFollowedBroadcastsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetFollowedBroadcastsArgs.html",
    "title": "Class GetFollowedBroadcastsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetFollowedBroadcastsArgs Inheritance object QueryMap GetFollowedBroadcastsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetFollowedBroadcastsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After First The maximum number of items to return per page in the response. Scopes UserId The ID of the user whose list of followed streams you want to get. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetFollowedChannelsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetFollowedChannelsArgs.html",
    "title": "Class GetFollowedChannelsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetFollowedChannelsArgs Inheritance object QueryMap GetFollowsArgs GetFollowedChannelsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Inherited Members GetFollowsArgs.Scopes GetFollowsArgs.UserId GetFollowsArgs.BroadcasterId GetFollowsArgs.First GetFollowsArgs.After GetFollowsArgs.Validate(IEnumerable<string>) GetFollowsArgs.IPaginatedRequest.Before Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetFollowedChannelsArgs : GetFollowsArgs, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetFollowersArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetFollowersArgs.html",
    "title": "Class GetFollowersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetFollowersArgs Inheritance object QueryMap GetFollowsArgs GetFollowersArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Inherited Members GetFollowsArgs.Scopes GetFollowsArgs.UserId GetFollowsArgs.BroadcasterId GetFollowsArgs.First GetFollowsArgs.After GetFollowsArgs.Validate(IEnumerable<string>) GetFollowsArgs.IPaginatedRequest.Before Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetFollowersArgs : GetFollowsArgs, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetFollowsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetFollowsArgs.html",
    "title": "Class GetFollowsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetFollowsArgs Inheritance object QueryMap GetFollowsArgs GetFollowedChannelsArgs GetFollowersArgs Implements IDictionary<, ><string, string> IPaginatedRequest IScopedRequest Inherited Members QueryMap.CreateQueryMap() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class GetFollowsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IScopedRequest Properties Name Description After BroadcasterId A broadcasterâ€™s ID. First Scopes UserId A userâ€™s ID. Methods Name Description Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetGameAnalyticsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetGameAnalyticsArgs.html",
    "title": "Class GetGameAnalyticsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetGameAnalyticsArgs Inheritance object QueryMap GetAnalyticsArgs GetGameAnalyticsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IScopedRequest Inherited Members GetAnalyticsArgs.EndedAt GetAnalyticsArgs.StartedAt GetAnalyticsArgs.Type GetAnalyticsArgs.First GetAnalyticsArgs.After GetAnalyticsArgs.Validate() GetAnalyticsArgs.IPaginatedRequest.Before Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetGameAnalyticsArgs : GetAnalyticsArgs, IDictionary<string, string>, IPaginatedRequest, IScopedRequest Properties Name Description GameId Optional, the game's client ID. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetGamesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetGamesArgs.html",
    "title": "Class GetGamesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetGamesArgs Inheritance object QueryMap GetGamesArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetGamesArgs : QueryMap, IDictionary<string, string> Properties Name Description GameIds The IDs of the category or game to get. GameNames The name of the categories or games to get. IgdbIds The IGDB IDs of the games to get. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetGoalsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetGoalsArgs.html",
    "title": "Class GetGoalsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetGoalsArgs Inheritance object QueryMap GetGoalsArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetGoalsArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Constructors Name Description GetGoalsArgs() GetGoalsArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster that created the goals. Scopes Methods Name Description CreateQueryMap() ToString() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Operators Name Description implicit operator string(GetGoalsArgs) implicit operator GetGoalsArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetHypeTrainsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetHypeTrainsArgs.html",
    "title": "Class GetHypeTrainsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetHypeTrainsArgs Inheritance object QueryMap GetHypeTrainsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetHypeTrainsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster thatâ€™s running the Hype Train. First The maximum number of items to return per page in the response. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetModeratorsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetModeratorsArgs.html",
    "title": "Class GetModeratorsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetModeratorsArgs Inheritance object QueryMap GetRolesArgs GetModeratorsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Inherited Members GetRolesArgs.BroadcasterId GetRolesArgs.UserIds GetRolesArgs.First GetRolesArgs.After GetRolesArgs.Validate() GetRolesArgs.CreateQueryMap() GetRolesArgs.IPaginatedRequest.Before Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetModeratorsArgs : GetRolesArgs, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description Scopes Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetPlaylistsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetPlaylistsArgs.html",
    "title": "Class GetPlaylistsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetPlaylistsArgs Inheritance object QueryMap GetPlaylistsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetPlaylistsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After First The maximum number of items to return per page in the response. PlaylistId The ID of the playlist to get. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetPlaylistTracksArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetPlaylistTracksArgs.html",
    "title": "Class GetPlaylistTracksArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetPlaylistTracksArgs Inheritance object QueryMap GetPlaylistTracksArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetPlaylistTracksArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After First The maximum number of items to return per page in the response. PlaylistId The ID of the playlist to get. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetPollsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetPollsArgs.html",
    "title": "Class GetPollsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetPollsArgs Inheritance object QueryMap GetPollsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetPollsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster that created the polls. First PollIds A list of IDs that identify the polls to return. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetPredictionsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetPredictionsArgs.html",
    "title": "Class GetPredictionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetPredictionsArgs Inheritance object QueryMap GetPredictionsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetPredictionsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster whose predictions you want to get. First PredictionIds The IDs of the predictions to get. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetRedemptionsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetRedemptionsArgs.html",
    "title": "Class GetRedemptionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetRedemptionsArgs Inheritance object QueryMap GetRedemptionsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetRedemptionsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After BroadcasterId The ID of the broadcaster that owns the custom reward. First The maximum number of items to return per page in the response. RedemptionIds A list of IDs to filter the redemptions by. RewardId The ID that identifies the custom reward whose redemptions you want to get. Scopes Sort The order to sort redemptions by. Status The status of the redemptions to return. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetRewardArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetRewardArgs.html",
    "title": "Class GetRewardArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetRewardArgs Inheritance object QueryMap GetRewardArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetRewardArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose custom rewards you want to get. CustomRewardIds A list of IDs to filter the rewards by. OnlyManagebleRewards Determines whether the response contains only the custom rewards that the app can manage. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetRolesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetRolesArgs.html",
    "title": "Class GetRolesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetRolesArgs Inheritance object QueryMap GetRolesArgs GetModeratorsArgs GetVipsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class GetRolesArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After BroadcasterId The ID of the broadcaster whose list of users you want to get. First UserIds A list of user IDs used to filter the results. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetScheduleArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetScheduleArgs.html",
    "title": "Class GetScheduleArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetScheduleArgs Inheritance object QueryMap GetScheduleArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetScheduleArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After BroadcasterId The ID of the broadcaster that owns the streaming schedule you want to get. First SegmentIds The IDs of the scheduled segments to return. StartAt The UTC date and time that identifies when in the broadcasterâ€™s schedule to start returning segments. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetShieldModeArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetShieldModeArgs.html",
    "title": "Class GetShieldModeArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetShieldModeArgs Inheritance object QueryMap PutShieldModeArgs GetShieldModeArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Inherited Members PutShieldModeArgs.BroadcasterId PutShieldModeArgs.ModeratorId PutShieldModeArgs.Validate(IEnumerable<string>, string) PutShieldModeArgs.Validate(IEnumerable<string>) PutShieldModeArgs.CreateQueryMap() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetShieldModeArgs : PutShieldModeArgs, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetSubscriberArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetSubscriberArgs.html",
    "title": "Class GetSubscriberArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetSubscriberArgs Inheritance object QueryMap GetSubscriberArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetSubscriberArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of a partner or affiliate broadcaster. Scopes UserId The ID of the user that youâ€™re checking to see whether they subscribe to BroadcasterId. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetSubscriptionsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetSubscriptionsArgs.html",
    "title": "Class GetSubscriptionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetSubscriptionsArgs Inheritance object QueryMap GetSubscriptionsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetSubscriptionsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description After Before BroadcasterId The broadcasterâ€™s ID. First The maximum number of items to return per page in the response. Scopes UserIds Filters the list to include only the specified subscribers. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetTeamArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetTeamArgs.html",
    "title": "Class GetTeamArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetTeamArgs Inheritance object QueryMap GetTeamArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetTeamArgs : QueryMap, IDictionary<string, string> Properties Name Description Id The name of the team to get. Name The ID of the team to get. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetTopGamesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetTopGamesArgs.html",
    "title": "Class GetTopGamesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetTopGamesArgs Inheritance object QueryMap GetTopGamesArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetTopGamesArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After Before First The maximum number of items to return per page in the response. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetUserColorArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetUserColorArgs.html",
    "title": "Class GetUserColorArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetUserColorArgs Inheritance object QueryMap GetUserColorArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetUserColorArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetUserColorArgs() GetUserColorArgs(params string[]) Properties Name Description UserIds A collection of IDs of the users whose color you want to get. Methods Name Description CreateQueryMap() Validate() Operators Name Description implicit operator string[](GetUserColorArgs) implicit operator GetUserColorArgs(string[])"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetUsersArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetUsersArgs.html",
    "title": "Class GetUsersArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetUsersArgs Inheritance object QueryMap GetUsersArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetUsersArgs : QueryMap, IDictionary<string, string> Constructors Name Description GetUsersArgs() GetUsersArgs(GetUsersMode, params string[]) Properties Name Description UserIds The ID of the user to get. UserNames The login name of the user to get. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetUsersMode.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetUsersMode.html",
    "title": "Enum GetUsersMode | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum GetUsersMode Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public enum GetUsersMode Fields Name Description Id Name"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetVideosArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetVideosArgs.html",
    "title": "Class GetVideosArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetVideosArgs Inheritance object QueryMap GetVideosArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetVideosArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After Before First GameId A category or game ID. Language Filter the list of videos by the language that the video owner broadcasts in. Period Filter the list of videos by when they were published. Sort The order to sort the returned videos in. Type Filter the list of videos by the videoâ€™s type. UserId The ID of the user whose list of videos you want to get. VideoIds A collection of IDs that identify the videos you want to get. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GetVipsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GetVipsArgs.html",
    "title": "Class GetVipsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GetVipsArgs Inheritance object QueryMap GetRolesArgs GetVipsArgs Implements IDictionary<, ><string, string> IPaginatedRequest IAgentRequest IScopedRequest Inherited Members GetRolesArgs.BroadcasterId GetRolesArgs.UserIds GetRolesArgs.First GetRolesArgs.After GetRolesArgs.Validate() GetRolesArgs.CreateQueryMap() GetRolesArgs.IPaginatedRequest.Before Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GetVipsArgs : GetRolesArgs, IDictionary<string, string>, IPaginatedRequest, IAgentRequest, IScopedRequest Properties Name Description Scopes Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GoalEndSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GoalEndSubscription.html",
    "title": "Class GoalEndSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GoalEndSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase GoalEndSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GoalEndSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description GoalEndSubscription(string, string, string) GoalEndSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GoalProgressSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GoalProgressSubscription.html",
    "title": "Class GoalProgressSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GoalProgressSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase GoalProgressSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GoalProgressSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description GoalProgressSubscription(string, string, string) GoalProgressSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.GoalStartSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.GoalStartSubscription.html",
    "title": "Class GoalStartSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class GoalStartSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase GoalStartSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class GoalStartSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description GoalStartSubscription(string, string, string) GoalStartSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.html",
    "title": "Namespace AuxLabs.Twitch.Rest.Requests | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.Rest.Requests Classes AuthorizationGrantedSubscription AuthorizationRevokedSubscription AuthorizationSubscriptionBase AutomodSettingsArgs BanSubscription BitsTransactionSubscription BroadcastEndedSubscription BroadcasterSubscriptionBase BroadcastStartedSubscription CampaignProgressSubscription CampaignStartSubscription CampaignStopSubscription ChannelUpdateSubscription CheerSubscription DeleteBanArgs DeleteBlockArgs DeleteBlockedTermsArgs DeleteEventSubscriptionArgs DeleteMessageArgs DeleteRaidArgs DeleteVideosArgs DonationSubscription EntitlementGrantSubscription FollowSubscription GetActiveExtensionsArgs GetAnalyticsArgs GetBadgesArgs GetBannedUsersArgs GetBitsLeaderboardArgs GetBlockedTermsArgs GetBlocksArgs GetBroadcastKeyArgs GetBroadcastMarkersArgs GetBroadcastsArgs GetChannelEditorsArgs GetChannelsArgs GetChannelTeamsArgs GetCharityCampaignArgs GetCharityDonationsArgs GetChatSettingsArgs GetChattersArgs GetCheermotesArgs GetClipsArgs GetCurrentTrackArgs GetDropStatusArgs GetEmotesArgs GetEmoteSetsArgs GetEventSubscriptionsArgs GetExtensionAnalyticsArgs GetExtensionTransactionsArgs GetFollowedBroadcastsArgs GetFollowedChannelsArgs GetFollowersArgs GetFollowsArgs GetGameAnalyticsArgs GetGamesArgs GetGoalsArgs GetHypeTrainsArgs GetModeratorsArgs GetPlaylistsArgs GetPlaylistTracksArgs GetPollsArgs GetPredictionsArgs GetRedemptionsArgs GetRewardArgs GetRolesArgs GetScheduleArgs GetShieldModeArgs GetSubscriberArgs GetSubscriptionsArgs GetTeamArgs GetTopGamesArgs GetUserColorArgs GetUsersArgs GetVideosArgs GetVipsArgs GoalEndSubscription GoalProgressSubscription GoalStartSubscription HypetrainEndSubscription HypetrainProgressSubscription HypetrainStartSubscription ManageModeratorArgs ManageRewardArgs ManageRolesArgs ManageSegmentArgs ManageVipArgs ModeratorAddSubscription ModeratorRemoveSubscription ModeratorSubscriptionBase ModifyRedemptionsArgs PatchChannelArgs PatchChannelBody PatchChatSettingsArgs PatchChatSettingsBody PatchDropsStatusArgs PatchPollBody PatchPredictionBody PatchScheduleArgs PatchSegmentBody PollEndSubscription PollProgressSubscription PollStartSubscription PostAnnouncementArgs PostAnnouncementBody PostAppAccessTokenArgs PostAutomodMessageArgs PostBanArgs PostBanBody PostBanUser PostBlockedTermArgs PostBlockedTermBody PostBroadcastMarkerBody PostClipArgs PostCommercialBody PostEnforcementStatusArgs PostEnforcementStatusBody PostEventSubscriptionBody<TCondition> PostPredictionBody PostRaidArgs PostRefreshTokenArgs PostRevokeTokenArgs PostRewardArgs PostRewardBody PostSegmentArgs PostSegmentBody PostShoutoutArgs PostUserAccessTokenArgs PostWhisperArgs PostWhisperBody PredictionEndSubscription PredictionLockSubscription PredictionProgressSubscription PredictionStartSubscription PutAutomodSettingsBody PutBlockArgs PutPollBody PutShieldModeArgs PutShieldModeBody PutUserArgs PutUserChatColorArgs RaidSubscription RedemptionAddSubscription RedemptionUpdateSubscription RewardAddSubscription RewardRemoveSubscription RewardSubscriptionBase RewardUpdateSubscription SearchCategoriesArgs SearchChannelsArgs ShieldModeEndSubscription ShieldModeStartSubscription ShoutoutCreateSubscription ShoutoutReceiveSubscription SubscribeSubscription SubscriptionEndSubscription SubscriptionGiftSubscription SubscriptionMessageSubscription UnbanSubscription UserUpdateSubscription Interfaces IAgentRequest IPaginatedRequest Indicates that a request can be paginated. IScopedRequest Indicates that a method requires special authentication to be used. Enums GetUsersMode"
  },
  "api/AuxLabs.Twitch.Rest.Requests.HypetrainEndSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.HypetrainEndSubscription.html",
    "title": "Class HypetrainEndSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypetrainEndSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase HypetrainEndSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class HypetrainEndSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description HypetrainEndSubscription(string, string, string) HypetrainEndSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.HypetrainProgressSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.HypetrainProgressSubscription.html",
    "title": "Class HypetrainProgressSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypetrainProgressSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase HypetrainProgressSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class HypetrainProgressSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description HypetrainProgressSubscription(string, string, string) HypetrainProgressSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.HypetrainStartSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.HypetrainStartSubscription.html",
    "title": "Class HypetrainStartSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class HypetrainStartSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase HypetrainStartSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class HypetrainStartSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description HypetrainStartSubscription(string, string, string) HypetrainStartSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.IAgentRequest.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.IAgentRequest.html",
    "title": "Interface IAgentRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IAgentRequest Inherited Members IScopedRequest.Scopes IScopedRequest.Validate(IEnumerable<string>) Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public interface IAgentRequest : IScopedRequest Methods Name Description Validate(IEnumerable<string>, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.IPaginatedRequest.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.IPaginatedRequest.html",
    "title": "Interface IPaginatedRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IPaginatedRequest Indicates that a request can be paginated. Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public interface IPaginatedRequest Properties Name Description After The cursor used to get the next page of results. Before The cursor used to get the previous page of results. First The maximum number of items to return per page in the response."
  },
  "api/AuxLabs.Twitch.Rest.Requests.IScopedRequest.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.IScopedRequest.html",
    "title": "Interface IScopedRequest | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IScopedRequest Indicates that a method requires special authentication to be used. Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public interface IScopedRequest Properties Name Description Scopes The scopes required for this request. Methods Name Description Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ManageModeratorArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ManageModeratorArgs.html",
    "title": "Class ManageModeratorArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ManageModeratorArgs Inheritance object QueryMap ManageRolesArgs ManageModeratorArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Inherited Members ManageRolesArgs.BroadcasterId ManageRolesArgs.UserId ManageRolesArgs.Validate() ManageRolesArgs.CreateQueryMap() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ManageModeratorArgs : ManageRolesArgs, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description Scopes Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ManageRewardArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ManageRewardArgs.html",
    "title": "Class ManageRewardArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ManageRewardArgs Inheritance object QueryMap ManageRewardArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ManageRewardArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster that created the custom reward. RewardId The ID of the custom reward to delete. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ManageRolesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ManageRolesArgs.html",
    "title": "Class ManageRolesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ManageRolesArgs Inheritance object QueryMap ManageRolesArgs ManageModeratorArgs ManageVipArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class ManageRolesArgs : QueryMap, IDictionary<string, string> Properties Name Description BroadcasterId The ID of the broadcaster that owns the chat room. UserId The ID of the user to add or remove a role from in the broadcasterâ€™s chat room. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ManageSegmentArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ManageSegmentArgs.html",
    "title": "Class ManageSegmentArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ManageSegmentArgs Inheritance object QueryMap ManageSegmentArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ManageSegmentArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster who owns the broadcast segment to update. Scopes SegmentId The ID of the broadcast segment to update. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ManageVipArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ManageVipArgs.html",
    "title": "Class ManageVipArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ManageVipArgs Inheritance object QueryMap ManageRolesArgs ManageVipArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Inherited Members ManageRolesArgs.BroadcasterId ManageRolesArgs.UserId ManageRolesArgs.Validate() ManageRolesArgs.CreateQueryMap() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ManageVipArgs : ManageRolesArgs, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description Scopes Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ModeratorAddSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ModeratorAddSubscription.html",
    "title": "Class ModeratorAddSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModeratorAddSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase ModeratorAddSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ModeratorAddSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description ModeratorAddSubscription(string, string, string) ModeratorAddSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ModeratorRemoveSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ModeratorRemoveSubscription.html",
    "title": "Class ModeratorRemoveSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModeratorRemoveSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase ModeratorRemoveSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ModeratorRemoveSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description ModeratorRemoveSubscription(string, string, string) ModeratorRemoveSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ModeratorSubscriptionBase.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ModeratorSubscriptionBase.html",
    "title": "Class ModeratorSubscriptionBase | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModeratorSubscriptionBase Inheritance object PostEventSubscriptionBody<ModeratorCondition> ModeratorSubscriptionBase FollowSubscription ShieldModeEndSubscription ShieldModeStartSubscription ShoutoutCreateSubscription ShoutoutReceiveSubscription Implements IScopedRequest Inherited Members PostEventSubscriptionBody<ModeratorCondition>.Type PostEventSubscriptionBody<ModeratorCondition>.Version PostEventSubscriptionBody<ModeratorCondition>.Condition PostEventSubscriptionBody<ModeratorCondition>.Transport PostEventSubscriptionBody<ModeratorCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class ModeratorSubscriptionBase : PostEventSubscriptionBody<ModeratorCondition>, IScopedRequest Constructors Name Description ModeratorSubscriptionBase(string, string, string, string) ModeratorSubscriptionBase(string, string, string) Properties Name Description Scopes Methods Name Description Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ModifyRedemptionsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ModifyRedemptionsArgs.html",
    "title": "Class ModifyRedemptionsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ModifyRedemptionsArgs Inheritance object QueryMap ModifyRedemptionsArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ModifyRedemptionsArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster that owns the custom reward. Ids A list of IDs to filter the redemptions by. RewardId The ID that identifies the custom reward whose redemptions you want to get. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchChannelArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchChannelArgs.html",
    "title": "Class PatchChannelArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchChannelArgs Inheritance object QueryMap PatchChannelArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchChannelArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose channel you want to update. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchChannelBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchChannelBody.html",
    "title": "Class PatchChannelBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchChannelBody Inheritance object PatchChannelBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchChannelBody Properties Name Description BroadcasterLanguage The userâ€™s preferred language. Set the value to an ISO 639-1 two-letter language code. Delay The number of seconds you want your broadcast buffered before streaming it live. GameId The ID of the game that the user plays. Tags A collection of channel-defined tags to apply to the channel. Title The title of the userâ€™s stream. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchChatSettingsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchChatSettingsArgs.html",
    "title": "Class PatchChatSettingsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchChatSettingsArgs Inheritance object QueryMap PatchChatSettingsArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchChatSettingsArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose chat settings you want to get. ModeratorId The ID of a user that has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody.html",
    "title": "Class PatchChatSettingsBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchChatSettingsBody Inheritance object PatchChatSettingsBody ChatSettings Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchChatSettingsBody Properties Name Description FollowerOnlyMinutes The length of time that users must follow the broadcaster before being able to participate in the chat. IsEmoteOnly Determines whether chat messages must contain only emotes. IsFollowerOnly Determines whether the broadcaster restricts the chat room to followers only. IsModeratorDelayed Determines whether the broadcaster adds a short delay before chat messages appear in the chat room. IsSlowEnabled Determines whether the broadcaster limits how often users in the chat room are allowed to send messages. IsSubscriberOnly Determines whether only users that subscribe to the broadcasterâ€™s channel may talk in the chat room. IsUniqueEnabled Determines whether the broadcaster requires users to post only unique messages in the chat room. ModeratorDelaySeconds The amount of time that messages are delayed before appearing in chat. SlowSeconds The amount of time that users must wait between sending messages. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchDropsStatusArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchDropsStatusArgs.html",
    "title": "Class PatchDropsStatusArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchDropsStatusArgs Inheritance object PatchDropsStatusArgs Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchDropsStatusArgs Properties Name Description EntitlementIds A list of IDs that identify the entitlements to update. Status The fulfillment status to set the entitlements to. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchPollBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchPollBody.html",
    "title": "Class PatchPollBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchPollBody Inheritance object PatchPollBody Implements IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchPollBody : IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster thatâ€™s running the poll. PollId The ID of the poll to update. Scopes Status The status to set the poll to. Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchPredictionBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchPredictionBody.html",
    "title": "Class PatchPredictionBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchPredictionBody Inheritance object PatchPredictionBody Implements IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchPredictionBody : IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster thatâ€™s running the prediction. PredictionId The ID of the prediction to update. Scopes Status The status to set the prediction to. WinningId The ID of the winning outcome. Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchScheduleArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchScheduleArgs.html",
    "title": "Class PatchScheduleArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchScheduleArgs Inheritance object QueryMap PatchScheduleArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchScheduleArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose schedule settings you want to update. IsVacationEnabled Indicates whether the broadcaster has scheduled a vacation. Scopes Timezone The time zone that the broadcaster broadcasts from. VacationEndsAt The UTC date and time of when the broadcasterâ€™s vacation ends. VacationStartsAt The UTC date and time of when the broadcasterâ€™s vacation starts. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.html",
    "title": "Class PatchSegmentBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PatchSegmentBody Inheritance object PatchSegmentBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PatchSegmentBody Properties Name Description CategoryId The ID of the category that best represents the broadcastâ€™s content. DurationMinutes The length of time that the broadcast is scheduled to run. IsCancelled Indicates whether the broadcast is canceled. StartsAt The date and time that the broadcast segment starts. Timezone The time zone that the broadcaster broadcasts from. Title The broadcastâ€™s title. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PollEndSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PollEndSubscription.html",
    "title": "Class PollEndSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollEndSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase PollEndSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PollEndSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description PollEndSubscription(string, string, string) PollEndSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PollProgressSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PollProgressSubscription.html",
    "title": "Class PollProgressSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollProgressSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase PollProgressSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PollProgressSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description PollProgressSubscription(string, string, string) PollProgressSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PollStartSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PollStartSubscription.html",
    "title": "Class PollStartSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PollStartSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase PollStartSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PollStartSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description PollStartSubscription(string, string, string) PollStartSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostAnnouncementArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostAnnouncementArgs.html",
    "title": "Class PostAnnouncementArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostAnnouncementArgs Inheritance object QueryMap PostAnnouncementArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostAnnouncementArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster that owns the chat room to send the announcement to. ModeratorId The ID of a user who has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostAnnouncementBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostAnnouncementBody.html",
    "title": "Class PostAnnouncementBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostAnnouncementBody Inheritance object PostAnnouncementBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostAnnouncementBody Properties Name Description Color The color used to highlight the announcement. Message The announcement to make in the broadcasterâ€™s chat room. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs.html",
    "title": "Class PostAppAccessTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostAppAccessTokenArgs Inheritance object QueryMap PostAppAccessTokenArgs PostRefreshTokenArgs PostUserAccessTokenArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostAppAccessTokenArgs : QueryMap, IDictionary<string, string> Properties Name Description ClientId Your appâ€™s registered client ID. ClientSecret Your appâ€™s registered client secret. GrantType Constant value, this is set internally. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostAutomodMessageArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostAutomodMessageArgs.html",
    "title": "Class PostAutomodMessageArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostAutomodMessageArgs Inheritance object QueryMap PostAutomodMessageArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostAutomodMessageArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description Action The action to take for the message. MessageId The ID of the message to allow or deny. Scopes UserId The moderator who is approving or denying the held message. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostBanArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostBanArgs.html",
    "title": "Class PostBanArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostBanArgs Inheritance object QueryMap PostBanArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostBanArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose chat room the user is being banned from. ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostBanBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostBanBody.html",
    "title": "Class PostBanBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostBanBody Inheritance object PostBanBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostBanBody Properties Name Description Bans Identifies the user and type of ban. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostBanUser.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostBanUser.html",
    "title": "Class PostBanUser | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostBanUser Inheritance object PostBanUser Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostBanUser Constructors Name Description PostBanUser() PostBanUser(string, int?, string) Properties Name Description DurationSeconds The timeout period. Reason The reason the youâ€™re banning the user or putting them in a timeout. UserId The ID of the user to ban or put in a timeout. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostBlockedTermArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostBlockedTermArgs.html",
    "title": "Class PostBlockedTermArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostBlockedTermArgs Inheritance object QueryMap PostBlockedTermArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostBlockedTermArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster whose blocked terms youâ€™re getting. ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostBlockedTermBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostBlockedTermBody.html",
    "title": "Class PostBlockedTermBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostBlockedTermBody Inheritance object PostBlockedTermBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostBlockedTermBody Constructors Name Description PostBlockedTermBody() PostBlockedTermBody(string) Properties Name Description Text The word or phrase to block from being used in the broadcasterâ€™s chat room. Methods Name Description ToString() Validate() Operators Name Description implicit operator string(PostBlockedTermBody) implicit operator PostBlockedTermBody(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostBroadcastMarkerBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostBroadcastMarkerBody.html",
    "title": "Class PostBroadcastMarkerBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostBroadcastMarkerBody Inheritance object PostBroadcastMarkerBody Implements IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostBroadcastMarkerBody : IAgentRequest, IScopedRequest Properties Name Description Description A short description of the marker to help the user remember why they marked the location. Scopes UserId The ID of the broadcaster thatâ€™s streaming content. Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostClipArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostClipArgs.html",
    "title": "Class PostClipArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostClipArgs Inheritance object QueryMap PostClipArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostClipArgs : QueryMap, IDictionary<string, string>, IScopedRequest Constructors Name Description PostClipArgs() PostClipArgs(string, bool?) Properties Name Description BroadcasterId The ID of the broadcaster whose stream you want to create a clip from. HasDelay Determines whether the API captures the clip at the moment the viewer requests it or after a delay. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>) Operators Name Description implicit operator string(PostClipArgs) implicit operator PostClipArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostCommercialBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostCommercialBody.html",
    "title": "Class PostCommercialBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostCommercialBody Inheritance object QueryMap PostCommercialBody Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostCommercialBody : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the partner or affiliate broadcaster that wants to run the commercial. Length Optional, the length of the commercial to run, in seconds. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostEnforcementStatusArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostEnforcementStatusArgs.html",
    "title": "Class PostEnforcementStatusArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostEnforcementStatusArgs Inheritance object QueryMap PostEnforcementStatusArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostEnforcementStatusArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Constructors Name Description PostEnforcementStatusArgs() PostEnforcementStatusArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster that owns the channel. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Operators Name Description implicit operator string(PostEnforcementStatusArgs) implicit operator PostEnforcementStatusArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostEnforcementStatusBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostEnforcementStatusBody.html",
    "title": "Class PostEnforcementStatusBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostEnforcementStatusBody Inheritance object PostEnforcementStatusBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostEnforcementStatusBody Properties Name Description Messages The list of messages to check. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html",
    "title": "Class PostEventSubscriptionBody<TCondition> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostEventSubscriptionBody<TCondition> Inheritance object PostEventSubscriptionBody<TCondition> AuthorizationSubscriptionBase BitsTransactionSubscription BroadcastEndedSubscription BroadcasterSubscriptionBase BroadcastStartedSubscription ChannelUpdateSubscription EntitlementGrantSubscription ModeratorSubscriptionBase RaidSubscription RewardSubscriptionBase UserUpdateSubscription Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostEventSubscriptionBody<TCondition> where TCondition : IEventCondition Type Parameters Name Description TCondition Constructors Name Description PostEventSubscriptionBody() PostEventSubscriptionBody(string, string) Constructor for webhook based event subscriptions PostEventSubscriptionBody(string) Constructor for websocket based event subscriptions. Properties Name Description Condition Parameter values that are specific to the specified subscription type. Transport The transport details that you want Twitch to use when sending you notifications. Type The type of subscription to create. Version The version number that identifies the definition of the subscription type that you want the response to use. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostPredictionBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostPredictionBody.html",
    "title": "Class PostPredictionBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostPredictionBody Inheritance object PostPredictionBody Implements IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostPredictionBody : IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster thatâ€™s running the prediction. Outcomes The list of possible outcomes that the viewers may choose from. PredictionDurationSeconds The length of time (in seconds) that the prediction will run for. Scopes Title The question that the broadcaster is asking. Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostRaidArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostRaidArgs.html",
    "title": "Class PostRaidArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRaidArgs Inheritance object QueryMap PostRaidArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostRaidArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description FromBroadcasterId The ID of the broadcaster thatâ€™s sending the raiding party. Scopes ToBroadcasterId The ID of the broadcaster to raid. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs.html",
    "title": "Class PostRefreshTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRefreshTokenArgs Inheritance object QueryMap PostAppAccessTokenArgs PostRefreshTokenArgs Implements IDictionary<, ><string, string> Inherited Members PostAppAccessTokenArgs.ClientId PostAppAccessTokenArgs.ClientSecret PostAppAccessTokenArgs.GrantType Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostRefreshTokenArgs : PostAppAccessTokenArgs, IDictionary<string, string> Constructors Name Description PostRefreshTokenArgs() Properties Name Description RefreshToken The refresh token issued to the client. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs.html",
    "title": "Class PostRevokeTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRevokeTokenArgs Inheritance object QueryMap PostRevokeTokenArgs Implements IDictionary<, ><string, string> Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostRevokeTokenArgs : QueryMap, IDictionary<string, string> Properties Name Description ClientId Your appâ€™s registered client ID. Token The access token to revoke. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostRewardArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostRewardArgs.html",
    "title": "Class PostRewardArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRewardArgs Inheritance object QueryMap PostRewardArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostRewardArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster to add the custom reward to. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostRewardBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostRewardBody.html",
    "title": "Class PostRewardBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostRewardBody Inheritance object PostRewardBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostRewardBody Properties Name Description BackgroundColor The background color to use for the reward. Cost The cost of the reward, in channel points. GlobalCooldownSeconds The cooldown period, in seconds. IsEnabled Determines whether the reward is enabled. IsGlobalCooldownEnabled Determines whether to apply a cooldown period between redemptions IsMaxPerStreamEnabled Determines whether to limit the maximum number of redemptions allowed per live stream. IsMaxPerUserEnabled Determines whether to limit the maximum number of redemptions allowed per user per stream IsUserInputRequired Determines whether the user needs to enter information when redeeming the reward. MaxPerStream The maximum number of redemptions allowed per live stream. MaxPerUser The maximum number of redemptions allowed per user per stream. Prompt The prompt shown to the viewer when they redeem the reward. ShouldSkipRequestQueue Determines whether redemptions should be set to fulfilled status immediately when a reward is redeemed. Title The custom rewardâ€™s title. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostSegmentArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostSegmentArgs.html",
    "title": "Class PostSegmentArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostSegmentArgs Inheritance object QueryMap PostSegmentArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostSegmentArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Constructors Name Description PostSegmentArgs() PostSegmentArgs(string) Properties Name Description BroadcasterId The ID of the broadcaster that owns the schedule to add the broadcast segment to. Scopes Methods Name Description CreateQueryMap() ToString() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>) Operators Name Description implicit operator string(PostSegmentArgs) implicit operator PostSegmentArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostSegmentBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostSegmentBody.html",
    "title": "Class PostSegmentBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostSegmentBody Inheritance object PostSegmentBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostSegmentBody Properties Name Description CategoryId The ID of the category that best represents the broadcastâ€™s content. DurationMinutes The length of time that the broadcast is scheduled to run. IsRecurring Determines whether the broadcast recurs weekly. StartsAt The date and time that the broadcast segment starts. Timezone The time zone that the broadcaster broadcasts from. Title The broadcastâ€™s title. Methods Name Description Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostShoutoutArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostShoutoutArgs.html",
    "title": "Class PostShoutoutArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostShoutoutArgs Inheritance object QueryMap PostShoutoutArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostShoutoutArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description FromBroadcasterId The ID of the broadcaster thatâ€™s sending the Shoutout. ModeratorId The ID of the broadcaster or a user that is one of the broadcasterâ€™s moderators. Scopes ToBroadcasterId The ID of the broadcaster thatâ€™s receiving the Shoutout. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs.html",
    "title": "Class PostUserAccessTokenArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostUserAccessTokenArgs Inheritance object QueryMap PostAppAccessTokenArgs PostUserAccessTokenArgs Implements IDictionary<, ><string, string> Inherited Members PostAppAccessTokenArgs.ClientId PostAppAccessTokenArgs.ClientSecret PostAppAccessTokenArgs.GrantType Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostUserAccessTokenArgs : PostAppAccessTokenArgs, IDictionary<string, string> Constructors Name Description PostUserAccessTokenArgs() Properties Name Description AuthorizationCode The code that the /authorize response returned in the code query parameter. RedirectUri Your appâ€™s registered redirect URI. Methods Name Description CreateQueryMap() Validate()"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostWhisperArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostWhisperArgs.html",
    "title": "Class PostWhisperArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostWhisperArgs Inheritance object QueryMap PostWhisperArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostWhisperArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description FromUserId The ID of the user sending the whisper. Scopes ToUserId The ID of the user to receive the whisper. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PostWhisperBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PostWhisperBody.html",
    "title": "Class PostWhisperBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PostWhisperBody Inheritance object PostWhisperBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PostWhisperBody Constructors Name Description PostWhisperBody() PostWhisperBody(string) Properties Name Description Message Methods Name Description ToString() Validate() Operators Name Description implicit operator string(PostWhisperBody) implicit operator PostWhisperBody(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PredictionEndSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PredictionEndSubscription.html",
    "title": "Class PredictionEndSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionEndSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase PredictionEndSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PredictionEndSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description PredictionEndSubscription(string, string, string) PredictionEndSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PredictionLockSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PredictionLockSubscription.html",
    "title": "Class PredictionLockSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionLockSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase PredictionLockSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PredictionLockSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description PredictionLockSubscription(string, string, string) PredictionLockSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PredictionProgressSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PredictionProgressSubscription.html",
    "title": "Class PredictionProgressSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionProgressSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase PredictionProgressSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PredictionProgressSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description PredictionProgressSubscription(string, string, string) PredictionProgressSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PredictionStartSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PredictionStartSubscription.html",
    "title": "Class PredictionStartSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PredictionStartSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase PredictionStartSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PredictionStartSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description PredictionStartSubscription(string, string, string) PredictionStartSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PutAutomodSettingsBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PutAutomodSettingsBody.html",
    "title": "Class PutAutomodSettingsBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutAutomodSettingsBody Inheritance object PutAutomodSettingsBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PutAutomodSettingsBody Properties Name Description Aggression The Automod level for hostility involving aggression. Bullying The Automod level for hostility involving name calling or insults. Disability The Automod level for discrimination against disability. Misogyny The Automod level for discrimination against women. OverallLevel The default AutoMod level for the broadcaster. RaceEthnicityOrReligion The Automod level for racial discrimination. SexBasedTerms The Automod level for sexual content. SexualitySexOrGender The AutoMod level for discrimination based on sexuality, sex, or gender. Swearing The Automod level for profanity."
  },
  "api/AuxLabs.Twitch.Rest.Requests.PutBlockArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PutBlockArgs.html",
    "title": "Class PutBlockArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutBlockArgs Inheritance object QueryMap PutBlockArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PutBlockArgs : QueryMap, IDictionary<string, string>, IScopedRequest Properties Name Description Context The location where the harassment took place that is causing the brodcaster to block the user. Reason The reason that the broadcaster is blocking the user. Scopes TargetUserId The ID of the user to block. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PutPollBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PutPollBody.html",
    "title": "Class PutPollBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutPollBody Inheritance object PutPollBody Implements IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PutPollBody : IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster thatâ€™s running the poll. ChannelPointsPerVote Optional. The number of points that the viewer must spend to cast one additional vote. Choices A list of choices that viewers may choose from. DurationSeconds The length of time that the poll will run for. IsChannelPointsVotingEnabled Optional. Indicates whether viewers may cast additional votes using Channel Points. Scopes Title The question that viewers will vote on. Methods Name Description Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PutShieldModeArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PutShieldModeArgs.html",
    "title": "Class PutShieldModeArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutShieldModeArgs Inheritance object QueryMap PutShieldModeArgs GetShieldModeArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PutShieldModeArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description BroadcasterId The ID of the broadcaster that owns the chat room to remove messages from. ModeratorId The ID of the broadcaster or a user that has permission to moderate the broadcasterâ€™s chat room. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PutShieldModeBody.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PutShieldModeBody.html",
    "title": "Class PutShieldModeBody | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutShieldModeBody Inheritance object PutShieldModeBody Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PutShieldModeBody Constructors Name Description PutShieldModeBody() PutShieldModeBody(bool) Properties Name Description IsActive Determines whether to activate Shield Mode. Operators Name Description implicit operator bool(PutShieldModeBody) implicit operator PutShieldModeBody(bool)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PutUserArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PutUserArgs.html",
    "title": "Class PutUserArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutUserArgs Inheritance object QueryMap PutUserArgs Implements IDictionary<, ><string, string> IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PutUserArgs : QueryMap, IDictionary<string, string>, IScopedRequest Constructors Name Description PutUserArgs() PutUserArgs(string) Properties Name Description Description The string to update the channelâ€™s description to. Scopes Methods Name Description CreateQueryMap() Validate(IEnumerable<string>) Operators Name Description implicit operator string(PutUserArgs) implicit operator PutUserArgs(string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.PutUserChatColorArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.PutUserChatColorArgs.html",
    "title": "Class PutUserChatColorArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class PutUserChatColorArgs Inheritance object QueryMap PutUserChatColorArgs Implements IDictionary<, ><string, string> IAgentRequest IScopedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class PutUserChatColorArgs : QueryMap, IDictionary<string, string>, IAgentRequest, IScopedRequest Properties Name Description Color The color to use for the userâ€™s name in chat. CustomColor Turbo and Prime users may specify a custom color. Scopes UserId The ID of the user whose chat color you want to update. Methods Name Description CreateQueryMap() Validate(IEnumerable<string>, string) Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.RaidSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.RaidSubscription.html",
    "title": "Class RaidSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RaidSubscription Inheritance object PostEventSubscriptionBody<RaidCondition> RaidSubscription Inherited Members PostEventSubscriptionBody<RaidCondition>.Type PostEventSubscriptionBody<RaidCondition>.Version PostEventSubscriptionBody<RaidCondition>.Condition PostEventSubscriptionBody<RaidCondition>.Transport PostEventSubscriptionBody<RaidCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RaidSubscription : PostEventSubscriptionBody<RaidCondition> Constructors Name Description RaidSubscription(RaidConditionType, string, string, string) RaidSubscription(RaidConditionType, string, string)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.RedemptionAddSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.RedemptionAddSubscription.html",
    "title": "Class RedemptionAddSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RedemptionAddSubscription Inheritance object PostEventSubscriptionBody<RewardCondition> RewardSubscriptionBase RedemptionAddSubscription Implements IScopedRequest Inherited Members RewardSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<RewardCondition>.Type PostEventSubscriptionBody<RewardCondition>.Version PostEventSubscriptionBody<RewardCondition>.Condition PostEventSubscriptionBody<RewardCondition>.Transport PostEventSubscriptionBody<RewardCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RedemptionAddSubscription : RewardSubscriptionBase, IScopedRequest Constructors Name Description RedemptionAddSubscription(string, string, string, string) RedemptionAddSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.RedemptionUpdateSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.RedemptionUpdateSubscription.html",
    "title": "Class RedemptionUpdateSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RedemptionUpdateSubscription Inheritance object PostEventSubscriptionBody<RewardCondition> RewardSubscriptionBase RedemptionUpdateSubscription Implements IScopedRequest Inherited Members RewardSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<RewardCondition>.Type PostEventSubscriptionBody<RewardCondition>.Version PostEventSubscriptionBody<RewardCondition>.Condition PostEventSubscriptionBody<RewardCondition>.Transport PostEventSubscriptionBody<RewardCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RedemptionUpdateSubscription : RewardSubscriptionBase, IScopedRequest Constructors Name Description RedemptionUpdateSubscription(string, string, string, string) RedemptionUpdateSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.RewardAddSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.RewardAddSubscription.html",
    "title": "Class RewardAddSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardAddSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase RewardAddSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RewardAddSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description RewardAddSubscription(string, string, string) RewardAddSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.RewardRemoveSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.RewardRemoveSubscription.html",
    "title": "Class RewardRemoveSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardRemoveSubscription Inheritance object PostEventSubscriptionBody<RewardCondition> RewardSubscriptionBase RewardRemoveSubscription Implements IScopedRequest Inherited Members RewardSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<RewardCondition>.Type PostEventSubscriptionBody<RewardCondition>.Version PostEventSubscriptionBody<RewardCondition>.Condition PostEventSubscriptionBody<RewardCondition>.Transport PostEventSubscriptionBody<RewardCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RewardRemoveSubscription : RewardSubscriptionBase, IScopedRequest Constructors Name Description RewardRemoveSubscription(string, string, string, string) RewardRemoveSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.RewardSubscriptionBase.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.RewardSubscriptionBase.html",
    "title": "Class RewardSubscriptionBase | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardSubscriptionBase Inheritance object PostEventSubscriptionBody<RewardCondition> RewardSubscriptionBase RedemptionAddSubscription RedemptionUpdateSubscription RewardRemoveSubscription RewardUpdateSubscription Implements IScopedRequest Inherited Members PostEventSubscriptionBody<RewardCondition>.Type PostEventSubscriptionBody<RewardCondition>.Version PostEventSubscriptionBody<RewardCondition>.Condition PostEventSubscriptionBody<RewardCondition>.Transport PostEventSubscriptionBody<RewardCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public abstract class RewardSubscriptionBase : PostEventSubscriptionBody<RewardCondition>, IScopedRequest Constructors Name Description RewardSubscriptionBase(string, string, string, string) RewardSubscriptionBase(string, string, string) Properties Name Description Scopes Methods Name Description Validate(IEnumerable<string>)"
  },
  "api/AuxLabs.Twitch.Rest.Requests.RewardUpdateSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.RewardUpdateSubscription.html",
    "title": "Class RewardUpdateSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RewardUpdateSubscription Inheritance object PostEventSubscriptionBody<RewardCondition> RewardSubscriptionBase RewardUpdateSubscription Implements IScopedRequest Inherited Members RewardSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<RewardCondition>.Type PostEventSubscriptionBody<RewardCondition>.Version PostEventSubscriptionBody<RewardCondition>.Condition PostEventSubscriptionBody<RewardCondition>.Transport PostEventSubscriptionBody<RewardCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class RewardUpdateSubscription : RewardSubscriptionBase, IScopedRequest Constructors Name Description RewardUpdateSubscription(string, string, string, string) RewardUpdateSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.SearchCategoriesArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.SearchCategoriesArgs.html",
    "title": "Class SearchCategoriesArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SearchCategoriesArgs Inheritance object QueryMap SearchCategoriesArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SearchCategoriesArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After First The maximum number of items to return per page in the response. Query The search string. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.SearchChannelsArgs.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.SearchChannelsArgs.html",
    "title": "Class SearchChannelsArgs | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SearchChannelsArgs Inheritance object QueryMap SearchChannelsArgs Implements IDictionary<, ><string, string> IPaginatedRequest Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SearchChannelsArgs : QueryMap, IDictionary<string, string>, IPaginatedRequest Properties Name Description After First The maximum number of items to return per page in the response. LiveOnly Determines whether the response includes only channels that are currently streaming live. Query The search string. Methods Name Description CreateQueryMap() Validate() Explicit Interface Implementations Name Description IPaginatedRequest.Before"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ShieldModeEndSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ShieldModeEndSubscription.html",
    "title": "Class ShieldModeEndSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldModeEndSubscription Inheritance object PostEventSubscriptionBody<ModeratorCondition> ModeratorSubscriptionBase ShieldModeEndSubscription Implements IScopedRequest Inherited Members ModeratorSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<ModeratorCondition>.Type PostEventSubscriptionBody<ModeratorCondition>.Version PostEventSubscriptionBody<ModeratorCondition>.Condition PostEventSubscriptionBody<ModeratorCondition>.Transport PostEventSubscriptionBody<ModeratorCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ShieldModeEndSubscription : ModeratorSubscriptionBase, IScopedRequest Constructors Name Description ShieldModeEndSubscription(string, string, string, string) ShieldModeEndSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ShieldModeStartSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ShieldModeStartSubscription.html",
    "title": "Class ShieldModeStartSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShieldModeStartSubscription Inheritance object PostEventSubscriptionBody<ModeratorCondition> ModeratorSubscriptionBase ShieldModeStartSubscription Implements IScopedRequest Inherited Members ModeratorSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<ModeratorCondition>.Type PostEventSubscriptionBody<ModeratorCondition>.Version PostEventSubscriptionBody<ModeratorCondition>.Condition PostEventSubscriptionBody<ModeratorCondition>.Transport PostEventSubscriptionBody<ModeratorCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ShieldModeStartSubscription : ModeratorSubscriptionBase, IScopedRequest Constructors Name Description ShieldModeStartSubscription(string, string, string, string) ShieldModeStartSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ShoutoutCreateSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ShoutoutCreateSubscription.html",
    "title": "Class ShoutoutCreateSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShoutoutCreateSubscription Inheritance object PostEventSubscriptionBody<ModeratorCondition> ModeratorSubscriptionBase ShoutoutCreateSubscription Implements IScopedRequest Inherited Members ModeratorSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<ModeratorCondition>.Type PostEventSubscriptionBody<ModeratorCondition>.Version PostEventSubscriptionBody<ModeratorCondition>.Condition PostEventSubscriptionBody<ModeratorCondition>.Transport PostEventSubscriptionBody<ModeratorCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ShoutoutCreateSubscription : ModeratorSubscriptionBase, IScopedRequest Constructors Name Description ShoutoutCreateSubscription(string, string, string, string) ShoutoutCreateSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.ShoutoutReceiveSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.ShoutoutReceiveSubscription.html",
    "title": "Class ShoutoutReceiveSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class ShoutoutReceiveSubscription Inheritance object PostEventSubscriptionBody<ModeratorCondition> ModeratorSubscriptionBase ShoutoutReceiveSubscription Implements IScopedRequest Inherited Members ModeratorSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<ModeratorCondition>.Type PostEventSubscriptionBody<ModeratorCondition>.Version PostEventSubscriptionBody<ModeratorCondition>.Condition PostEventSubscriptionBody<ModeratorCondition>.Transport PostEventSubscriptionBody<ModeratorCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class ShoutoutReceiveSubscription : ModeratorSubscriptionBase, IScopedRequest Constructors Name Description ShoutoutReceiveSubscription(string, string, string, string) ShoutoutReceiveSubscription(string, string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.SubscribeSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.SubscribeSubscription.html",
    "title": "Class SubscribeSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscribeSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase SubscribeSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SubscribeSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description SubscribeSubscription(string, string, string) SubscribeSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.SubscriptionEndSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.SubscriptionEndSubscription.html",
    "title": "Class SubscriptionEndSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionEndSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase SubscriptionEndSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SubscriptionEndSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description SubscriptionEndSubscription(string, string, string) SubscriptionEndSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.SubscriptionGiftSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.SubscriptionGiftSubscription.html",
    "title": "Class SubscriptionGiftSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionGiftSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase SubscriptionGiftSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SubscriptionGiftSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description SubscriptionGiftSubscription(string, string, string) SubscriptionGiftSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.SubscriptionMessageSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.SubscriptionMessageSubscription.html",
    "title": "Class SubscriptionMessageSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SubscriptionMessageSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase SubscriptionMessageSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class SubscriptionMessageSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description SubscriptionMessageSubscription(string, string, string) SubscriptionMessageSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.UnbanSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.UnbanSubscription.html",
    "title": "Class UnbanSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UnbanSubscription Inheritance object PostEventSubscriptionBody<BroadcasterCondition> BroadcasterSubscriptionBase UnbanSubscription Implements IScopedRequest Inherited Members BroadcasterSubscriptionBase.Validate(IEnumerable<string>) PostEventSubscriptionBody<BroadcasterCondition>.Type PostEventSubscriptionBody<BroadcasterCondition>.Version PostEventSubscriptionBody<BroadcasterCondition>.Condition PostEventSubscriptionBody<BroadcasterCondition>.Transport PostEventSubscriptionBody<BroadcasterCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class UnbanSubscription : BroadcasterSubscriptionBase, IScopedRequest Constructors Name Description UnbanSubscription(string, string, string) UnbanSubscription(string, string) Properties Name Description Scopes"
  },
  "api/AuxLabs.Twitch.Rest.Requests.UserUpdateSubscription.html": {
    "href": "api/AuxLabs.Twitch.Rest.Requests.UserUpdateSubscription.html",
    "title": "Class UserUpdateSubscription | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UserUpdateSubscription Inheritance object PostEventSubscriptionBody<UserCondition> UserUpdateSubscription Inherited Members PostEventSubscriptionBody<UserCondition>.Type PostEventSubscriptionBody<UserCondition>.Version PostEventSubscriptionBody<UserCondition>.Condition PostEventSubscriptionBody<UserCondition>.Transport PostEventSubscriptionBody<UserCondition>.Validate() Namespace: AuxLabs.Twitch.Rest.Requests Assembly: AuxLabs.Twitch.Rest.Api.dll Syntax public class UserUpdateSubscription : PostEventSubscriptionBody<UserCondition> Constructors Name Description UserUpdateSubscription(string, string, string) UserUpdateSubscription(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.TwitchRestClient.html": {
    "href": "api/AuxLabs.Twitch.Rest.TwitchRestClient.html",
    "title": "Class TwitchRestClient | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestClient Inheritance object TwitchRestClient Namespace: AuxLabs.Twitch.Rest Assembly: AuxLabs.Twitch.Rest.dll Syntax public class TwitchRestClient : IDisposable Constructors Name Description TwitchRestClient(TwitchRestConfig) TwitchRestClient(string, TwitchRestConfig) Properties Name Description Identity MyChannel MyUser Methods Name Description CreateEventSubscriptionAsync<TCondition>(Action<PostEventSubscriptionBody<TCondition>>) CreateEventSubscriptionAsync<TCondition>(PostEventSubscriptionBody<TCondition>) DeleteEventSubscriptionAsync(string) Dispose() Dispose(bool) GetBroadcastByIdAsync(string) GetBroadcastByNameAsync(string) GetBroadcastsAsync(string[], string[], string[], string[], int, CancellationToken?) GetBroadcastsByIdAsync(params string[]) GetBroadcastsByNameAsync(params string[]) GetChannelAsync(string) GetChannelEditors(string) GetChannelsAsync(params string[]) GetChatSettingsAsync(string, CancellationToken?) GetChattersAsync(string, int, CancellationToken?) GetCheermotesAsync(string) GetEmotesAsync(CancellationToken?) GetEmotesAsync(string, CancellationToken?) GetEmoteSetAsync(string, CancellationToken?) GetEmoteSetsAsync(string[], CancellationToken?) GetEmoteSetsAsync(params string[]) GetEventSubscriptionsAsync(string, EventSubStatus?, EventSubType?) GetExtensionTransactionsAsync(string, int, params string[]) GetExtensionTransactionsAsync(string, int) GetFollowedChannelAsync(string) GetFollowedChannelsAsync(int) GetFollowerAsync(string, string) GetFollowersAsync(string, int) GetMyChannelAsync() GetMyUserAsync() GetStreamKeyAsync() GetUserByIdAsync(string) GetUserByNameAsync(string) GetUserChatColorAsync(string, CancellationToken?) GetUserChatColorsAsync(string[], CancellationToken?) GetUserChatColorsAsync(params string[]) GetUsersByIdAsync(params string[]) GetUsersByNameAsync(params string[]) ModifyChatSettingsAsync(string, Action<PatchChatSettingsBody>, CancellationToken?) ModifyMyColorAsync(ChatColor, CancellationToken?) ModifyMyColorAsync(Color, CancellationToken?) ModifyMyUserAsync(string) SendAnnouncementAsync(string, string, AnnouncementColor?, CancellationToken?) SendShoutoutAsync(string, string, CancellationToken?) StartCommercialAsync(int) UpdateMyChannelAsync(Action<PatchChannelBody>) ValidateAsync() ValidateAsync(string, string)"
  },
  "api/AuxLabs.Twitch.Rest.TwitchRestConfig.html": {
    "href": "api/AuxLabs.Twitch.Rest.TwitchRestConfig.html",
    "title": "Class TwitchRestConfig | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestConfig Inheritance object TwitchRestApiConfig TwitchRestConfig Inherited Members TwitchRestApiConfig.ClientId TwitchRestApiConfig.ClientSecret Namespace: AuxLabs.Twitch.Rest Assembly: AuxLabs.Twitch.Rest.dll Syntax public class TwitchRestConfig : TwitchRestApiConfig Fields Name Description DownloadMyInformation Whether the client should automatically download information about the currently authenticated user after validation."
  },
  "api/AuxLabs.Twitch.RFCDateTimeConverter.html": {
    "href": "api/AuxLabs.Twitch.RFCDateTimeConverter.html",
    "title": "Class RFCDateTimeConverter | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class RFCDateTimeConverter Inheritance object RFCDateTimeConverter Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class RFCDateTimeConverter : JsonConverter<DateTime> Methods Name Description Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Write(Utf8JsonWriter, DateTime, JsonSerializerOptions)"
  },
  "api/AuxLabs.Twitch.SimpleReward.html": {
    "href": "api/AuxLabs.Twitch.SimpleReward.html",
    "title": "Class SimpleReward | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class SimpleReward Inheritance object SimpleReward Reward Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class SimpleReward Properties Name Description Cost The cost of the reward in channel points. Id The ID that uniquely identifies this custom reward. Prompt The prompt shown to the viewer when they redeem the reward if user input is required. Title The title of the reward."
  },
  "api/AuxLabs.Twitch.SubscriptionType.html": {
    "href": "api/AuxLabs.Twitch.SubscriptionType.html",
    "title": "Enum SubscriptionType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum SubscriptionType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum SubscriptionType Fields Name Description Prime Tier1 Tier2 Tier3"
  },
  "api/AuxLabs.Twitch.Title.html": {
    "href": "api/AuxLabs.Twitch.Title.html",
    "title": "Struct Title | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct Title Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public readonly struct Title Constructors Name Description Title(string) Properties Name Description Value Methods Name Description ToString() Operators Name Description implicit operator string(Title) implicit operator Title(string)"
  },
  "api/AuxLabs.Twitch.TokenType.html": {
    "href": "api/AuxLabs.Twitch.TokenType.html",
    "title": "Enum TokenType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum TokenType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum TokenType Fields Name Description Bearer None"
  },
  "api/AuxLabs.Twitch.TrackSourceType.html": {
    "href": "api/AuxLabs.Twitch.TrackSourceType.html",
    "title": "Enum TrackSourceType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum TrackSourceType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum TrackSourceType Fields Name Description Playlist Station"
  },
  "api/AuxLabs.Twitch.TransportMethod.html": {
    "href": "api/AuxLabs.Twitch.TransportMethod.html",
    "title": "Enum TransportMethod | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum TransportMethod Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum TransportMethod Fields Name Description Webhook WebSocket"
  },
  "api/AuxLabs.Twitch.TwitchConstants.html": {
    "href": "api/AuxLabs.Twitch.TwitchConstants.html",
    "title": "Class TwitchConstants | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchConstants Inheritance object TwitchConstants Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public static class TwitchConstants Fields Name Description AnonymousNamePrefix ChatIrcUrl ChatSecureIrcUrl ChatSecureWebSocketUrl ChatWebSocketUrl DefaultMaxPerPage EmoteImageUrl EventSubUrl GlobalRatelimitBucket PubSubUrl RestApiUrl RestIdentityApiUrl"
  },
  "api/AuxLabs.Twitch.TwitchException.html": {
    "href": "api/AuxLabs.Twitch.TwitchException.html",
    "title": "Class TwitchException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchException Inheritance object TwitchException TwitchChatException MissingScopeException TwitchRestException Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class TwitchException : Exception Constructors Name Description TwitchException() TwitchException(string)"
  },
  "api/AuxLabs.Twitch.TwitchImage.html": {
    "href": "api/AuxLabs.Twitch.TwitchImage.html",
    "title": "Struct TwitchImage | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Struct TwitchImage Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public struct TwitchImage Properties Name Description LargeImageUrl A URL to the large version (112px x 112px) of the image. MediumImageUrl A URL to the medium version (56px x 56px) of the image. SmallImageUrl A URL to the small version (28px x 28px) of the image."
  },
  "api/AuxLabs.Twitch.TwitchRestException.html": {
    "href": "api/AuxLabs.Twitch.TwitchRestException.html",
    "title": "Class TwitchRestException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchRestException Inheritance object TwitchException TwitchRestException Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class TwitchRestException : TwitchException Constructors Name Description TwitchRestException(HttpStatusCode, int?, string) Properties Name Description Code HttpCode Reason"
  },
  "api/AuxLabs.Twitch.UnexpectedTagsException.html": {
    "href": "api/AuxLabs.Twitch.UnexpectedTagsException.html",
    "title": "Class UnexpectedTagsException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class UnexpectedTagsException Inheritance object UnexpectedTagsException Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class UnexpectedTagsException : SerializationException Constructors Name Description UnexpectedTagsException(string, IDictionary<string, string>, Dictionary<string, string>) Properties Name Description EventName Expected Provided Unique"
  },
  "api/AuxLabs.Twitch.UserType.html": {
    "href": "api/AuxLabs.Twitch.UserType.html",
    "title": "Enum UserType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum UserType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum UserType Fields Name Description Admin GlobalModerator None Staff"
  },
  "api/AuxLabs.Twitch.VideoPeriod.html": {
    "href": "api/AuxLabs.Twitch.VideoPeriod.html",
    "title": "Enum VideoPeriod | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum VideoPeriod Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum VideoPeriod Fields Name Description All Day Month Week"
  },
  "api/AuxLabs.Twitch.VideoSort.html": {
    "href": "api/AuxLabs.Twitch.VideoSort.html",
    "title": "Enum VideoSort | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum VideoSort Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum VideoSort Fields Name Description Time Trending Views"
  },
  "api/AuxLabs.Twitch.VideoType.html": {
    "href": "api/AuxLabs.Twitch.VideoType.html",
    "title": "Enum VideoType | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum VideoType Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public enum VideoType Fields Name Description All Archive An on-demand video (VOD) of one of the broadcaster's past streams. Highlight A highlight reel of one of the broadcaster's past streams. Upload A video that the broadcaster uploaded to their video library."
  },
  "api/AuxLabs.Twitch.WebSocketClosedException.html": {
    "href": "api/AuxLabs.Twitch.WebSocketClosedException.html",
    "title": "Class WebSocketClosedException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WebSocketClosedException Inheritance object WebSocketClosedException Namespace: AuxLabs.Twitch Assembly: AuxLabs.Twitch.dll Syntax public class WebSocketClosedException : Exception Constructors Name Description WebSocketClosedException(int, string) Properties Name Description CloseCode Reason"
  },
  "api/AuxLabs.Twitch.WebSockets.ConnectionState.html": {
    "href": "api/AuxLabs.Twitch.WebSockets.ConnectionState.html",
    "title": "Enum ConnectionState | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Enum ConnectionState Namespace: AuxLabs.Twitch.WebSockets Assembly: AuxLabs.Twitch.WebSockets.dll Syntax public enum ConnectionState Fields Name Description Connected Connecting Disconnected Disconnecting"
  },
  "api/AuxLabs.Twitch.WebSockets.html": {
    "href": "api/AuxLabs.Twitch.WebSockets.html",
    "title": "Namespace AuxLabs.Twitch.WebSockets | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Namespace AuxLabs.Twitch.WebSockets Classes TwitchJsonSerializer<TPayload> WebSocketClosedException Interfaces IPayload ISerializer<TPayload> ISocketClient<TPayload> Enums ConnectionState"
  },
  "api/AuxLabs.Twitch.WebSockets.IPayload.html": {
    "href": "api/AuxLabs.Twitch.WebSockets.IPayload.html",
    "title": "Interface IPayload | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface IPayload Namespace: AuxLabs.Twitch.WebSockets Assembly: AuxLabs.Twitch.WebSockets.dll Syntax public interface IPayload Properties Name Description IsHelloEvent"
  },
  "api/AuxLabs.Twitch.WebSockets.ISerializer-1.html": {
    "href": "api/AuxLabs.Twitch.WebSockets.ISerializer-1.html",
    "title": "Interface ISerializer<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ISerializer<TPayload> Namespace: AuxLabs.Twitch.WebSockets Assembly: AuxLabs.Twitch.WebSockets.dll Syntax public interface ISerializer<TPayload> Type Parameters Name Description TPayload Methods Name Description Read(ref ReadOnlySpan<byte>) Write(TPayload)"
  },
  "api/AuxLabs.Twitch.WebSockets.ISocketClient-1.html": {
    "href": "api/AuxLabs.Twitch.WebSockets.ISocketClient-1.html",
    "title": "Interface ISocketClient<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Interface ISocketClient<TPayload> Namespace: AuxLabs.Twitch.WebSockets Assembly: AuxLabs.Twitch.WebSockets.dll Syntax public interface ISocketClient<TPayload> : IDisposable where TPayload : IPayload Type Parameters Name Description TPayload Properties Name Description State Methods Name Description Run(string) RunAsync(string) Send(TPayload) SendAsync(TPayload, CancellationToken) Stop() StopAsync() Events Name Description Connected Disconnected Heartbeat Identify PayloadReceived"
  },
  "api/AuxLabs.Twitch.WebSockets.TwitchJsonSerializer-1.html": {
    "href": "api/AuxLabs.Twitch.WebSockets.TwitchJsonSerializer-1.html",
    "title": "Class TwitchJsonSerializer<TPayload> | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class TwitchJsonSerializer<TPayload> Inheritance object TwitchJsonSerializer<TPayload> Implements ISerializer<TPayload> Namespace: AuxLabs.Twitch.WebSockets Assembly: AuxLabs.Twitch.WebSockets.dll Syntax public class TwitchJsonSerializer<TPayload> : ISerializer<TPayload> Type Parameters Name Description TPayload Constructors Name Description TwitchJsonSerializer(JsonSerializerOptions) Methods Name Description Read(ref ReadOnlySpan<byte>) Write(TPayload)"
  },
  "api/AuxLabs.Twitch.WebSockets.WebSocketClosedException.html": {
    "href": "api/AuxLabs.Twitch.WebSockets.WebSocketClosedException.html",
    "title": "Class WebSocketClosedException | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Class WebSocketClosedException Inheritance object WebSocketClosedException Namespace: AuxLabs.Twitch.WebSockets Assembly: AuxLabs.Twitch.WebSockets.dll Syntax public class WebSocketClosedException : Exception Constructors Name Description WebSocketClosedException(string, Exception, WebSocketCloseStatus, string) WebSocketClosedException(string, WebSocketCloseStatus, string) WebSocketClosedException(WebSocketCloseStatus, string) Properties Name Description CloseStatus Code Reason"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | AuxLabs.SimpleTwitch Documentation",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "guides/en/chat/init.html": {
    "href": "guides/en/chat/init.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/en/chat/ratelimits.html": {
    "href": "guides/en/chat/ratelimits.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/en/eventsub/init.html": {
    "href": "guides/en/eventsub/init.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/en/eventsub/ratelimits.html": {
    "href": "guides/en/eventsub/ratelimits.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/en/pubsub/init.html": {
    "href": "guides/en/pubsub/init.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/en/pubsub/ratelimits.html": {
    "href": "guides/en/pubsub/ratelimits.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/en/rest/init.html": {
    "href": "guides/en/rest/init.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/en/rest/ratelimits.html": {
    "href": "guides/en/rest/ratelimits.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "guides/index.html": {
    "href": "guides/index.html",
    "title": "Add your introductions here! | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Twitch | AuxLabs.SimpleTwitch Documentation",
    "keywords": "Twitch Twitch is an implementation of the Twitch Developer API that aims to reformat the data provided by these APIs into a more standardized structure where possible, present itself in a way that isn't overly complicated for a beginner to understand, and cover compatibility for modern platforms. Currently, only the base-level implementation is available via the *.Api libraries. Builds Release builds will be available through Nuget, and development builds are available publicly through Github Packages. Documentation The API reference, starter tutorials, and other documentation will be available at the documentation site. Samples For examples and sample projects look at the examples repository. Features Rest Implementation - [x] Global ratelimit handling - [ ] Unique endpoint ratelimit handling - [x] Check arguments for validity before requests - [x] Scope confirmation before requests - [x] Ability to implement a custom ratelimiter - [x] Ability to specify a custom rest api url - [ ] All endpoint categories progress - [x] 5/5 Identity - [x] 1/1 Ads - [x] 2/2 Analytics - [x] 3/3 Bits - [x] 3/3 Channels - [x] 6/6 Channel Points - [x] 2/2 Charity - [x] 12/12 Chat - [x] 2/2 Clips - [x] 4/4 Entitlements - [ ] 0/12 Extensions - [x] 3/3 EventSub - [x] 2/2 Games - [x] 1/1 Goals - [x] 1/1 Hype Trains - [x] 19/19 Moderation - [x] 3/3 Polls - [x] 3/3 Predictions - [x] 2/2 Raids - [x] 6/6 Schedule - [x] 2/2 Search - [x] 3/3 Music - [x] 5/5 Streams - [x] 2/2 Subscriptions - [x] 2/2 Teams - [x] 9/9 Users - [x] 2/2 Videos - [x] 1/1 Whispers Chat Implementation - [ ] Ratelimit handling - [x] Automatic heartbeat - [x] Automatic reconnection - [x] Auto-detect unhandled tags - [x] Provide a custom irc serializer - [x] Connect to a custom websocket chat url - [x] Authenticate anonymously - [x] Handle all available events - [x] Capability Acknowledged - [x] Capability Denied - [x] Chat Cleared - [x] Message Deleted - [x] Global User State - [x] Notice Received - [x] Message Received - [x] Room State Received - [x] User Notice Received - [x] User State Received - [x] Whisper Received - [x] Channel Joined - [x] Channel Left - [x] Names Received EventSub Implementation - [x] Subscribe/Unsubscribe/View subscriptions through Rest client - [ ] Ratelimits and Subscription Costs - [x] WebSocket client - [ ] WebHook client - [x] Automatic heartbeat - [x] Automatic reconnection - [x] Handle all available events - [x] Followers - [x] Subscriptions - [x] Bits Cheered - [x] Raids - [x] User Banned - [x] User Unbanned - [x] Moderators - [x] Rewards - [x] Redemptions - [x] Polls - [x] Predictions - [x] Charity Donations - [x] Charity Campaigns - [x] Drops Entitlements - [x] Extension Bits Transactions - [x] Goals - [x] Hype Trains - [x] Shield Mode - [x] Shoutouts - [x] Stream Status - [x] Authorization Granted/Revoked - [x] User Updated PubSub Implementation - [ ] Ratelimits - [x] Automatic heartbeat - [x] Automatic reconnection - [ ] Handle all available events - [ ] Bits - [ ] Bist Badge Unlocks - [ ] Channel Point Redemptions - [ ] Channel Subscriptions - [ ] Automod Queue - [ ] Moderator Actions - [ ] Low Trust User Status - [ ] Mdoerator Notifications - [ ] Whispers"
  }
}