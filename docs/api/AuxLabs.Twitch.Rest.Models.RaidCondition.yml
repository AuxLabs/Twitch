### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition
  commentId: T:AuxLabs.Twitch.Rest.Models.RaidCondition
  id: RaidCondition
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor
  - AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor(AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String)
  - AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId
  - AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit(AuxLabs.Twitch.Rest.Models.RaidCondition)~System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
  - AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit(System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String})~AuxLabs.Twitch.Rest.Models.RaidCondition
  - AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId
  langs:
  - csharp
  - vb
  name: RaidCondition
  nameWithType: RaidCondition
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RaidCondition
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: 'public class RaidCondition : IEventCondition'
    content.vb: Public Class RaidCondition Implements IEventCondition
  inheritance:
  - System.Object
  implements:
  - AuxLabs.Twitch.Rest.IEventCondition
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId
  id: FromBroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.RaidCondition
  langs:
  - csharp
  - vb
  name: FromBroadcasterId
  nameWithType: RaidCondition.FromBroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: FromBroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Optional. The broadcaster user ID that created the channel raid you want to get notifications for.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("from_broadcaster_user_id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string FromBroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("from_broadcaster_user_id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property FromBroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: from_broadcaster_user_id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId
  id: ToBroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.RaidCondition
  langs:
  - csharp
  - vb
  name: ToBroadcasterId
  nameWithType: RaidCondition.ToBroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ToBroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Optional. The broadcaster user ID that received the channel raid you want to get notifications for.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("to_broadcaster_user_id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string ToBroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("to_broadcaster_user_id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property ToBroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: to_broadcaster_user_id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor
  commentId: M:AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor
  id: '#ctor'
  parent: AuxLabs.Twitch.Rest.Models.RaidCondition
  langs:
  - csharp
  - vb
  name: RaidCondition()
  nameWithType: RaidCondition.RaidCondition()
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.RaidCondition()
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public RaidCondition()
    content.vb: Public Sub New()
  overload: AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor*
  nameWithType.vb: RaidCondition.New()
  fullName.vb: AuxLabs.Twitch.Rest.Models.RaidCondition.New()
  name.vb: New()
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor(AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String)
  commentId: M:AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor(AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String)
  id: '#ctor(AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String)'
  parent: AuxLabs.Twitch.Rest.Models.RaidCondition
  langs:
  - csharp
  - vb
  name: RaidCondition(RaidConditionType, string)
  nameWithType: RaidCondition.RaidCondition(RaidConditionType, string)
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.RaidCondition(AuxLabs.Twitch.Rest.Models.RaidConditionType, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public RaidCondition(RaidConditionType type, string broadcasterId)
    parameters:
    - id: type
      type: AuxLabs.Twitch.Rest.Models.RaidConditionType
    - id: broadcasterId
      type: System.String
    content.vb: Public Sub New(type As RaidConditionType, broadcasterId As String)
  overload: AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor*
  nameWithType.vb: RaidCondition.New(RaidConditionType, String)
  fullName.vb: AuxLabs.Twitch.Rest.Models.RaidCondition.New(AuxLabs.Twitch.Rest.Models.RaidConditionType, String)
  name.vb: New(RaidConditionType, String)
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit(AuxLabs.Twitch.Rest.Models.RaidCondition)~System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
  commentId: M:AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit(AuxLabs.Twitch.Rest.Models.RaidCondition)~System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
  id: op_Implicit(AuxLabs.Twitch.Rest.Models.RaidCondition)~System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
  parent: AuxLabs.Twitch.Rest.Models.RaidCondition
  langs:
  - csharp
  - vb
  name: implicit operator (RaidConditionType, string)(RaidCondition)
  nameWithType: RaidCondition.implicit operator (RaidConditionType, string)(RaidCondition)
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.implicit operator (AuxLabs.Twitch.Rest.Models.RaidConditionType, string)(AuxLabs.Twitch.Rest.Models.RaidCondition)
  type: Operator
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: op_Implicit
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public static implicit operator (RaidConditionType, string)(RaidCondition value)
    parameters:
    - id: value
      type: AuxLabs.Twitch.Rest.Models.RaidCondition
    return:
      type: System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
    content.vb: Public Shared Widening Operator CType(value As RaidCondition) As (RaidConditionType, String)
  overload: AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit*
  nameWithType.vb: RaidCondition.CType(RaidCondition)
  fullName.vb: AuxLabs.Twitch.Rest.Models.RaidCondition.CType(AuxLabs.Twitch.Rest.Models.RaidCondition)
  name.vb: CType(RaidCondition)
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit(System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String})~AuxLabs.Twitch.Rest.Models.RaidCondition
  commentId: M:AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit(System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String})~AuxLabs.Twitch.Rest.Models.RaidCondition
  id: op_Implicit(System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String})~AuxLabs.Twitch.Rest.Models.RaidCondition
  parent: AuxLabs.Twitch.Rest.Models.RaidCondition
  langs:
  - csharp
  - vb
  name: implicit operator RaidCondition((RaidConditionType, string))
  nameWithType: RaidCondition.implicit operator RaidCondition((RaidConditionType, string))
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.implicit operator AuxLabs.Twitch.Rest.Models.RaidCondition((AuxLabs.Twitch.Rest.Models.RaidConditionType, string))
  type: Operator
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: op_Implicit
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/RaidCondition.cs
    startLine: 30
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public static implicit operator RaidCondition((RaidConditionType, string) value)
    parameters:
    - id: value
      type: System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
    return:
      type: AuxLabs.Twitch.Rest.Models.RaidCondition
    content.vb: Public Shared Widening Operator CType(value As (RaidConditionType, String)) As RaidCondition
  overload: AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit*
  nameWithType.vb: RaidCondition.CType((RaidConditionType, String))
  fullName.vb: AuxLabs.Twitch.Rest.Models.RaidCondition.CType((AuxLabs.Twitch.Rest.Models.RaidConditionType, String))
  name.vb: CType((RaidConditionType, String))
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.IEventCondition
  commentId: T:AuxLabs.Twitch.Rest.IEventCondition
  parent: AuxLabs.Twitch.Rest
  href: AuxLabs.Twitch.Rest.IEventCondition.html
  name: IEventCondition
  nameWithType: IEventCondition
  fullName: AuxLabs.Twitch.Rest.IEventCondition
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest
  commentId: N:AuxLabs.Twitch.Rest
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest
  nameWithType: AuxLabs.Twitch.Rest
  fullName: AuxLabs.Twitch.Rest
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId
  href: AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId.html
  name: FromBroadcasterId
  nameWithType: RaidCondition.FromBroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.FromBroadcasterId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId
  href: AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId.html
  name: ToBroadcasterId
  nameWithType: RaidCondition.ToBroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.ToBroadcasterId
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor
  href: AuxLabs.Twitch.Rest.Models.RaidCondition.#ctor.html
  name: RaidCondition
  nameWithType: RaidCondition.RaidCondition
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.RaidCondition
  nameWithType.vb: RaidCondition.New
  fullName.vb: AuxLabs.Twitch.Rest.Models.RaidCondition.New
  name.vb: New
- uid: AuxLabs.Twitch.Rest.Models.RaidConditionType
  commentId: T:AuxLabs.Twitch.Rest.Models.RaidConditionType
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.RaidConditionType.html
  name: RaidConditionType
  nameWithType: RaidConditionType
  fullName: AuxLabs.Twitch.Rest.Models.RaidConditionType
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.RaidCondition.op_Implicit
  name: implicit operator
  nameWithType: RaidCondition.implicit operator
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition.implicit operator
  nameWithType.vb: RaidCondition.CType
  fullName.vb: AuxLabs.Twitch.Rest.Models.RaidCondition.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: AuxLabs.Twitch.Rest.Models.RaidCondition
  commentId: T:AuxLabs.Twitch.Rest.Models.RaidCondition
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.RaidCondition.html
  name: RaidCondition
  nameWithType: RaidCondition
  fullName: AuxLabs.Twitch.Rest.Models.RaidCondition
- uid: System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
  commentId: T:System.ValueTuple{AuxLabs.Twitch.Rest.Models.RaidConditionType,System.String}
  parent: System
  definition: System.ValueTuple`2
  href: AuxLabs.Twitch.Rest.Models.RaidConditionType.html
  name: (RaidConditionType, string)
  nameWithType: (RaidConditionType, string)
  fullName: (AuxLabs.Twitch.Rest.Models.RaidConditionType, string)
  nameWithType.vb: (RaidConditionType, String)
  fullName.vb: (AuxLabs.Twitch.Rest.Models.RaidConditionType, String)
  name.vb: (RaidConditionType, String)
  spec.csharp:
  - name: (
  - uid: AuxLabs.Twitch.Rest.Models.RaidConditionType
    name: RaidConditionType
    href: AuxLabs.Twitch.Rest.Models.RaidConditionType.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - name: (
  - uid: AuxLabs.Twitch.Rest.Models.RaidConditionType
    name: RaidConditionType
    href: AuxLabs.Twitch.Rest.Models.RaidConditionType.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
memberLayout: SeparatePages
