### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension
  commentId: T:AuxLabs.Twitch.Rest.Models.SimpleExtension
  id: SimpleExtension
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.SimpleExtension.Id
  - AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive
  - AuxLabs.Twitch.Rest.Models.SimpleExtension.Name
  - AuxLabs.Twitch.Rest.Models.SimpleExtension.Version
  langs:
  - csharp
  - vb
  name: SimpleExtension
  nameWithType: SimpleExtension
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SimpleExtension
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class SimpleExtension
    content.vb: Public Class SimpleExtension
  inheritance:
  - System.Object
  derivedClasses:
  - AuxLabs.Twitch.Rest.Models.ComponentExtension
  - AuxLabs.Twitch.Rest.Models.Extension
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleExtension.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.SimpleExtension
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SimpleExtension.Id
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies the extension.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleExtension.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.Version
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleExtension.Version
  id: Version
  parent: AuxLabs.Twitch.Rest.Models.SimpleExtension
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: SimpleExtension.Version
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.Version
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Version
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The extension’s version.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("version")]

      public string Version { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("version")>

      Public Property Version As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleExtension.Version*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: version
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.Name
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleExtension.Name
  id: Name
  parent: AuxLabs.Twitch.Rest.Models.SimpleExtension
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SimpleExtension.Name
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.Name
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Name
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The extension’s name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("name")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("name")>

      Public Property Name As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleExtension.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive
  id: IsActive
  parent: AuxLabs.Twitch.Rest.Models.SimpleExtension
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: SimpleExtension.IsActive
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsActive
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/SimpleExtension.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines the extension’s activation state.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("active")]

      public bool? IsActive { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("active")>

      Public Property IsActive As Boolean?
  overload: AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: active
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleExtension.Id
  href: AuxLabs.Twitch.Rest.Models.SimpleExtension.Id.html
  name: Id
  nameWithType: SimpleExtension.Id
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.Version*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleExtension.Version
  href: AuxLabs.Twitch.Rest.Models.SimpleExtension.Version.html
  name: Version
  nameWithType: SimpleExtension.Version
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.Version
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.Name*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleExtension.Name
  href: AuxLabs.Twitch.Rest.Models.SimpleExtension.Name.html
  name: Name
  nameWithType: SimpleExtension.Name
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.Name
- uid: AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive
  href: AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive.html
  name: IsActive
  nameWithType: SimpleExtension.IsActive
  fullName: AuxLabs.Twitch.Rest.Models.SimpleExtension.IsActive
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
