### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.SubscriptionType
  commentId: T:AuxLabs.Twitch.SubscriptionType
  id: SubscriptionType
  parent: AuxLabs.Twitch
  children:
  - AuxLabs.Twitch.SubscriptionType.Prime
  - AuxLabs.Twitch.SubscriptionType.Tier1
  - AuxLabs.Twitch.SubscriptionType.Tier2
  - AuxLabs.Twitch.SubscriptionType.Tier3
  langs:
  - csharp
  - vb
  name: SubscriptionType
  nameWithType: SubscriptionType
  fullName: AuxLabs.Twitch.SubscriptionType
  type: Enum
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SubscriptionType
    path: ../src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public enum SubscriptionType
    content.vb: Public Enum SubscriptionType
  extensionMethods:
  - AuxLabs.Twitch.SubscriptionType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
- uid: AuxLabs.Twitch.SubscriptionType.Prime
  commentId: F:AuxLabs.Twitch.SubscriptionType.Prime
  id: Prime
  parent: AuxLabs.Twitch.SubscriptionType
  langs:
  - csharp
  - vb
  name: Prime
  nameWithType: SubscriptionType.Prime
  fullName: AuxLabs.Twitch.SubscriptionType.Prime
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Prime
    path: ../src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "Prime")]

      Prime = 0
    return:
      type: AuxLabs.Twitch.SubscriptionType
    content.vb: >-
      <EnumMember(Value:="Prime")>

      Prime = 0
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: Prime
- uid: AuxLabs.Twitch.SubscriptionType.Tier1
  commentId: F:AuxLabs.Twitch.SubscriptionType.Tier1
  id: Tier1
  parent: AuxLabs.Twitch.SubscriptionType
  langs:
  - csharp
  - vb
  name: Tier1
  nameWithType: SubscriptionType.Tier1
  fullName: AuxLabs.Twitch.SubscriptionType.Tier1
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tier1
    path: ../src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "1000")]

      Tier1 = 1
    return:
      type: AuxLabs.Twitch.SubscriptionType
    content.vb: >-
      <EnumMember(Value:="1000")>

      Tier1 = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: "1000"
- uid: AuxLabs.Twitch.SubscriptionType.Tier2
  commentId: F:AuxLabs.Twitch.SubscriptionType.Tier2
  id: Tier2
  parent: AuxLabs.Twitch.SubscriptionType
  langs:
  - csharp
  - vb
  name: Tier2
  nameWithType: SubscriptionType.Tier2
  fullName: AuxLabs.Twitch.SubscriptionType.Tier2
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tier2
    path: ../src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "2000")]

      Tier2 = 2
    return:
      type: AuxLabs.Twitch.SubscriptionType
    content.vb: >-
      <EnumMember(Value:="2000")>

      Tier2 = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: "2000"
- uid: AuxLabs.Twitch.SubscriptionType.Tier3
  commentId: F:AuxLabs.Twitch.SubscriptionType.Tier3
  id: Tier3
  parent: AuxLabs.Twitch.SubscriptionType
  langs:
  - csharp
  - vb
  name: Tier3
  nameWithType: SubscriptionType.Tier3
  fullName: AuxLabs.Twitch.SubscriptionType.Tier3
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tier3
    path: ../src/AuxLabs.Twitch.Core/Models/SubscriptionType.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "3000")]

      Tier3 = 3
    return:
      type: AuxLabs.Twitch.SubscriptionType
    content.vb: >-
      <EnumMember(Value:="3000")>

      Tier3 = 3
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: "3000"
references:
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.SubscriptionType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  parent: AuxLabs.Twitch.EnumHelper
  definition: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.SubscriptionType).html
  name: GetStringValue<SubscriptionType>(SubscriptionType)
  nameWithType: EnumHelper.GetStringValue<SubscriptionType>(SubscriptionType)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<AuxLabs.Twitch.SubscriptionType>(AuxLabs.Twitch.SubscriptionType)
  nameWithType.vb: EnumHelper.GetStringValue(Of SubscriptionType)(SubscriptionType)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of AuxLabs.Twitch.SubscriptionType)(AuxLabs.Twitch.SubscriptionType)
  name.vb: GetStringValue(Of SubscriptionType)(SubscriptionType)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.SubscriptionType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.SubscriptionType).html
  - name: <
  - uid: AuxLabs.Twitch.SubscriptionType
    name: SubscriptionType
    href: AuxLabs.Twitch.SubscriptionType.html
  - name: '>'
  - name: (
  - uid: AuxLabs.Twitch.SubscriptionType
    name: SubscriptionType
    href: AuxLabs.Twitch.SubscriptionType.html
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.SubscriptionType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.SubscriptionType).html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.SubscriptionType
    name: SubscriptionType
    href: AuxLabs.Twitch.SubscriptionType.html
  - name: )
  - name: (
  - uid: AuxLabs.Twitch.SubscriptionType
    name: SubscriptionType
    href: AuxLabs.Twitch.SubscriptionType.html
  - name: )
- uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  name: GetStringValue<T>(T)
  nameWithType: EnumHelper.GetStringValue<T>(T)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<T>(T)
  nameWithType.vb: EnumHelper.GetStringValue(Of T)(T)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of T)(T)
  name.vb: GetStringValue(Of T)(T)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EnumHelper
  commentId: T:AuxLabs.Twitch.EnumHelper
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EnumHelper.html
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: AuxLabs.Twitch.EnumHelper
- uid: AuxLabs.Twitch.SubscriptionType
  commentId: T:AuxLabs.Twitch.SubscriptionType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.SubscriptionType.html
  name: SubscriptionType
  nameWithType: SubscriptionType
  fullName: AuxLabs.Twitch.SubscriptionType
memberLayout: SeparatePages
