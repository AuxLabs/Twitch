### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.EventSub.Models.Session
  commentId: T:AuxLabs.Twitch.EventSub.Models.Session
  id: Session
  parent: AuxLabs.Twitch.EventSub.Models
  children:
  - AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt
  - AuxLabs.Twitch.EventSub.Models.Session.Id
  - AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds
  - AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl
  - AuxLabs.Twitch.EventSub.Models.Session.Status
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: Session
  fullName: AuxLabs.Twitch.EventSub.Models.Session
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Session
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  syntax:
    content: public class Session
    content.vb: Public Class Session
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.EventSub.Models.Session.Id
  commentId: P:AuxLabs.Twitch.EventSub.Models.Session.Id
  id: Id
  parent: AuxLabs.Twitch.EventSub.Models.Session
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Session.Id
  fullName: AuxLabs.Twitch.EventSub.Models.Session.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: An ID that uniquely identifies this WebSocket connection.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.EventSub.Models.Session.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.EventSub.Models.Session.Status
  commentId: P:AuxLabs.Twitch.EventSub.Models.Session.Status
  id: Status
  parent: AuxLabs.Twitch.EventSub.Models.Session
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Session.Status
  fullName: AuxLabs.Twitch.EventSub.Models.Session.Status
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Status
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The connectionâ€™s status.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("status")]

      public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("status")>

      Public Property Status As String
  overload: AuxLabs.Twitch.EventSub.Models.Session.Status*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
- uid: AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds
  commentId: P:AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds
  id: KeepaliveTimeoutSeconds
  parent: AuxLabs.Twitch.EventSub.Models.Session
  langs:
  - csharp
  - vb
  name: KeepaliveTimeoutSeconds
  nameWithType: Session.KeepaliveTimeoutSeconds
  fullName: AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: KeepaliveTimeoutSeconds
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The maximum number of seconds that you should expect silence before receiving a keepalive message.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("keepalive_timeout_seconds")]

      public int? KeepaliveTimeoutSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("keepalive_timeout_seconds")>

      Public Property KeepaliveTimeoutSeconds As Integer?
  overload: AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: keepalive_timeout_seconds
- uid: AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl
  commentId: P:AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl
  id: ReconnectUrl
  parent: AuxLabs.Twitch.EventSub.Models.Session
  langs:
  - csharp
  - vb
  name: ReconnectUrl
  nameWithType: Session.ReconnectUrl
  fullName: AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ReconnectUrl
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The URL to reconnect to if you get a Reconnect message.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("reconnect_url")]

      public string ReconnectUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("reconnect_url")>

      Public Property ReconnectUrl As String
  overload: AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reconnect_url
- uid: AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt
  commentId: P:AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt
  id: ConnectedAt
  parent: AuxLabs.Twitch.EventSub.Models.Session
  langs:
  - csharp
  - vb
  name: ConnectedAt
  nameWithType: Session.ConnectedAt
  fullName: AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ConnectedAt
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Session.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The UTC date and time that the connection was created.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("connected_at")]

      public DateTime ConnectedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonPropertyName("connected_at")>

      Public Property ConnectedAt As Date
  overload: AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: connected_at
references:
- uid: AuxLabs.Twitch.EventSub.Models
  commentId: N:AuxLabs.Twitch.EventSub.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.EventSub.Models
  nameWithType: AuxLabs.Twitch.EventSub.Models
  fullName: AuxLabs.Twitch.EventSub.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.EventSub.Models.Session.Id*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.Session.Id
  href: AuxLabs.Twitch.EventSub.Models.Session.Id.html
  name: Id
  nameWithType: Session.Id
  fullName: AuxLabs.Twitch.EventSub.Models.Session.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.EventSub.Models.Session.Status*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.Session.Status
  href: AuxLabs.Twitch.EventSub.Models.Session.Status.html
  name: Status
  nameWithType: Session.Status
  fullName: AuxLabs.Twitch.EventSub.Models.Session.Status
- uid: AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds
  href: AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds.html
  name: KeepaliveTimeoutSeconds
  nameWithType: Session.KeepaliveTimeoutSeconds
  fullName: AuxLabs.Twitch.EventSub.Models.Session.KeepaliveTimeoutSeconds
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl
  href: AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl.html
  name: ReconnectUrl
  nameWithType: Session.ReconnectUrl
  fullName: AuxLabs.Twitch.EventSub.Models.Session.ReconnectUrl
- uid: AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt
  href: AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt.html
  name: ConnectedAt
  nameWithType: Session.ConnectedAt
  fullName: AuxLabs.Twitch.EventSub.Models.Session.ConnectedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
memberLayout: SeparatePages
