### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1
  commentId: T:AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1
  id: TwitchJsonSerializer`1
  parent: AuxLabs.Twitch.WebSockets
  children:
  - AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.#ctor(System.Text.Json.JsonSerializerOptions)
  - AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
  - AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Write(`0)
  langs:
  - csharp
  - vb
  name: TwitchJsonSerializer<TPayload>
  nameWithType: TwitchJsonSerializer<TPayload>
  fullName: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer<TPayload>
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TwitchJsonSerializer
    path: ../src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.WebSockets
  namespace: AuxLabs.Twitch.WebSockets
  syntax:
    content: 'public class TwitchJsonSerializer<TPayload> : ISerializer<TPayload>'
    typeParameters:
    - id: TPayload
    content.vb: Public Class TwitchJsonSerializer(Of TPayload) Implements ISerializer(Of TPayload)
  inheritance:
  - System.Object
  implements:
  - AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TwitchJsonSerializer(Of TPayload)
  fullName.vb: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer(Of TPayload)
  name.vb: TwitchJsonSerializer(Of TPayload)
- uid: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.#ctor(System.Text.Json.JsonSerializerOptions)
  commentId: M:AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.#ctor(System.Text.Json.JsonSerializerOptions)
  id: '#ctor(System.Text.Json.JsonSerializerOptions)'
  parent: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1
  langs:
  - csharp
  - vb
  name: TwitchJsonSerializer(JsonSerializerOptions)
  nameWithType: TwitchJsonSerializer<TPayload>.TwitchJsonSerializer(JsonSerializerOptions)
  fullName: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer<TPayload>.TwitchJsonSerializer(System.Text.Json.JsonSerializerOptions)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.WebSockets
  namespace: AuxLabs.Twitch.WebSockets
  syntax:
    content: public TwitchJsonSerializer(JsonSerializerOptions jsonSerializerOptions = null)
    parameters:
    - id: jsonSerializerOptions
      type: System.Text.Json.JsonSerializerOptions
    content.vb: Public Sub New(jsonSerializerOptions As JsonSerializerOptions = Nothing)
  overload: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.#ctor*
  nameWithType.vb: TwitchJsonSerializer(Of TPayload).New(JsonSerializerOptions)
  fullName.vb: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer(Of TPayload).New(System.Text.Json.JsonSerializerOptions)
  name.vb: New(JsonSerializerOptions)
- uid: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Write(`0)
  commentId: M:AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Write(`0)
  id: Write(`0)
  parent: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1
  langs:
  - csharp
  - vb
  name: Write(TPayload)
  nameWithType: TwitchJsonSerializer<TPayload>.Write(TPayload)
  fullName: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer<TPayload>.Write(TPayload)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Write
    path: ../src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.WebSockets
  namespace: AuxLabs.Twitch.WebSockets
  example: []
  syntax:
    content: public ReadOnlyMemory<byte> Write(TPayload payload)
    parameters:
    - id: payload
      type: '{TPayload}'
    return:
      type: System.ReadOnlyMemory{System.Byte}
    content.vb: Public Function Write(payload As TPayload) As ReadOnlyMemory(Of Byte)
  overload: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Write*
  implements:
  - AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}.Write({TPayload})
  nameWithType.vb: TwitchJsonSerializer(Of TPayload).Write(TPayload)
  fullName.vb: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer(Of TPayload).Write(TPayload)
- uid: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
  commentId: M:AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
  id: Read(System.ReadOnlySpan{System.Byte}@)
  parent: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1
  langs:
  - csharp
  - vb
  name: Read(ref ReadOnlySpan<byte>)
  nameWithType: TwitchJsonSerializer<TPayload>.Read(ref ReadOnlySpan<byte>)
  fullName: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer<TPayload>.Read(ref System.ReadOnlySpan<byte>)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Read
    path: ../src/AuxLabs.Twitch.WebSockets/Serialization/TwitchJsonSerializer.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.WebSockets
  namespace: AuxLabs.Twitch.WebSockets
  example: []
  syntax:
    content: public TPayload Read(ref ReadOnlySpan<byte> data)
    parameters:
    - id: data
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: '{TPayload}'
    content.vb: Public Function Read(data As ReadOnlySpan(Of Byte)) As TPayload
  overload: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Read*
  implements:
  - AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}.Read(System.ReadOnlySpan{System.Byte}@)
  nameWithType.vb: TwitchJsonSerializer(Of TPayload).Read(ReadOnlySpan(Of Byte))
  fullName.vb: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer(Of TPayload).Read(System.ReadOnlySpan(Of Byte))
  name.vb: Read(ReadOnlySpan(Of Byte))
references:
- uid: AuxLabs.Twitch.WebSockets
  commentId: N:AuxLabs.Twitch.WebSockets
  href: AuxLabs.html
  name: AuxLabs.Twitch.WebSockets
  nameWithType: AuxLabs.Twitch.WebSockets
  fullName: AuxLabs.Twitch.WebSockets
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.WebSockets
    name: WebSockets
    href: AuxLabs.Twitch.WebSockets.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.WebSockets
    name: WebSockets
    href: AuxLabs.Twitch.WebSockets.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}
  commentId: T:AuxLabs.Twitch.WebSockets.ISerializer{`0}
  parent: AuxLabs.Twitch.WebSockets
  definition: AuxLabs.Twitch.WebSockets.ISerializer`1
  href: AuxLabs.Twitch.WebSockets.ISerializer-1.html
  name: ISerializer<TPayload>
  nameWithType: ISerializer<TPayload>
  fullName: AuxLabs.Twitch.WebSockets.ISerializer<TPayload>
  nameWithType.vb: ISerializer(Of TPayload)
  fullName.vb: AuxLabs.Twitch.WebSockets.ISerializer(Of TPayload)
  name.vb: ISerializer(Of TPayload)
  spec.csharp:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1
    name: ISerializer
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.html
  - name: <
  - name: TPayload
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1
    name: ISerializer
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TPayload
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.WebSockets.ISerializer`1
  commentId: T:AuxLabs.Twitch.WebSockets.ISerializer`1
  href: AuxLabs.Twitch.WebSockets.ISerializer-1.html
  name: ISerializer<TPayload>
  nameWithType: ISerializer<TPayload>
  fullName: AuxLabs.Twitch.WebSockets.ISerializer<TPayload>
  nameWithType.vb: ISerializer(Of TPayload)
  fullName.vb: AuxLabs.Twitch.WebSockets.ISerializer(Of TPayload)
  name.vb: ISerializer(Of TPayload)
  spec.csharp:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1
    name: ISerializer
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.html
  - name: <
  - name: TPayload
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1
    name: ISerializer
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TPayload
  - name: )
- uid: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.#ctor*
  commentId: Overload:AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.#ctor
  href: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer-1.#ctor(System.Text.Json.JsonSerializerOptions).html
  name: TwitchJsonSerializer
  nameWithType: TwitchJsonSerializer<TPayload>.TwitchJsonSerializer
  fullName: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer<TPayload>.TwitchJsonSerializer
  nameWithType.vb: TwitchJsonSerializer(Of TPayload).New
  fullName.vb: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer(Of TPayload).New
  name.vb: New
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Write*
  commentId: Overload:AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Write
  href: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer-1.Write(-0).html
  name: Write
  nameWithType: TwitchJsonSerializer<TPayload>.Write
  fullName: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer<TPayload>.Write
  nameWithType.vb: TwitchJsonSerializer(Of TPayload).Write
  fullName.vb: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer(Of TPayload).Write
- uid: AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}.Write({TPayload})
  commentId: M:AuxLabs.Twitch.WebSockets.ISerializer{`0}.Write(`0)
  parent: AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}
  definition: AuxLabs.Twitch.WebSockets.ISerializer`1.Write(`0)
  href: AuxLabs.Twitch.WebSockets.ISerializer{-0}.Write(-0).html
  name: Write(TPayload)
  nameWithType: ISerializer<TPayload>.Write(TPayload)
  fullName: AuxLabs.Twitch.WebSockets.ISerializer<TPayload>.Write(TPayload)
  nameWithType.vb: ISerializer(Of TPayload).Write(TPayload)
  fullName.vb: AuxLabs.Twitch.WebSockets.ISerializer(Of TPayload).Write(TPayload)
  spec.csharp:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer{`0}.Write(`0)
    name: Write
    href: AuxLabs.Twitch.WebSockets.ISerializer{-0}.Write(-0).html
  - name: (
  - name: TPayload
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer{`0}.Write(`0)
    name: Write
    href: AuxLabs.Twitch.WebSockets.ISerializer{-0}.Write(-0).html
  - name: (
  - name: TPayload
  - name: )
- uid: '{TPayload}'
  commentId: '!:TPayload'
  definition: TPayload
  name: TPayload
  nameWithType: TPayload
  fullName: TPayload
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: AuxLabs.Twitch.WebSockets.ISerializer`1.Write(`0)
  commentId: M:AuxLabs.Twitch.WebSockets.ISerializer`1.Write(`0)
  href: AuxLabs.Twitch.WebSockets.ISerializer-1.Write(-0).html
  name: Write(TPayload)
  nameWithType: ISerializer<TPayload>.Write(TPayload)
  fullName: AuxLabs.Twitch.WebSockets.ISerializer<TPayload>.Write(TPayload)
  nameWithType.vb: ISerializer(Of TPayload).Write(TPayload)
  fullName.vb: AuxLabs.Twitch.WebSockets.ISerializer(Of TPayload).Write(TPayload)
  spec.csharp:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1.Write(`0)
    name: Write
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.Write(-0).html
  - name: (
  - name: TPayload
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1.Write(`0)
    name: Write
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.Write(-0).html
  - name: (
  - name: TPayload
  - name: )
- uid: TPayload
  name: TPayload
  nameWithType: TPayload
  fullName: TPayload
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Read*
  commentId: Overload:AuxLabs.Twitch.WebSockets.TwitchJsonSerializer`1.Read
  href: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer-1.Read(System.ReadOnlySpan{System.Byte}@).html
  name: Read
  nameWithType: TwitchJsonSerializer<TPayload>.Read
  fullName: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer<TPayload>.Read
  nameWithType.vb: TwitchJsonSerializer(Of TPayload).Read
  fullName.vb: AuxLabs.Twitch.WebSockets.TwitchJsonSerializer(Of TPayload).Read
- uid: AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}.Read(System.ReadOnlySpan{System.Byte}@)
  commentId: M:AuxLabs.Twitch.WebSockets.ISerializer{`0}.Read(System.ReadOnlySpan{System.Byte}@)
  parent: AuxLabs.Twitch.WebSockets.ISerializer{{TPayload}}
  definition: AuxLabs.Twitch.WebSockets.ISerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
  href: AuxLabs.Twitch.WebSockets.ISerializer{-0}.Read(System.ReadOnlySpan{System.Byte}@).html
  name: Read(ref ReadOnlySpan<byte>)
  nameWithType: ISerializer<TPayload>.Read(ref ReadOnlySpan<byte>)
  fullName: AuxLabs.Twitch.WebSockets.ISerializer<TPayload>.Read(ref System.ReadOnlySpan<byte>)
  nameWithType.vb: ISerializer(Of TPayload).Read(ReadOnlySpan(Of Byte))
  fullName.vb: AuxLabs.Twitch.WebSockets.ISerializer(Of TPayload).Read(System.ReadOnlySpan(Of Byte))
  name.vb: Read(ReadOnlySpan(Of Byte))
  spec.csharp:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer{`0}.Read(System.ReadOnlySpan{System.Byte}@)
    name: Read
    href: AuxLabs.Twitch.WebSockets.ISerializer{-0}.Read(System.ReadOnlySpan{System.Byte}@).html
  - name: (
  - name: ref
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer{`0}.Read(System.ReadOnlySpan{System.Byte}@)
    name: Read
    href: AuxLabs.Twitch.WebSockets.ISerializer{-0}.Read(System.ReadOnlySpan{System.Byte}@).html
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: AuxLabs.Twitch.WebSockets.ISerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
  commentId: M:AuxLabs.Twitch.WebSockets.ISerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
  isExternal: true
  href: AuxLabs.Twitch.WebSockets.ISerializer-1.Read(System.ReadOnlySpan{System.Byte}@).html
  name: Read(ref ReadOnlySpan<byte>)
  nameWithType: ISerializer<TPayload>.Read(ref ReadOnlySpan<byte>)
  fullName: AuxLabs.Twitch.WebSockets.ISerializer<TPayload>.Read(ref System.ReadOnlySpan<byte>)
  nameWithType.vb: ISerializer(Of TPayload).Read(ReadOnlySpan(Of Byte))
  fullName.vb: AuxLabs.Twitch.WebSockets.ISerializer(Of TPayload).Read(System.ReadOnlySpan(Of Byte))
  name.vb: Read(ReadOnlySpan(Of Byte))
  spec.csharp:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
    name: Read
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.Read(System.ReadOnlySpan{System.Byte}@).html
  - name: (
  - name: ref
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.WebSockets.ISerializer`1.Read(System.ReadOnlySpan{System.Byte}@)
    name: Read
    href: AuxLabs.Twitch.WebSockets.ISerializer-1.Read(System.ReadOnlySpan{System.Byte}@).html
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
