### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote
  commentId: T:AuxLabs.Twitch.Rest.Models.GlobalEmote
  id: GlobalEmote
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  langs:
  - csharp
  - vb
  name: GlobalEmote
  nameWithType: GlobalEmote
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GlobalEmote
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class GlobalEmote
    content.vb: Public Class GlobalEmote
  inheritance:
  - System.Object
  derivedClasses:
  - AuxLabs.Twitch.Rest.Models.Emote
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: GlobalEmote.Id
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies this emote.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  id: Name
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GlobalEmote.Name
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Name
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The name of the emote.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("name")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("name")>

      Public Property Name As String
  overload: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  id: Images
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  langs:
  - csharp
  - vb
  name: Images
  nameWithType: GlobalEmote.Images
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Images
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The image URLs for the emote.
  remarks: These image URLs always provide a static, non-animated emote image with a light background.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("images")]

      public TwitchImage Images { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.TwitchImage
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("images")>

      Public Property Images As TwitchImage
  overload: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: images
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  id: Formats
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  langs:
  - csharp
  - vb
  name: Formats
  nameWithType: GlobalEmote.Formats
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Formats
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The formats that the emote is available in.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("format")]

      public IReadOnlyCollection<EmoteFormat> Formats { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteFormat}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("format")>

      Public Property Formats As IReadOnlyCollection(Of EmoteFormat)
  overload: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: format
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  id: Scales
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  langs:
  - csharp
  - vb
  name: Scales
  nameWithType: GlobalEmote.Scales
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Scales
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The sizes that the emote is available in.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("scale")]

      public IReadOnlyCollection<EmoteScale> Scales { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteScale}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("scale")>

      Public Property Scales As IReadOnlyCollection(Of EmoteScale)
  overload: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scale
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  id: Themes
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  langs:
  - csharp
  - vb
  name: Themes
  nameWithType: GlobalEmote.Themes
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Themes
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/GlobalEmote.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The background themes that the emote is available in.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("theme_mode")]

      public IReadOnlyCollection<EmoteTheme> Themes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteTheme}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("theme_mode")>

      Public Property Themes As IReadOnlyCollection(Of EmoteTheme)
  overload: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: theme_mode
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id.html
  name: Id
  nameWithType: GlobalEmote.Id
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name.html
  name: Name
  nameWithType: GlobalEmote.Name
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images.html
  name: Images
  nameWithType: GlobalEmote.Images
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
- uid: AuxLabs.Twitch.TwitchImage
  commentId: T:AuxLabs.Twitch.TwitchImage
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.TwitchImage.html
  name: TwitchImage
  nameWithType: TwitchImage
  fullName: AuxLabs.Twitch.TwitchImage
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats.html
  name: Formats
  nameWithType: GlobalEmote.Formats
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteFormat}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteFormat}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<EmoteFormat>
  nameWithType: IReadOnlyCollection<EmoteFormat>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.EmoteFormat>
  nameWithType.vb: IReadOnlyCollection(Of EmoteFormat)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.EmoteFormat)
  name.vb: IReadOnlyCollection(Of EmoteFormat)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.EmoteFormat
    name: EmoteFormat
    href: AuxLabs.Twitch.EmoteFormat.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.EmoteFormat
    name: EmoteFormat
    href: AuxLabs.Twitch.EmoteFormat.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales.html
  name: Scales
  nameWithType: GlobalEmote.Scales
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteScale}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteScale}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<EmoteScale>
  nameWithType: IReadOnlyCollection<EmoteScale>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.EmoteScale>
  nameWithType.vb: IReadOnlyCollection(Of EmoteScale)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.EmoteScale)
  name.vb: IReadOnlyCollection(Of EmoteScale)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.EmoteScale
    name: EmoteScale
    href: AuxLabs.Twitch.EmoteScale.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.EmoteScale
    name: EmoteScale
    href: AuxLabs.Twitch.EmoteScale.html
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes.html
  name: Themes
  nameWithType: GlobalEmote.Themes
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteTheme}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmoteTheme}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<EmoteTheme>
  nameWithType: IReadOnlyCollection<EmoteTheme>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.EmoteTheme>
  nameWithType.vb: IReadOnlyCollection(Of EmoteTheme)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.EmoteTheme)
  name.vb: IReadOnlyCollection(Of EmoteTheme)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.EmoteTheme
    name: EmoteTheme
    href: AuxLabs.Twitch.EmoteTheme.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.EmoteTheme
    name: EmoteTheme
    href: AuxLabs.Twitch.EmoteTheme.html
  - name: )
memberLayout: SeparatePages
