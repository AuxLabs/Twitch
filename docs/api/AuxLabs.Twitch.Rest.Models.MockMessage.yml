### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.MockMessage
  commentId: T:AuxLabs.Twitch.Rest.Models.MockMessage
  id: MockMessage
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.MockMessage.#ctor
  - AuxLabs.Twitch.Rest.Models.MockMessage.#ctor(System.String,System.String)
  - AuxLabs.Twitch.Rest.Models.MockMessage.Id
  - AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted
  - AuxLabs.Twitch.Rest.Models.MockMessage.Text
  langs:
  - csharp
  - vb
  name: MockMessage
  nameWithType: MockMessage
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MockMessage
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class MockMessage
    content.vb: Public Class MockMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.MockMessage.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.MockMessage
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MockMessage.Id
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A caller-defined ID used to correlate this message with the same message in the response.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("msg_id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("msg_id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.MockMessage.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: msg_id
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.Text
  commentId: P:AuxLabs.Twitch.Rest.Models.MockMessage.Text
  id: Text
  parent: AuxLabs.Twitch.Rest.Models.MockMessage
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: MockMessage.Text
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.Text
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Text
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The message to check.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("msg_text")]

      public string Text { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("msg_text")>

      Public Property Text As String
  overload: AuxLabs.Twitch.Rest.Models.MockMessage.Text*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: msg_text
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted
  commentId: P:AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted
  id: IsPermitted
  parent: AuxLabs.Twitch.Rest.Models.MockMessage
  langs:
  - csharp
  - vb
  name: IsPermitted
  nameWithType: MockMessage.IsPermitted
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsPermitted
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Indicates whether Twitch would approve the message or hold it for moderator review.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_permitted")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

      public bool? IsPermitted { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_permitted")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

      Public Property IsPermitted As Boolean?
  overload: AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_permitted
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 2
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.#ctor
  commentId: M:AuxLabs.Twitch.Rest.Models.MockMessage.#ctor
  id: '#ctor'
  parent: AuxLabs.Twitch.Rest.Models.MockMessage
  langs:
  - csharp
  - vb
  name: MockMessage()
  nameWithType: MockMessage.MockMessage()
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.MockMessage()
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public MockMessage()
    content.vb: Public Sub New()
  overload: AuxLabs.Twitch.Rest.Models.MockMessage.#ctor*
  nameWithType.vb: MockMessage.New()
  fullName.vb: AuxLabs.Twitch.Rest.Models.MockMessage.New()
  name.vb: New()
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.#ctor(System.String,System.String)
  commentId: M:AuxLabs.Twitch.Rest.Models.MockMessage.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: AuxLabs.Twitch.Rest.Models.MockMessage
  langs:
  - csharp
  - vb
  name: MockMessage(string, string)
  nameWithType: MockMessage.MockMessage(string, string)
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.MockMessage(string, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/MockMessage.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public MockMessage(string id, string text)
    parameters:
    - id: id
      type: System.String
    - id: text
      type: System.String
    content.vb: Public Sub New(id As String, text As String)
  overload: AuxLabs.Twitch.Rest.Models.MockMessage.#ctor*
  nameWithType.vb: MockMessage.New(String, String)
  fullName.vb: AuxLabs.Twitch.Rest.Models.MockMessage.New(String, String)
  name.vb: New(String, String)
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.MockMessage.Id
  href: AuxLabs.Twitch.Rest.Models.MockMessage.Id.html
  name: Id
  nameWithType: MockMessage.Id
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.Text*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.MockMessage.Text
  href: AuxLabs.Twitch.Rest.Models.MockMessage.Text.html
  name: Text
  nameWithType: MockMessage.Text
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.Text
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted
  href: AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted.html
  name: IsPermitted
  nameWithType: MockMessage.IsPermitted
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.IsPermitted
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.MockMessage.#ctor*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.MockMessage.#ctor
  href: AuxLabs.Twitch.Rest.Models.MockMessage.#ctor.html
  name: MockMessage
  nameWithType: MockMessage.MockMessage
  fullName: AuxLabs.Twitch.Rest.Models.MockMessage.MockMessage
  nameWithType.vb: MockMessage.New
  fullName.vb: AuxLabs.Twitch.Rest.Models.MockMessage.New
  name.vb: New
memberLayout: SeparatePages
