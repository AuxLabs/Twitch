### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestPartialUser
  id: RestPartialUser
  parent: AuxLabs.Twitch.Rest.Entities
  children:
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.#ctor(AuxLabs.Twitch.Rest.TwitchRestClient,System.String)
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync(System.String)
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync(System.Int32)
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync(System.String)
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync(System.Int32)
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name
  - AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString
  langs:
  - csharp
  - vb
  name: RestPartialUser
  nameWithType: RestPartialUser
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RestPartialUser
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: 'public class RestPartialUser : RestEntity<string>'
    content.vb: Public Class RestPartialUser Inherits RestEntity(Of String)
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  derivedClasses:
  - AuxLabs.Twitch.Rest.Entities.RestEditor
  - AuxLabs.Twitch.Rest.Entities.RestSimpleUser
  inheritedMembers:
  - AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name
  id: Name
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RestPartialUser.Name
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Name
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: Userâ€™s login name
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name*
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.#ctor(AuxLabs.Twitch.Rest.TwitchRestClient,System.String)
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.#ctor(AuxLabs.Twitch.Rest.TwitchRestClient,System.String)
  id: '#ctor(AuxLabs.Twitch.Rest.TwitchRestClient,System.String)'
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: RestPartialUser(TwitchRestClient, string)
  nameWithType: RestPartialUser.RestPartialUser(TwitchRestClient, string)
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.RestPartialUser(AuxLabs.Twitch.Rest.TwitchRestClient, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: public RestPartialUser(TwitchRestClient twitch, string id)
    parameters:
    - id: twitch
      type: AuxLabs.Twitch.Rest.TwitchRestClient
    - id: id
      type: System.String
    content.vb: Public Sub New(twitch As TwitchRestClient, id As String)
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.#ctor*
  nameWithType.vb: RestPartialUser.New(TwitchRestClient, String)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestPartialUser.New(AuxLabs.Twitch.Rest.TwitchRestClient, String)
  name.vb: New(TwitchRestClient, String)
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString
  id: ToString
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RestPartialUser.ToString()
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ToString
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString*
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync
  id: GetChannelAsync
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: GetChannelAsync()
  nameWithType: RestPartialUser.GetChannelAsync()
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetChannelAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 27
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: Get the channel associated with this user.
  example: []
  syntax:
    content: public Task<RestChannel> GetChannelAsync()
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
    content.vb: Public Function GetChannelAsync() As Task(Of RestChannel)
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync*
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync
  id: GetBroadcastAsync
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: GetBroadcastAsync()
  nameWithType: RestPartialUser.GetBroadcastAsync()
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetBroadcastAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: Get the broadcast associated with this user.
  example: []
  syntax:
    content: public Task<RestBroadcast> GetBroadcastAsync()
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestBroadcast}
      description: A <xref href="AuxLabs.Twitch.Rest.Entities.RestBroadcast" data-throw-if-not-resolved="false"></xref> object or null if the user is not currently streaming.
    content.vb: Public Function GetBroadcastAsync() As Task(Of RestBroadcast)
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync*
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync(System.String)
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync(System.String)
  id: GetFollowerAsync(System.String)
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: GetFollowerAsync(string)
  nameWithType: RestPartialUser.GetFollowerAsync(string)
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetFollowerAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 35
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: public Task<RestFollower> GetFollowerAsync(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollower}
    content.vb: Public Function GetFollowerAsync(userId As String) As Task(Of RestFollower)
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync*
  nameWithType.vb: RestPartialUser.GetFollowerAsync(String)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync(String)
  name.vb: GetFollowerAsync(String)
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync(System.Int32)
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync(System.Int32)
  id: GetFollowersAsync(System.Int32)
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: GetFollowersAsync(int)
  nameWithType: RestPartialUser.GetFollowersAsync(int)
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync(int)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetFollowersAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: public Task<(IReadOnlyCollection<RestFollower> Followers, int Total)> GetFollowersAsync(int count = 20)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}}
    content.vb: Public Function GetFollowersAsync(count As Integer = 20) As Task(Of (Followers As IReadOnlyCollection(Of RestFollower), Total As Integer))
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync*
  nameWithType.vb: RestPartialUser.GetFollowersAsync(Integer)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync(Integer)
  name.vb: GetFollowersAsync(Integer)
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync(System.Int32)
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync(System.Int32)
  id: GetFollowedChannelsAsync(System.Int32)
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: GetFollowedChannelsAsync(int)
  nameWithType: RestPartialUser.GetFollowedChannelsAsync(int)
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync(int)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetFollowedChannelsAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 39
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: public Task<(IReadOnlyCollection<RestFollowedChannel> Channels, int Total)> GetFollowedChannelsAsync(int count = 20)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel},System.Int32}}
    content.vb: Public Function GetFollowedChannelsAsync(count As Integer = 20) As Task(Of (Channels As IReadOnlyCollection(Of RestFollowedChannel), Total As Integer))
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync*
  nameWithType.vb: RestPartialUser.GetFollowedChannelsAsync(Integer)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync(Integer)
  name.vb: GetFollowedChannelsAsync(Integer)
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync(System.String)
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync(System.String)
  id: GetFollowedChannelAsync(System.String)
  parent: AuxLabs.Twitch.Rest.Entities.RestPartialUser
  langs:
  - csharp
  - vb
  name: GetFollowedChannelAsync(string)
  nameWithType: RestPartialUser.GetFollowedChannelAsync(string)
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetFollowedChannelAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Users/RestPartialUser.cs
    startLine: 41
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: public Task<RestFollowedChannel> GetFollowedChannelAsync(string broadcasterId)
    parameters:
    - id: broadcasterId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel}
    content.vb: Public Function GetFollowedChannelAsync(broadcasterId As String) As Task(Of RestFollowedChannel)
  overload: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync*
  nameWithType.vb: RestPartialUser.GetFollowedChannelAsync(String)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync(String)
  name.vb: GetFollowedChannelAsync(String)
references:
- uid: AuxLabs.Twitch.Rest.Entities
  commentId: N:AuxLabs.Twitch.Rest.Entities
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Entities
  nameWithType: AuxLabs.Twitch.Rest.Entities
  fullName: AuxLabs.Twitch.Rest.Entities
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Entities
    name: Entities
    href: AuxLabs.Twitch.Rest.Entities.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Entities
    name: Entities
    href: AuxLabs.Twitch.Rest.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  parent: AuxLabs.Twitch.Rest.Entities
  definition: AuxLabs.Twitch.Rest.Entities.RestEntity`1
  href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  name: RestEntity<string>
  nameWithType: RestEntity<string>
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<string>
  nameWithType.vb: RestEntity(Of String)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of String)
  name.vb: RestEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id
  parent: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  definition: AuxLabs.Twitch.Rest.Entities.RestEntity`1.Id
  href: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id.html
  name: Id
  nameWithType: RestEntity<string>.Id
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<string>.Id
  nameWithType.vb: RestEntity(Of String).Id
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of String).Id
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestEntity`1
  href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1.Id
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestEntity`1.Id
  href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.Id.html
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of T).Id
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name.html
  name: Name
  nameWithType: RestPartialUser.Name
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.#ctor*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.#ctor
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.#ctor(AuxLabs.Twitch.Rest.TwitchRestClient,System.String).html
  name: RestPartialUser
  nameWithType: RestPartialUser.RestPartialUser
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.RestPartialUser
  nameWithType.vb: RestPartialUser.New
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestPartialUser.New
  name.vb: New
- uid: AuxLabs.Twitch.Rest.TwitchRestClient
  commentId: T:AuxLabs.Twitch.Rest.TwitchRestClient
  parent: AuxLabs.Twitch.Rest
  href: AuxLabs.Twitch.Rest.TwitchRestClient.html
  name: TwitchRestClient
  nameWithType: TwitchRestClient
  fullName: AuxLabs.Twitch.Rest.TwitchRestClient
- uid: AuxLabs.Twitch.Rest
  commentId: N:AuxLabs.Twitch.Rest
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest
  nameWithType: AuxLabs.Twitch.Rest
  fullName: AuxLabs.Twitch.Rest
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString.html
  name: ToString
  nameWithType: RestPartialUser.ToString
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.ToString
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync.html
  name: GetChannelAsync
  nameWithType: RestPartialUser.GetChannelAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetChannelAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestChannel>
  nameWithType: Task<RestChannel>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestChannel>
  nameWithType.vb: Task(Of RestChannel)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestChannel)
  name.vb: Task(Of RestChannel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestChannel
    name: RestChannel
    href: AuxLabs.Twitch.Rest.Entities.RestChannel.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestChannel
    name: RestChannel
    href: AuxLabs.Twitch.Rest.Entities.RestChannel.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestBroadcast
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.html
  name: RestBroadcast
  nameWithType: RestBroadcast
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync.html
  name: GetBroadcastAsync
  nameWithType: RestPartialUser.GetBroadcastAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetBroadcastAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestBroadcast}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestBroadcast}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestBroadcast>
  nameWithType: Task<RestBroadcast>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestBroadcast>
  nameWithType.vb: Task(Of RestBroadcast)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestBroadcast)
  name.vb: Task(Of RestBroadcast)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast
    name: RestBroadcast
    href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast
    name: RestBroadcast
    href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.html
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync(System.String).html
  name: GetFollowerAsync
  nameWithType: RestPartialUser.GetFollowerAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowerAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollower}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollower}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestFollower>
  nameWithType: Task<RestFollower>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestFollower>
  nameWithType.vb: Task(Of RestFollower)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestFollower)
  name.vb: Task(Of RestFollower)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync(System.Int32).html
  name: GetFollowersAsync
  nameWithType: RestPartialUser.GetFollowersAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowersAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IReadOnlyCollection<RestFollower> Followers, int Total)>
  nameWithType: Task<(IReadOnlyCollection<RestFollower> Followers, int Total)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Entities.RestFollower> Followers, int Total)>
  nameWithType.vb: Task(Of (Followers As IReadOnlyCollection(Of RestFollower), Total As Integer))
  fullName.vb: System.Threading.Tasks.Task(Of (Followers As System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Entities.RestFollower), Total As Integer))
  name.vb: Task(Of (Followers As IReadOnlyCollection(Of RestFollower), Total As Integer))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Followers
    name: Followers
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.followers
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Total
    name: Total
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.total
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Followers
    name: Followers
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.followers
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Total
    name: Total
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.total
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync(System.Int32).html
  name: GetFollowedChannelsAsync
  nameWithType: RestPartialUser.GetFollowedChannelsAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelsAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel},System.Int32}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel},System.Int32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IReadOnlyCollection<RestFollowedChannel> Channels, int Total)>
  nameWithType: Task<(IReadOnlyCollection<RestFollowedChannel> Channels, int Total)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Entities.RestFollowedChannel> Channels, int Total)>
  nameWithType.vb: Task(Of (Channels As IReadOnlyCollection(Of RestFollowedChannel), Total As Integer))
  fullName.vb: System.Threading.Tasks.Task(Of (Channels As System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Entities.RestFollowedChannel), Total As Integer))
  name.vb: Task(Of (Channels As IReadOnlyCollection(Of RestFollowedChannel), Total As Integer))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel
    name: RestFollowedChannel
    href: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel.html
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel},System.Int32}.Channels
    name: Channels
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollowedchannel-,system.int32-.channels
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel},System.Int32}.Total
    name: Total
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollowedchannel-,system.int32-.total
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel},System.Int32}.Channels
    name: Channels
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollowedchannel-,system.int32-.channels
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel
    name: RestFollowedChannel
    href: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel},System.Int32}.Total
    name: Total
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollowedchannel-,system.int32-.total
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync
  href: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync(System.String).html
  name: GetFollowedChannelAsync
  nameWithType: RestPartialUser.GetFollowedChannelAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestPartialUser.GetFollowedChannelAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollowedChannel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestFollowedChannel>
  nameWithType: Task<RestFollowedChannel>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestFollowedChannel>
  nameWithType.vb: Task(Of RestFollowedChannel)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestFollowedChannel)
  name.vb: Task(Of RestFollowedChannel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel
    name: RestFollowedChannel
    href: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel
    name: RestFollowedChannel
    href: AuxLabs.Twitch.Rest.Entities.RestFollowedChannel.html
  - name: )
memberLayout: SeparatePages
