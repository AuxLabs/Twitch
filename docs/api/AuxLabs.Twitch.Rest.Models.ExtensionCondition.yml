### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  commentId: T:AuxLabs.Twitch.Rest.Models.ExtensionCondition
  id: ExtensionCondition
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor
  - AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor(System.String)
  - AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId
  - AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit(AuxLabs.Twitch.Rest.Models.ExtensionCondition)~System.String
  - AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit(System.String)~AuxLabs.Twitch.Rest.Models.ExtensionCondition
  langs:
  - csharp
  - vb
  name: ExtensionCondition
  nameWithType: ExtensionCondition
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ExtensionCondition
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: 'public class ExtensionCondition : IEventCondition'
    content.vb: Public Class ExtensionCondition Implements IEventCondition
  inheritance:
  - System.Object
  implements:
  - AuxLabs.Twitch.Rest.IEventCondition
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId
  commentId: P:AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId
  id: ClientId
  parent: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: ExtensionCondition.ClientId
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ClientId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The client ID of the extension.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("extension_client_id")]

      public string ClientId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("extension_client_id")>

      Public Property ClientId As String
  overload: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: extension_client_id
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor
  commentId: M:AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor
  id: '#ctor'
  parent: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  langs:
  - csharp
  - vb
  name: ExtensionCondition()
  nameWithType: ExtensionCondition.ExtensionCondition()
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ExtensionCondition()
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public ExtensionCondition()
    content.vb: Public Sub New()
  overload: AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor*
  nameWithType.vb: ExtensionCondition.New()
  fullName.vb: AuxLabs.Twitch.Rest.Models.ExtensionCondition.New()
  name.vb: New()
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor(System.String)
  commentId: M:AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  langs:
  - csharp
  - vb
  name: ExtensionCondition(string)
  nameWithType: ExtensionCondition.ExtensionCondition(string)
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ExtensionCondition(string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public ExtensionCondition(string clientId)
    parameters:
    - id: clientId
      type: System.String
    content.vb: Public Sub New(clientId As String)
  overload: AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor*
  nameWithType.vb: ExtensionCondition.New(String)
  fullName.vb: AuxLabs.Twitch.Rest.Models.ExtensionCondition.New(String)
  name.vb: New(String)
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit(AuxLabs.Twitch.Rest.Models.ExtensionCondition)~System.String
  commentId: M:AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit(AuxLabs.Twitch.Rest.Models.ExtensionCondition)~System.String
  id: op_Implicit(AuxLabs.Twitch.Rest.Models.ExtensionCondition)~System.String
  parent: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  langs:
  - csharp
  - vb
  name: implicit operator string(ExtensionCondition)
  nameWithType: ExtensionCondition.implicit operator string(ExtensionCondition)
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.implicit operator string(AuxLabs.Twitch.Rest.Models.ExtensionCondition)
  type: Operator
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: op_Implicit
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public static implicit operator string(ExtensionCondition value)
    parameters:
    - id: value
      type: AuxLabs.Twitch.Rest.Models.ExtensionCondition
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(value As ExtensionCondition) As String
  overload: AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit*
  nameWithType.vb: ExtensionCondition.CType(ExtensionCondition)
  fullName.vb: AuxLabs.Twitch.Rest.Models.ExtensionCondition.CType(AuxLabs.Twitch.Rest.Models.ExtensionCondition)
  name.vb: CType(ExtensionCondition)
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit(System.String)~AuxLabs.Twitch.Rest.Models.ExtensionCondition
  commentId: M:AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit(System.String)~AuxLabs.Twitch.Rest.Models.ExtensionCondition
  id: op_Implicit(System.String)~AuxLabs.Twitch.Rest.Models.ExtensionCondition
  parent: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  langs:
  - csharp
  - vb
  name: implicit operator ExtensionCondition(string)
  nameWithType: ExtensionCondition.implicit operator ExtensionCondition(string)
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.implicit operator AuxLabs.Twitch.Rest.Models.ExtensionCondition(string)
  type: Operator
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: op_Implicit
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/EventSub/Conditions/ExtensionCondition.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public static implicit operator ExtensionCondition(string v)
    parameters:
    - id: v
      type: System.String
    return:
      type: AuxLabs.Twitch.Rest.Models.ExtensionCondition
    content.vb: Public Shared Widening Operator CType(v As String) As ExtensionCondition
  overload: AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit*
  nameWithType.vb: ExtensionCondition.CType(String)
  fullName.vb: AuxLabs.Twitch.Rest.Models.ExtensionCondition.CType(String)
  name.vb: CType(String)
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.IEventCondition
  commentId: T:AuxLabs.Twitch.Rest.IEventCondition
  parent: AuxLabs.Twitch.Rest
  href: AuxLabs.Twitch.Rest.IEventCondition.html
  name: IEventCondition
  nameWithType: IEventCondition
  fullName: AuxLabs.Twitch.Rest.IEventCondition
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest
  commentId: N:AuxLabs.Twitch.Rest
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest
  nameWithType: AuxLabs.Twitch.Rest
  fullName: AuxLabs.Twitch.Rest
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId
  href: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId.html
  name: ClientId
  nameWithType: ExtensionCondition.ClientId
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ClientId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor
  href: AuxLabs.Twitch.Rest.Models.ExtensionCondition.#ctor.html
  name: ExtensionCondition
  nameWithType: ExtensionCondition.ExtensionCondition
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.ExtensionCondition
  nameWithType.vb: ExtensionCondition.New
  fullName.vb: AuxLabs.Twitch.Rest.Models.ExtensionCondition.New
  name.vb: New
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ExtensionCondition.op_Implicit
  name: implicit operator
  nameWithType: ExtensionCondition.implicit operator
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition.implicit operator
  nameWithType.vb: ExtensionCondition.CType
  fullName.vb: AuxLabs.Twitch.Rest.Models.ExtensionCondition.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition
  commentId: T:AuxLabs.Twitch.Rest.Models.ExtensionCondition
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.ExtensionCondition.html
  name: ExtensionCondition
  nameWithType: ExtensionCondition
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionCondition
memberLayout: SeparatePages
