### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  commentId: T:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  id: PatchSegmentBody
  parent: AuxLabs.Twitch.Rest.Requests
  children:
  - AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId
  - AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes
  - AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled
  - AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt
  - AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone
  - AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title
  - AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate
  langs:
  - csharp
  - vb
  name: PatchSegmentBody
  nameWithType: PatchSegmentBody
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PatchSegmentBody
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public class PatchSegmentBody
    content.vb: Public Class PatchSegmentBody
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt
  id: StartsAt
  parent: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  langs:
  - csharp
  - vb
  name: StartsAt
  nameWithType: PatchSegmentBody.StartsAt
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StartsAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The date and time that the broadcast segment starts.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("start_time")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public DateTime? StartsAt { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonPropertyName("start_time")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property StartsAt As Date?
  overload: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: start_time
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes
  id: DurationMinutes
  parent: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  langs:
  - csharp
  - vb
  name: DurationMinutes
  nameWithType: PatchSegmentBody.DurationMinutes
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DurationMinutes
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The length of time that the broadcast is scheduled to run.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("duration")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string DurationMinutes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("duration")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property DurationMinutes As String
  overload: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: duration
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId
  id: CategoryId
  parent: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  langs:
  - csharp
  - vb
  name: CategoryId
  nameWithType: PatchSegmentBody.CategoryId
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CategoryId
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The ID of the category that best represents the broadcast’s content.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("category_id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string CategoryId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("category_id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property CategoryId As String
  overload: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: category_id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title
  id: Title
  parent: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: PatchSegmentBody.Title
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The broadcast’s title.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("title")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("title")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property Title As String
  overload: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled
  id: IsCancelled
  parent: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  langs:
  - csharp
  - vb
  name: IsCancelled
  nameWithType: PatchSegmentBody.IsCancelled
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsCancelled
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: Indicates whether the broadcast is canceled.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("is_canceled")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public bool? IsCancelled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonPropertyName("is_canceled")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property IsCancelled As Boolean?
  overload: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_canceled
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone
  id: Timezone
  parent: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  langs:
  - csharp
  - vb
  name: Timezone
  nameWithType: PatchSegmentBody.Timezone
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Timezone
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 34
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The time zone that the broadcaster broadcasts from.
  remarks: Specify the time zone using <a href="https://www.iana.org/time-zones">IANA time zone database</a> format
  example: []
  syntax:
    content: >-
      [JsonPropertyName("timezone")]

      public string Timezone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("timezone")>

      Public Property Timezone As String
  overload: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: timezone
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate
  commentId: M:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate
  id: Validate
  parent: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: PatchSegmentBody.Validate()
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Validate
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Schedule/PatchSegmentBody.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate()
  overload: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate*
references:
- uid: AuxLabs.Twitch.Rest.Requests
  commentId: N:AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Requests
  nameWithType: AuxLabs.Twitch.Rest.Requests
  fullName: AuxLabs.Twitch.Rest.Requests
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt
  href: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt.html
  name: StartsAt
  nameWithType: PatchSegmentBody.StartsAt
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.StartsAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes
  href: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes.html
  name: DurationMinutes
  nameWithType: PatchSegmentBody.DurationMinutes
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.DurationMinutes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId
  href: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId.html
  name: CategoryId
  nameWithType: PatchSegmentBody.CategoryId
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.CategoryId
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title
  href: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title.html
  name: Title
  nameWithType: PatchSegmentBody.Title
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Title
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled
  href: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled.html
  name: IsCancelled
  nameWithType: PatchSegmentBody.IsCancelled
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.IsCancelled
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone
  href: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone.html
  name: Timezone
  nameWithType: PatchSegmentBody.Timezone
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Timezone
- uid: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate
  href: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate.html
  name: Validate
  nameWithType: PatchSegmentBody.Validate
  fullName: AuxLabs.Twitch.Rest.Requests.PatchSegmentBody.Validate
memberLayout: SeparatePages
