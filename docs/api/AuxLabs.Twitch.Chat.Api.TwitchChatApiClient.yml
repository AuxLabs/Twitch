### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  commentId: T:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  id: TwitchChatApiClient
  parent: AuxLabs.Twitch.Chat.Api
  children:
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor(AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor(System.String,AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityAcknowledged
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityDenied
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelJoined
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelLeft
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChatCleared
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CommandsRequested
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Connected
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Disconnected
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose(System.Boolean)
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.GlobalUserStateReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageCleared
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NamesReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NoticeReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Reconnect
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RoomStateReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin(System.String[])
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage(System.String,System.String,System.String)
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart(System.String[])
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.TagsRequested
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnhandledTags
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnknownEvent
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UnknownEventReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserNoticeReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserStateReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UseVerifiedRateLimits
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WhisperReceived
  - AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity(System.String,System.String)
  langs:
  - csharp
  - vb
  name: TwitchChatApiClient
  nameWithType: TwitchChatApiClient
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TwitchChatApiClient
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: 'public class TwitchChatApiClient : IDisposable'
    content.vb: Public Class TwitchChatApiClient Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Connected
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Connected
  id: Connected
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: Connected
  nameWithType: TwitchChatApiClient.Connected
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Connected
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Connected
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: The client has successfully made a connection to the server.
  example: []
  syntax:
    content: public event Action Connected
    return:
      type: System.Action
    content.vb: Public Event Connected As Action
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Disconnected
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Disconnected
  id: Disconnected
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: Disconnected
  nameWithType: TwitchChatApiClient.Disconnected
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Disconnected
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Disconnected
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: The client was forcibly disconnected from the server.
  example: []
  syntax:
    content: public event Action<Exception> Disconnected
    return:
      type: System.Action{System.Exception}
    content.vb: Public Event Disconnected As Action(Of Exception)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UnknownEventReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UnknownEventReceived
  id: UnknownEventReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: UnknownEventReceived
  nameWithType: TwitchChatApiClient.UnknownEventReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UnknownEventReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UnknownEventReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: An unhandled irc command was received.
  example: []
  syntax:
    content: public event Action<IrcPayload> UnknownEventReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Api.IrcPayload}
    content.vb: Public Event UnknownEventReceived As Action(Of IrcPayload)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Reconnect
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Reconnect
  id: Reconnect
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: Reconnect
  nameWithType: TwitchChatApiClient.Reconnect
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Reconnect
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Reconnect
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when the server needs to terminate the connection.
  example: []
  syntax:
    content: public event Action Reconnect
    return:
      type: System.Action
    content.vb: Public Event Reconnect As Action
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityAcknowledged
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityAcknowledged
  id: CapabilityAcknowledged
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: CapabilityAcknowledged
  nameWithType: TwitchChatApiClient.CapabilityAcknowledged
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityAcknowledged
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CapabilityAcknowledged
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered after successful authentication.
  example: []
  syntax:
    content: public event Action<IReadOnlyCollection<string>> CapabilityAcknowledged
    return:
      type: System.Action{System.Collections.Generic.IReadOnlyCollection{System.String}}
    content.vb: Public Event CapabilityAcknowledged As Action(Of IReadOnlyCollection(Of String))
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityDenied
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityDenied
  id: CapabilityDenied
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: CapabilityDenied
  nameWithType: TwitchChatApiClient.CapabilityDenied
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CapabilityDenied
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CapabilityDenied
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when authenticating with invalid capabilities
  example: []
  syntax:
    content: public event Action<IReadOnlyCollection<string>> CapabilityDenied
    return:
      type: System.Action{System.Collections.Generic.IReadOnlyCollection{System.String}}
    content.vb: Public Event CapabilityDenied As Action(Of IReadOnlyCollection(Of String))
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChatCleared
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChatCleared
  id: ChatCleared
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: ChatCleared
  nameWithType: TwitchChatApiClient.ChatCleared
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChatCleared
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChatCleared
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 27
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when someone removes all messages from the channel or from a specified user.
  example: []
  syntax:
    content: public event Action<ClearChatEventArgs> ChatCleared
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.ClearChatEventArgs}
    content.vb: Public Event ChatCleared As Action(Of ClearChatEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageCleared
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageCleared
  id: MessageCleared
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: MessageCleared
  nameWithType: TwitchChatApiClient.MessageCleared
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageCleared
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageCleared
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when someone removes a single message from the chat room.
  example: []
  syntax:
    content: public event Action<ClearMessageEventArgs> MessageCleared
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs}
    content.vb: Public Event MessageCleared As Action(Of ClearMessageEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.GlobalUserStateReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.GlobalUserStateReceived
  id: GlobalUserStateReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: GlobalUserStateReceived
  nameWithType: TwitchChatApiClient.GlobalUserStateReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.GlobalUserStateReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GlobalUserStateReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 31
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered after authenticated with the server. Indicates the authenticated user's chat settings.
  example: []
  syntax:
    content: public event Action<GlobalUserStateTags> GlobalUserStateReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.GlobalUserStateTags}
    content.vb: Public Event GlobalUserStateReceived As Action(Of GlobalUserStateTags)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NoticeReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NoticeReceived
  id: NoticeReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: NoticeReceived
  nameWithType: TwitchChatApiClient.NoticeReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NoticeReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NoticeReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 33
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered to indicate the outcome of an action.
  example: []
  syntax:
    content: public event Action<NoticeEventArgs> NoticeReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.NoticeEventArgs}
    content.vb: Public Event NoticeReceived As Action(Of NoticeEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageReceived
  id: MessageReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: MessageReceived
  nameWithType: TwitchChatApiClient.MessageReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.MessageReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 35
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when a message is received in a channel.
  example: []
  syntax:
    content: public event Action<MessageEventArgs> MessageReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.MessageEventArgs}
    content.vb: Public Event MessageReceived As Action(Of MessageEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RoomStateReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RoomStateReceived
  id: RoomStateReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: RoomStateReceived
  nameWithType: TwitchChatApiClient.RoomStateReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RoomStateReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RoomStateReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when you join a channel or when the channel’s chat settings change. Indicates the chat's current settings.
  example: []
  syntax:
    content: public event Action<RoomStateEventArgs> RoomStateReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.RoomStateEventArgs}
    content.vb: Public Event RoomStateReceived As Action(Of RoomStateEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserNoticeReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserNoticeReceived
  id: UserNoticeReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: UserNoticeReceived
  nameWithType: TwitchChatApiClient.UserNoticeReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserNoticeReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserNoticeReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 39
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when events relating to a user in a channel occur. e.g. subscriptions, gifts, raids...
  example: []
  syntax:
    content: public event Action<UserNoticeEventArgs> UserNoticeReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs}
    content.vb: Public Event UserNoticeReceived As Action(Of UserNoticeEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserStateReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserStateReceived
  id: UserStateReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: UserStateReceived
  nameWithType: TwitchChatApiClient.UserStateReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UserStateReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserStateReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 41
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when the bot joins a channel. Indicates the authenticated user's state in said channel.
  example: []
  syntax:
    content: public event Action<UserStateEventArgs> UserStateReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.UserStateEventArgs}
    content.vb: Public Event UserStateReceived As Action(Of UserStateEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WhisperReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WhisperReceived
  id: WhisperReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: WhisperReceived
  nameWithType: TwitchChatApiClient.WhisperReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WhisperReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 43
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when a whisper is received.
  example: []
  syntax:
    content: public event Action<WhisperEventArgs> WhisperReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.WhisperEventArgs}
    content.vb: Public Event WhisperReceived As Action(Of WhisperEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelJoined
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelJoined
  id: ChannelJoined
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: ChannelJoined
  nameWithType: TwitchChatApiClient.ChannelJoined
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelJoined
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelJoined
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 45
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when a user joins a channel.
  example: []
  syntax:
    content: public event Action<MembershipEventArgs> ChannelJoined
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.MembershipEventArgs}
    content.vb: Public Event ChannelJoined As Action(Of MembershipEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelLeft
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelLeft
  id: ChannelLeft
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: ChannelLeft
  nameWithType: TwitchChatApiClient.ChannelLeft
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ChannelLeft
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelLeft
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 47
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered when a user leaves a channel.
  example: []
  syntax:
    content: public event Action<MembershipEventArgs> ChannelLeft
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.MembershipEventArgs}
    content.vb: Public Event ChannelLeft As Action(Of MembershipEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NamesReceived
  commentId: E:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NamesReceived
  id: NamesReceived
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: NamesReceived
  nameWithType: TwitchChatApiClient.NamesReceived
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.NamesReceived
  type: Event
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NamesReceived
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 49
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Triggered after joining a channel, lists current active chatters.
  example: []
  syntax:
    content: public event Action<NamesEventArgs> NamesReceived
    return:
      type: System.Action{AuxLabs.Twitch.Chat.Models.NamesEventArgs}
    content.vb: Public Event NamesReceived As Action(Of NamesEventArgs)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CommandsRequested
  commentId: F:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CommandsRequested
  id: CommandsRequested
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: CommandsRequested
  nameWithType: TwitchChatApiClient.CommandsRequested
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.CommandsRequested
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CommandsRequested
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 54
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public readonly bool CommandsRequested
    return:
      type: System.Boolean
    content.vb: Public ReadOnly CommandsRequested As Boolean
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.TagsRequested
  commentId: F:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.TagsRequested
  id: TagsRequested
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: TagsRequested
  nameWithType: TwitchChatApiClient.TagsRequested
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.TagsRequested
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TagsRequested
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 55
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public readonly bool TagsRequested
    return:
      type: System.Boolean
    content.vb: Public ReadOnly TagsRequested As Boolean
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnknownEvent
  commentId: F:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnknownEvent
  id: ThrowOnUnknownEvent
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: ThrowOnUnknownEvent
  nameWithType: TwitchChatApiClient.ThrowOnUnknownEvent
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnknownEvent
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ThrowOnUnknownEvent
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 56
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public readonly bool ThrowOnUnknownEvent
    return:
      type: System.Boolean
    content.vb: Public ReadOnly ThrowOnUnknownEvent As Boolean
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnhandledTags
  commentId: F:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnhandledTags
  id: ThrowOnUnhandledTags
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: ThrowOnUnhandledTags
  nameWithType: TwitchChatApiClient.ThrowOnUnhandledTags
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.ThrowOnUnhandledTags
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ThrowOnUnhandledTags
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 57
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public readonly bool ThrowOnUnhandledTags
    return:
      type: System.Boolean
    content.vb: Public ReadOnly ThrowOnUnhandledTags As Boolean
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UseVerifiedRateLimits
  commentId: F:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UseVerifiedRateLimits
  id: UseVerifiedRateLimits
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: UseVerifiedRateLimits
  nameWithType: TwitchChatApiClient.UseVerifiedRateLimits
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.UseVerifiedRateLimits
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UseVerifiedRateLimits
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 58
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public readonly bool UseVerifiedRateLimits
    return:
      type: System.Boolean
    content.vb: Public ReadOnly UseVerifiedRateLimits As Boolean
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State
  commentId: P:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State
  id: State
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: State
  nameWithType: TwitchChatApiClient.State
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: State
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 60
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public ConnectionState State { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.WebSockets.ConnectionState
    content.vb: Public ReadOnly Property State As ConnectionState
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State*
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous
  commentId: P:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous
  id: IsAnonymous
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: IsAnonymous
  nameWithType: TwitchChatApiClient.IsAnonymous
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsAnonymous
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 61
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public bool IsAnonymous { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAnonymous As Boolean
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous*
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor(AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor(AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  id: '#ctor(AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)'
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: TwitchChatApiClient(TwitchChatApiConfig)
  nameWithType: TwitchChatApiClient.TwitchChatApiClient(TwitchChatApiConfig)
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.TwitchChatApiClient(AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 70
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public TwitchChatApiClient(TwitchChatApiConfig config = null)
    parameters:
    - id: config
      type: AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig
    content.vb: Public Sub New(config As TwitchChatApiConfig = Nothing)
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor*
  nameWithType.vb: TwitchChatApiClient.New(TwitchChatApiConfig)
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.New(AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  name.vb: New(TwitchChatApiConfig)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor(System.String,AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor(System.String,AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  id: '#ctor(System.String,AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)'
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: TwitchChatApiClient(string, TwitchChatApiConfig)
  nameWithType: TwitchChatApiClient.TwitchChatApiClient(string, TwitchChatApiConfig)
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.TwitchChatApiClient(string, AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 72
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public TwitchChatApiClient(string url, TwitchChatApiConfig config = null)
    parameters:
    - id: url
      type: System.String
    - id: config
      type: AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig
    content.vb: Public Sub New(url As String, config As TwitchChatApiConfig = Nothing)
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor*
  nameWithType.vb: TwitchChatApiClient.New(String, TwitchChatApiConfig)
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.New(String, AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig)
  name.vb: New(String, TwitchChatApiConfig)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose(System.Boolean)
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: TwitchChatApiClient.Dispose(bool)
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Dispose
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 95
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose*
  nameWithType.vb: TwitchChatApiClient.Dispose(Boolean)
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose
  id: Dispose
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TwitchChatApiClient.Dispose()
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Dispose
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 108
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity(System.String,System.String)
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity(System.String,System.String)
  id: WithIdentity(System.String,System.String)
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: WithIdentity(string, string)
  nameWithType: TwitchChatApiClient.WithIdentity(string, string)
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity(string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WithIdentity
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 115
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public TwitchChatApiClient WithIdentity(string username, string token)
    parameters:
    - id: username
      type: System.String
    - id: token
      type: System.String
    return:
      type: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
    content.vb: Public Function WithIdentity(username As String, token As String) As TwitchChatApiClient
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity*
  nameWithType.vb: TwitchChatApiClient.WithIdentity(String, String)
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity(String, String)
  name.vb: WithIdentity(String, String)
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run
  id: Run
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: TwitchChatApiClient.Run()
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Run
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 135
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public void Run()
    content.vb: Public Sub Run()
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run*
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync
  id: RunAsync
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: RunAsync()
  nameWithType: TwitchChatApiClient.RunAsync()
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RunAsync
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 136
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  syntax:
    content: public Task RunAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RunAsync() As Task
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync*
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin(System.String[])
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin(System.String[])
  id: SendJoin(System.String[])
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: SendJoin(params string[])
  nameWithType: TwitchChatApiClient.SendJoin(params string[])
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin(params string[])
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SendJoin
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 140
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Join a channel by name.
  remarks: Max channels per request is 20 or 2000 for verified accounts.
  example: []
  syntax:
    content: public void SendJoin(params string[] channelNames)
    parameters:
    - id: channelNames
      type: System.String[]
    content.vb: Public Sub SendJoin(ParamArray channelNames As String())
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin*
  nameWithType.vb: TwitchChatApiClient.SendJoin(ParamArray String())
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin(ParamArray String())
  name.vb: SendJoin(ParamArray String())
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart(System.String[])
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart(System.String[])
  id: SendPart(System.String[])
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: SendPart(params string[])
  nameWithType: TwitchChatApiClient.SendPart(params string[])
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart(params string[])
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SendPart
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 150
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Leave a channel by name.
  remarks: Max channels per request is 20 or 2000 for verified accounts.
  example: []
  syntax:
    content: public void SendPart(params string[] channelNames)
    parameters:
    - id: channelNames
      type: System.String[]
    content.vb: Public Sub SendPart(ParamArray channelNames As String())
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart*
  nameWithType.vb: TwitchChatApiClient.SendPart(ParamArray String())
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart(ParamArray String())
  name.vb: SendPart(ParamArray String())
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage(System.String,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage(System.String,System.String,System.String)
  id: SendMessage(System.String,System.String,System.String)
  parent: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  langs:
  - csharp
  - vb
  name: SendMessage(string, string, string)
  nameWithType: TwitchChatApiClient.SendMessage(string, string, string)
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage(string, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SendMessage
    path: ../src/AuxLabs.Twitch.Chat.Api/TwitchChatApiClient.cs
    startLine: 159
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Api
  summary: Send a message to a channel.
  example: []
  syntax:
    content: public void SendMessage(string channelName, string message, string replyMessageId = null)
    parameters:
    - id: channelName
      type: System.String
    - id: message
      type: System.String
    - id: replyMessageId
      type: System.String
    content.vb: Public Sub SendMessage(channelName As String, message As String, replyMessageId As String = Nothing)
  overload: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage*
  nameWithType.vb: TwitchChatApiClient.SendMessage(String, String, String)
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage(String, String, String)
  name.vb: SendMessage(String, String, String)
references:
- uid: AuxLabs.Twitch.Chat.Api
  commentId: N:AuxLabs.Twitch.Chat.Api
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat.Api
  nameWithType: AuxLabs.Twitch.Chat.Api
  fullName: AuxLabs.Twitch.Chat.Api
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Api
    name: Api
    href: AuxLabs.Twitch.Chat.Api.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Api
    name: Api
    href: AuxLabs.Twitch.Chat.Api.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Api.IrcPayload}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Api.IrcPayload}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IrcPayload>
  nameWithType: Action<IrcPayload>
  fullName: System.Action<AuxLabs.Twitch.Chat.Api.IrcPayload>
  nameWithType.vb: Action(Of IrcPayload)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Api.IrcPayload)
  name.vb: Action(Of IrcPayload)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Api.IrcPayload
    name: IrcPayload
    href: AuxLabs.Twitch.Chat.Api.IrcPayload.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Api.IrcPayload
    name: IrcPayload
    href: AuxLabs.Twitch.Chat.Api.IrcPayload.html
  - name: )
- uid: System.Action{System.Collections.Generic.IReadOnlyCollection{System.String}}
  commentId: T:System.Action{System.Collections.Generic.IReadOnlyCollection{System.String}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IReadOnlyCollection<string>>
  nameWithType: Action<IReadOnlyCollection<string>>
  fullName: System.Action<System.Collections.Generic.IReadOnlyCollection<string>>
  nameWithType.vb: Action(Of IReadOnlyCollection(Of String))
  fullName.vb: System.Action(Of System.Collections.Generic.IReadOnlyCollection(Of String))
  name.vb: Action(Of IReadOnlyCollection(Of String))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.ClearChatEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.ClearChatEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ClearChatEventArgs>
  nameWithType: Action<ClearChatEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.ClearChatEventArgs>
  nameWithType.vb: Action(Of ClearChatEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.ClearChatEventArgs)
  name.vb: Action(Of ClearChatEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.ClearChatEventArgs
    name: ClearChatEventArgs
    href: AuxLabs.Twitch.Chat.Models.ClearChatEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.ClearChatEventArgs
    name: ClearChatEventArgs
    href: AuxLabs.Twitch.Chat.Models.ClearChatEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ClearMessageEventArgs>
  nameWithType: Action<ClearMessageEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs>
  nameWithType.vb: Action(Of ClearMessageEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs)
  name.vb: Action(Of ClearMessageEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs
    name: ClearMessageEventArgs
    href: AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs
    name: ClearMessageEventArgs
    href: AuxLabs.Twitch.Chat.Models.ClearMessageEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.GlobalUserStateTags}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.GlobalUserStateTags}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<GlobalUserStateTags>
  nameWithType: Action<GlobalUserStateTags>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.GlobalUserStateTags>
  nameWithType.vb: Action(Of GlobalUserStateTags)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.GlobalUserStateTags)
  name.vb: Action(Of GlobalUserStateTags)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.GlobalUserStateTags
    name: GlobalUserStateTags
    href: AuxLabs.Twitch.Chat.Models.GlobalUserStateTags.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.GlobalUserStateTags
    name: GlobalUserStateTags
    href: AuxLabs.Twitch.Chat.Models.GlobalUserStateTags.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.NoticeEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.NoticeEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<NoticeEventArgs>
  nameWithType: Action<NoticeEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.NoticeEventArgs>
  nameWithType.vb: Action(Of NoticeEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.NoticeEventArgs)
  name.vb: Action(Of NoticeEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.NoticeEventArgs
    name: NoticeEventArgs
    href: AuxLabs.Twitch.Chat.Models.NoticeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.NoticeEventArgs
    name: NoticeEventArgs
    href: AuxLabs.Twitch.Chat.Models.NoticeEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.MessageEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.MessageEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<MessageEventArgs>
  nameWithType: Action<MessageEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.MessageEventArgs>
  nameWithType.vb: Action(Of MessageEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.MessageEventArgs)
  name.vb: Action(Of MessageEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.MessageEventArgs
    name: MessageEventArgs
    href: AuxLabs.Twitch.Chat.Models.MessageEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.MessageEventArgs
    name: MessageEventArgs
    href: AuxLabs.Twitch.Chat.Models.MessageEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.RoomStateEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.RoomStateEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<RoomStateEventArgs>
  nameWithType: Action<RoomStateEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.RoomStateEventArgs>
  nameWithType.vb: Action(Of RoomStateEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.RoomStateEventArgs)
  name.vb: Action(Of RoomStateEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.RoomStateEventArgs
    name: RoomStateEventArgs
    href: AuxLabs.Twitch.Chat.Models.RoomStateEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.RoomStateEventArgs
    name: RoomStateEventArgs
    href: AuxLabs.Twitch.Chat.Models.RoomStateEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<UserNoticeEventArgs>
  nameWithType: Action<UserNoticeEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs>
  nameWithType.vb: Action(Of UserNoticeEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs)
  name.vb: Action(Of UserNoticeEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs
    name: UserNoticeEventArgs
    href: AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs
    name: UserNoticeEventArgs
    href: AuxLabs.Twitch.Chat.Models.UserNoticeEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.UserStateEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.UserStateEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<UserStateEventArgs>
  nameWithType: Action<UserStateEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.UserStateEventArgs>
  nameWithType.vb: Action(Of UserStateEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.UserStateEventArgs)
  name.vb: Action(Of UserStateEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.UserStateEventArgs
    name: UserStateEventArgs
    href: AuxLabs.Twitch.Chat.Models.UserStateEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.UserStateEventArgs
    name: UserStateEventArgs
    href: AuxLabs.Twitch.Chat.Models.UserStateEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.WhisperEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.WhisperEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<WhisperEventArgs>
  nameWithType: Action<WhisperEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.WhisperEventArgs>
  nameWithType.vb: Action(Of WhisperEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.WhisperEventArgs)
  name.vb: Action(Of WhisperEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.WhisperEventArgs
    name: WhisperEventArgs
    href: AuxLabs.Twitch.Chat.Models.WhisperEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.WhisperEventArgs
    name: WhisperEventArgs
    href: AuxLabs.Twitch.Chat.Models.WhisperEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.MembershipEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.MembershipEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<MembershipEventArgs>
  nameWithType: Action<MembershipEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.MembershipEventArgs>
  nameWithType.vb: Action(Of MembershipEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.MembershipEventArgs)
  name.vb: Action(Of MembershipEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.MembershipEventArgs
    name: MembershipEventArgs
    href: AuxLabs.Twitch.Chat.Models.MembershipEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.MembershipEventArgs
    name: MembershipEventArgs
    href: AuxLabs.Twitch.Chat.Models.MembershipEventArgs.html
  - name: )
- uid: System.Action{AuxLabs.Twitch.Chat.Models.NamesEventArgs}
  commentId: T:System.Action{AuxLabs.Twitch.Chat.Models.NamesEventArgs}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<NamesEventArgs>
  nameWithType: Action<NamesEventArgs>
  fullName: System.Action<AuxLabs.Twitch.Chat.Models.NamesEventArgs>
  nameWithType.vb: Action(Of NamesEventArgs)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Chat.Models.NamesEventArgs)
  name.vb: Action(Of NamesEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Models.NamesEventArgs
    name: NamesEventArgs
    href: AuxLabs.Twitch.Chat.Models.NamesEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Models.NamesEventArgs
    name: NamesEventArgs
    href: AuxLabs.Twitch.Chat.Models.NamesEventArgs.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State.html
  name: State
  nameWithType: TwitchChatApiClient.State
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.State
- uid: AuxLabs.Twitch.WebSockets.ConnectionState
  commentId: T:AuxLabs.Twitch.WebSockets.ConnectionState
  parent: AuxLabs.Twitch.WebSockets
  href: AuxLabs.Twitch.WebSockets.ConnectionState.html
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: AuxLabs.Twitch.WebSockets.ConnectionState
- uid: AuxLabs.Twitch.WebSockets
  commentId: N:AuxLabs.Twitch.WebSockets
  href: AuxLabs.html
  name: AuxLabs.Twitch.WebSockets
  nameWithType: AuxLabs.Twitch.WebSockets
  fullName: AuxLabs.Twitch.WebSockets
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.WebSockets
    name: WebSockets
    href: AuxLabs.Twitch.WebSockets.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.WebSockets
    name: WebSockets
    href: AuxLabs.Twitch.WebSockets.html
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous.html
  name: IsAnonymous
  nameWithType: TwitchChatApiClient.IsAnonymous
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.IsAnonymous
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.#ctor(AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig).html
  name: TwitchChatApiClient
  nameWithType: TwitchChatApiClient.TwitchChatApiClient
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.TwitchChatApiClient
  nameWithType.vb: TwitchChatApiClient.New
  fullName.vb: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.New
  name.vb: New
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig
  commentId: T:AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig
  parent: AuxLabs.Twitch.Chat.Api
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig.html
  name: TwitchChatApiConfig
  nameWithType: TwitchChatApiConfig
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiConfig
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose(System.Boolean).html
  name: Dispose
  nameWithType: TwitchChatApiClient.Dispose
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity(System.String,System.String).html
  name: WithIdentity
  nameWithType: TwitchChatApiClient.WithIdentity
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.WithIdentity
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  commentId: T:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
  parent: AuxLabs.Twitch.Chat.Api
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.html
  name: TwitchChatApiClient
  nameWithType: TwitchChatApiClient
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run.html
  name: Run
  nameWithType: TwitchChatApiClient.Run
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.Run
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync.html
  name: RunAsync
  nameWithType: TwitchChatApiClient.RunAsync
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.RunAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin(System.String[]).html
  name: SendJoin
  nameWithType: TwitchChatApiClient.SendJoin
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendJoin
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart(System.String[]).html
  name: SendPart
  nameWithType: TwitchChatApiClient.SendPart
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendPart
- uid: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage*
  commentId: Overload:AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage
  href: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage(System.String,System.String,System.String).html
  name: SendMessage
  nameWithType: TwitchChatApiClient.SendMessage
  fullName: AuxLabs.Twitch.Chat.Api.TwitchChatApiClient.SendMessage
memberLayout: SeparatePages
