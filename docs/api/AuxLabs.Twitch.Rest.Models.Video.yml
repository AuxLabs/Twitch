### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.Video
  commentId: T:AuxLabs.Twitch.Rest.Models.Video
  id: Video
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.Video.CreatedAt
  - AuxLabs.Twitch.Rest.Models.Video.Description
  - AuxLabs.Twitch.Rest.Models.Video.Duration
  - AuxLabs.Twitch.Rest.Models.Video.Id
  - AuxLabs.Twitch.Rest.Models.Video.Language
  - AuxLabs.Twitch.Rest.Models.Video.MutedSegments
  - AuxLabs.Twitch.Rest.Models.Video.PublishedAt
  - AuxLabs.Twitch.Rest.Models.Video.StreamId
  - AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl
  - AuxLabs.Twitch.Rest.Models.Video.Title
  - AuxLabs.Twitch.Rest.Models.Video.Type
  - AuxLabs.Twitch.Rest.Models.Video.Url
  - AuxLabs.Twitch.Rest.Models.Video.UserDisplayName
  - AuxLabs.Twitch.Rest.Models.Video.UserId
  - AuxLabs.Twitch.Rest.Models.Video.UserName
  - AuxLabs.Twitch.Rest.Models.Video.Viewable
  - AuxLabs.Twitch.Rest.Models.Video.ViewCount
  langs:
  - csharp
  - vb
  name: Video
  nameWithType: Video
  fullName: AuxLabs.Twitch.Rest.Models.Video
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Video
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class Video
    content.vb: Public Class Video
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.Video.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Video.Id
  fullName: AuxLabs.Twitch.Rest.Models.Video.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies the video.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.Video.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.Video.StreamId
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.StreamId
  id: StreamId
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: Video.StreamId
  fullName: AuxLabs.Twitch.Rest.Models.Video.StreamId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StreamId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID of the stream that the video originated from if the video is a <xref href="AuxLabs.Twitch.VideoType.Archive" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("stream_id")]

      public string StreamId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("stream_id")>

      Public Property StreamId As String
  overload: AuxLabs.Twitch.Rest.Models.Video.StreamId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: stream_id
- uid: AuxLabs.Twitch.Rest.Models.Video.UserId
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.UserId
  id: UserId
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: Video.UserId
  fullName: AuxLabs.Twitch.Rest.Models.Video.UserId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID of the broadcaster that owns the video.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_id")]

      public string UserId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_id")>

      Public Property UserId As String
  overload: AuxLabs.Twitch.Rest.Models.Video.UserId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_id
- uid: AuxLabs.Twitch.Rest.Models.Video.UserName
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.UserName
  id: UserName
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: Video.UserName
  fullName: AuxLabs.Twitch.Rest.Models.Video.UserName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s login name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_login")]

      public string UserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_login")>

      Public Property UserName As String
  overload: AuxLabs.Twitch.Rest.Models.Video.UserName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_login
- uid: AuxLabs.Twitch.Rest.Models.Video.UserDisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.UserDisplayName
  id: UserDisplayName
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: UserDisplayName
  nameWithType: Video.UserDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.Video.UserDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserDisplayName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_name")]

      public string UserDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_name")>

      Public Property UserDisplayName As String
  overload: AuxLabs.Twitch.Rest.Models.Video.UserDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_name
- uid: AuxLabs.Twitch.Rest.Models.Video.Title
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Title
  id: Title
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: Video.Title
  fullName: AuxLabs.Twitch.Rest.Models.Video.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The video’s title.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("title")]

      public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("title")>

      Public Property Title As String
  overload: AuxLabs.Twitch.Rest.Models.Video.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
- uid: AuxLabs.Twitch.Rest.Models.Video.Description
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Description
  id: Description
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Video.Description
  fullName: AuxLabs.Twitch.Rest.Models.Video.Description
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Description
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 33
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The video’s description.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("description")]

      public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("description")>

      Public Property Description As String
  overload: AuxLabs.Twitch.Rest.Models.Video.Description*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
- uid: AuxLabs.Twitch.Rest.Models.Video.CreatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.CreatedAt
  id: CreatedAt
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: Video.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.Video.CreatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CreatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The date and time, in UTC, of when the video was created.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("created_at")]

      public DateTime CreatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("created_at")>

      Public Property CreatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.Video.CreatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: created_at
- uid: AuxLabs.Twitch.Rest.Models.Video.PublishedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.PublishedAt
  id: PublishedAt
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: PublishedAt
  nameWithType: Video.PublishedAt
  fullName: AuxLabs.Twitch.Rest.Models.Video.PublishedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PublishedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 41
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The date and time, in UTC, of when the video was published.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("published_at")]

      public DateTime PublishedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("published_at")>

      Public Property PublishedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.Video.PublishedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: published_at
- uid: AuxLabs.Twitch.Rest.Models.Video.Url
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Url
  id: Url
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: Video.Url
  fullName: AuxLabs.Twitch.Rest.Models.Video.Url
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Url
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 45
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The video’s URL.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("url")]

      public string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("url")>

      Public Property Url As String
  overload: AuxLabs.Twitch.Rest.Models.Video.Url*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: url
- uid: AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl
  id: ThumbnailUrl
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: ThumbnailUrl
  nameWithType: Video.ThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ThumbnailUrl
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 49
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A URL to a thumbnail image of the video.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("thumbnail_url")]

      public string ThumbnailUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("thumbnail_url")>

      Public Property ThumbnailUrl As String
  overload: AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: thumbnail_url
- uid: AuxLabs.Twitch.Rest.Models.Video.Viewable
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Viewable
  id: Viewable
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Viewable
  nameWithType: Video.Viewable
  fullName: AuxLabs.Twitch.Rest.Models.Video.Viewable
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Viewable
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 53
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The video’s viewable state. Always set to public.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("viewable")]

      public string Viewable { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("viewable")>

      Public Property Viewable As String
  overload: AuxLabs.Twitch.Rest.Models.Video.Viewable*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: viewable
- uid: AuxLabs.Twitch.Rest.Models.Video.ViewCount
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.ViewCount
  id: ViewCount
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: ViewCount
  nameWithType: Video.ViewCount
  fullName: AuxLabs.Twitch.Rest.Models.Video.ViewCount
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ViewCount
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 57
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The number of times that users have watched the video.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("view_count")]

      public int ViewCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("view_count")>

      Public Property ViewCount As Integer
  overload: AuxLabs.Twitch.Rest.Models.Video.ViewCount*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: view_count
- uid: AuxLabs.Twitch.Rest.Models.Video.Language
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Language
  id: Language
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: Video.Language
  fullName: AuxLabs.Twitch.Rest.Models.Video.Language
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Language
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 61
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ISO 639-1 two-letter language code that the video was broadcast in.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("language")]

      public string Language { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("language")>

      Public Property Language As String
  overload: AuxLabs.Twitch.Rest.Models.Video.Language*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: language
- uid: AuxLabs.Twitch.Rest.Models.Video.Type
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Type
  id: Type
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Video.Type
  fullName: AuxLabs.Twitch.Rest.Models.Video.Type
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Type
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 65
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The video’s type.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("type")]

      public VideoType Type { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.VideoType
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("type")>

      Public Property Type As VideoType
  overload: AuxLabs.Twitch.Rest.Models.Video.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
- uid: AuxLabs.Twitch.Rest.Models.Video.Duration
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.Duration
  id: Duration
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: Video.Duration
  fullName: AuxLabs.Twitch.Rest.Models.Video.Duration
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Duration
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 69
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The video’s length in ISO 8601 duration format.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("duration")]

      public string Duration { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("duration")>

      Public Property Duration As String
  overload: AuxLabs.Twitch.Rest.Models.Video.Duration*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: duration
- uid: AuxLabs.Twitch.Rest.Models.Video.MutedSegments
  commentId: P:AuxLabs.Twitch.Rest.Models.Video.MutedSegments
  id: MutedSegments
  parent: AuxLabs.Twitch.Rest.Models.Video
  langs:
  - csharp
  - vb
  name: MutedSegments
  nameWithType: Video.MutedSegments
  fullName: AuxLabs.Twitch.Rest.Models.Video.MutedSegments
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MutedSegments
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Videos/Video.cs
    startLine: 73
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The segments that Twitch Audio Recognition muted.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("muted_segments")]

      public IReadOnlyCollection<VideoOffset> MutedSegments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.VideoOffset}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("muted_segments")>

      Public Property MutedSegments As IReadOnlyCollection(Of VideoOffset)
  overload: AuxLabs.Twitch.Rest.Models.Video.MutedSegments*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: muted_segments
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.Video.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Id
  href: AuxLabs.Twitch.Rest.Models.Video.Id.html
  name: Id
  nameWithType: Video.Id
  fullName: AuxLabs.Twitch.Rest.Models.Video.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.VideoType.Archive
  commentId: F:AuxLabs.Twitch.VideoType.Archive
  href: AuxLabs.Twitch.VideoType.html#AuxLabs.Twitch.VideoType.Archive
  name: Archive
  nameWithType: VideoType.Archive
  fullName: AuxLabs.Twitch.VideoType.Archive
- uid: AuxLabs.Twitch.Rest.Models.Video.StreamId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.StreamId
  href: AuxLabs.Twitch.Rest.Models.Video.StreamId.html
  name: StreamId
  nameWithType: Video.StreamId
  fullName: AuxLabs.Twitch.Rest.Models.Video.StreamId
- uid: AuxLabs.Twitch.Rest.Models.Video.UserId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.UserId
  href: AuxLabs.Twitch.Rest.Models.Video.UserId.html
  name: UserId
  nameWithType: Video.UserId
  fullName: AuxLabs.Twitch.Rest.Models.Video.UserId
- uid: AuxLabs.Twitch.Rest.Models.Video.UserName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.UserName
  href: AuxLabs.Twitch.Rest.Models.Video.UserName.html
  name: UserName
  nameWithType: Video.UserName
  fullName: AuxLabs.Twitch.Rest.Models.Video.UserName
- uid: AuxLabs.Twitch.Rest.Models.Video.UserDisplayName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.UserDisplayName
  href: AuxLabs.Twitch.Rest.Models.Video.UserDisplayName.html
  name: UserDisplayName
  nameWithType: Video.UserDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.Video.UserDisplayName
- uid: AuxLabs.Twitch.Rest.Models.Video.Title*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Title
  href: AuxLabs.Twitch.Rest.Models.Video.Title.html
  name: Title
  nameWithType: Video.Title
  fullName: AuxLabs.Twitch.Rest.Models.Video.Title
- uid: AuxLabs.Twitch.Rest.Models.Video.Description*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Description
  href: AuxLabs.Twitch.Rest.Models.Video.Description.html
  name: Description
  nameWithType: Video.Description
  fullName: AuxLabs.Twitch.Rest.Models.Video.Description
- uid: AuxLabs.Twitch.Rest.Models.Video.CreatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.CreatedAt
  href: AuxLabs.Twitch.Rest.Models.Video.CreatedAt.html
  name: CreatedAt
  nameWithType: Video.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.Video.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.Video.PublishedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.PublishedAt
  href: AuxLabs.Twitch.Rest.Models.Video.PublishedAt.html
  name: PublishedAt
  nameWithType: Video.PublishedAt
  fullName: AuxLabs.Twitch.Rest.Models.Video.PublishedAt
- uid: AuxLabs.Twitch.Rest.Models.Video.Url*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Url
  href: AuxLabs.Twitch.Rest.Models.Video.Url.html
  name: Url
  nameWithType: Video.Url
  fullName: AuxLabs.Twitch.Rest.Models.Video.Url
- uid: AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl
  href: AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl.html
  name: ThumbnailUrl
  nameWithType: Video.ThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Models.Video.ThumbnailUrl
- uid: AuxLabs.Twitch.Rest.Models.Video.Viewable*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Viewable
  href: AuxLabs.Twitch.Rest.Models.Video.Viewable.html
  name: Viewable
  nameWithType: Video.Viewable
  fullName: AuxLabs.Twitch.Rest.Models.Video.Viewable
- uid: AuxLabs.Twitch.Rest.Models.Video.ViewCount*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.ViewCount
  href: AuxLabs.Twitch.Rest.Models.Video.ViewCount.html
  name: ViewCount
  nameWithType: Video.ViewCount
  fullName: AuxLabs.Twitch.Rest.Models.Video.ViewCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Rest.Models.Video.Language*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Language
  href: AuxLabs.Twitch.Rest.Models.Video.Language.html
  name: Language
  nameWithType: Video.Language
  fullName: AuxLabs.Twitch.Rest.Models.Video.Language
- uid: AuxLabs.Twitch.Rest.Models.Video.Type*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Type
  href: AuxLabs.Twitch.Rest.Models.Video.Type.html
  name: Type
  nameWithType: Video.Type
  fullName: AuxLabs.Twitch.Rest.Models.Video.Type
- uid: AuxLabs.Twitch.VideoType
  commentId: T:AuxLabs.Twitch.VideoType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.VideoType.html
  name: VideoType
  nameWithType: VideoType
  fullName: AuxLabs.Twitch.VideoType
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.Video.Duration*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.Duration
  href: AuxLabs.Twitch.Rest.Models.Video.Duration.html
  name: Duration
  nameWithType: Video.Duration
  fullName: AuxLabs.Twitch.Rest.Models.Video.Duration
- uid: AuxLabs.Twitch.Rest.Models.Video.MutedSegments*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Video.MutedSegments
  href: AuxLabs.Twitch.Rest.Models.Video.MutedSegments.html
  name: MutedSegments
  nameWithType: Video.MutedSegments
  fullName: AuxLabs.Twitch.Rest.Models.Video.MutedSegments
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.VideoOffset}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.VideoOffset}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<VideoOffset>
  nameWithType: IReadOnlyCollection<VideoOffset>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Models.VideoOffset>
  nameWithType.vb: IReadOnlyCollection(Of VideoOffset)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Models.VideoOffset)
  name.vb: IReadOnlyCollection(Of VideoOffset)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.VideoOffset
    name: VideoOffset
    href: AuxLabs.Twitch.Rest.Models.VideoOffset.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.VideoOffset
    name: VideoOffset
    href: AuxLabs.Twitch.Rest.Models.VideoOffset.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
memberLayout: SeparatePages
