### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.Broadcast
  commentId: T:AuxLabs.Twitch.Rest.Models.Broadcast
  id: Broadcast
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.Broadcast.Culture
  - AuxLabs.Twitch.Rest.Models.Broadcast.GameId
  - AuxLabs.Twitch.Rest.Models.Broadcast.GameName
  - AuxLabs.Twitch.Rest.Models.Broadcast.Id
  - AuxLabs.Twitch.Rest.Models.Broadcast.IsMature
  - AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt
  - AuxLabs.Twitch.Rest.Models.Broadcast.Tags
  - AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl
  - AuxLabs.Twitch.Rest.Models.Broadcast.Title
  - AuxLabs.Twitch.Rest.Models.Broadcast.Type
  - AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName
  - AuxLabs.Twitch.Rest.Models.Broadcast.UserId
  - AuxLabs.Twitch.Rest.Models.Broadcast.UserName
  - AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount
  langs:
  - csharp
  - vb
  name: Broadcast
  nameWithType: Broadcast
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Broadcast
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class Broadcast
    content.vb: Public Class Broadcast
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Broadcast.Id
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies the stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.UserId
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.UserId
  id: UserId
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: Broadcast.UserId
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.UserId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID of the user that’s broadcasting the stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_id")]

      public string UserId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_id")>

      Public Property UserId As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.UserId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_id
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.UserName
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.UserName
  id: UserName
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: Broadcast.UserName
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.UserName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The user’s login name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_login")]

      public string UserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_login")>

      Public Property UserName As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.UserName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_login
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName
  id: UserDisplayName
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: UserDisplayName
  nameWithType: Broadcast.UserDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserDisplayName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The user’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_name")]

      public string UserDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_name")>

      Public Property UserDisplayName As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_name
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.GameId
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.GameId
  id: GameId
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: GameId
  nameWithType: Broadcast.GameId
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.GameId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GameId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID of the category or game being played.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("game_id")]

      public string GameId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("game_id")>

      Public Property GameId As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.GameId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: game_id
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.GameName
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.GameName
  id: GameName
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: GameName
  nameWithType: Broadcast.GameName
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.GameName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GameName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 30
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The name of the category or game being played.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("game_name")]

      public string GameName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("game_name")>

      Public Property GameName As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.GameName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: game_name
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Type
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.Type
  id: Type
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Broadcast.Type
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Type
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Type
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 34
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The type of stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("type")]

      public BroadcastType Type { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("type")>

      Public Property Type As BroadcastType
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Title
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.Title
  id: Title
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: Broadcast.Title
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 38
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The stream’s title.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("title")]

      public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("title")>

      Public Property Title As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Tags
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.Tags
  id: Tags
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: Broadcast.Tags
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Tags
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tags
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 42
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The tags applied to the stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("tags")]

      public IReadOnlyCollection<string> Tags { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("tags")>

      Public Property Tags As IReadOnlyCollection(Of String)
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.Tags*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tags
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount
  id: ViewerCount
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: ViewerCount
  nameWithType: Broadcast.ViewerCount
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ViewerCount
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 46
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The number of users watching the stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("viewer_count")]

      public int ViewerCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("viewer_count")>

      Public Property ViewerCount As Integer
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: viewer_count
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt
  id: StartedAt
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: StartedAt
  nameWithType: Broadcast.StartedAt
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StartedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 50
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of when the broadcast began.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("started_at")]

      public DateTime StartedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("started_at")>

      Public Property StartedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: started_at
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Culture
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.Culture
  id: Culture
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: Broadcast.Culture
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Culture
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Culture
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 54
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster's preferred language.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("language")]

      public CultureInfo Culture { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("language")>

      Public Property Culture As CultureInfo
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.Culture*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: language
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl
  id: ThumbnailUrl
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: ThumbnailUrl
  nameWithType: Broadcast.ThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ThumbnailUrl
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 58
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A URL to an image of a frame from the last 5 minutes of the stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("thumbnail_url")]

      public string ThumbnailUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("thumbnail_url")>

      Public Property ThumbnailUrl As String
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: thumbnail_url
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.IsMature
  commentId: P:AuxLabs.Twitch.Rest.Models.Broadcast.IsMature
  id: IsMature
  parent: AuxLabs.Twitch.Rest.Models.Broadcast
  langs:
  - csharp
  - vb
  name: IsMature
  nameWithType: Broadcast.IsMature
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.IsMature
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsMature
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Broadcasts/Broadcast.cs
    startLine: 62
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Indicates whether the stream is meant for mature audiences.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_mature")]

      public bool IsMature { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_mature")>

      Public Property IsMature As Boolean
  overload: AuxLabs.Twitch.Rest.Models.Broadcast.IsMature*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_mature
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.Id
  href: AuxLabs.Twitch.Rest.Models.Broadcast.Id.html
  name: Id
  nameWithType: Broadcast.Id
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.UserId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.UserId
  href: AuxLabs.Twitch.Rest.Models.Broadcast.UserId.html
  name: UserId
  nameWithType: Broadcast.UserId
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.UserId
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.UserName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.UserName
  href: AuxLabs.Twitch.Rest.Models.Broadcast.UserName.html
  name: UserName
  nameWithType: Broadcast.UserName
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.UserName
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName
  href: AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName.html
  name: UserDisplayName
  nameWithType: Broadcast.UserDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.UserDisplayName
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.GameId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.GameId
  href: AuxLabs.Twitch.Rest.Models.Broadcast.GameId.html
  name: GameId
  nameWithType: Broadcast.GameId
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.GameId
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.GameName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.GameName
  href: AuxLabs.Twitch.Rest.Models.Broadcast.GameName.html
  name: GameName
  nameWithType: Broadcast.GameName
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.GameName
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Type*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.Type
  href: AuxLabs.Twitch.Rest.Models.Broadcast.Type.html
  name: Type
  nameWithType: Broadcast.Type
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Type
- uid: AuxLabs.Twitch.BroadcastType
  commentId: T:AuxLabs.Twitch.BroadcastType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.BroadcastType.html
  name: BroadcastType
  nameWithType: BroadcastType
  fullName: AuxLabs.Twitch.BroadcastType
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Title*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.Title
  href: AuxLabs.Twitch.Rest.Models.Broadcast.Title.html
  name: Title
  nameWithType: Broadcast.Title
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Title
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Tags*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.Tags
  href: AuxLabs.Twitch.Rest.Models.Broadcast.Tags.html
  name: Tags
  nameWithType: Broadcast.Tags
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Tags
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<string>
  nameWithType: IReadOnlyCollection<string>
  fullName: System.Collections.Generic.IReadOnlyCollection<string>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount
  href: AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount.html
  name: ViewerCount
  nameWithType: Broadcast.ViewerCount
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.ViewerCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt
  href: AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt.html
  name: StartedAt
  nameWithType: Broadcast.StartedAt
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.StartedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.Culture*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.Culture
  href: AuxLabs.Twitch.Rest.Models.Broadcast.Culture.html
  name: Culture
  nameWithType: Broadcast.Culture
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.Culture
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl
  href: AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl.html
  name: ThumbnailUrl
  nameWithType: Broadcast.ThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.ThumbnailUrl
- uid: AuxLabs.Twitch.Rest.Models.Broadcast.IsMature*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Broadcast.IsMature
  href: AuxLabs.Twitch.Rest.Models.Broadcast.IsMature.html
  name: IsMature
  nameWithType: Broadcast.IsMature
  fullName: AuxLabs.Twitch.Rest.Models.Broadcast.IsMature
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
memberLayout: SeparatePages
