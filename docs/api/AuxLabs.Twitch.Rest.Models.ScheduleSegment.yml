### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  commentId: T:AuxLabs.Twitch.Rest.Models.ScheduleSegment
  id: ScheduleSegment
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil
  - AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category
  - AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt
  - AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id
  - AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring
  - AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt
  - AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title
  langs:
  - csharp
  - vb
  name: ScheduleSegment
  nameWithType: ScheduleSegment
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ScheduleSegment
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class ScheduleSegment
    content.vb: Public Class ScheduleSegment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ScheduleSegment.Id
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies this broadcast segment.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt
  commentId: P:AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt
  id: StartsAt
  parent: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  langs:
  - csharp
  - vb
  name: StartsAt
  nameWithType: ScheduleSegment.StartsAt
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StartsAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of when the broadcast starts.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("start_time")]

      public DateTime StartsAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("start_time")>

      Public Property StartsAt As Date
  overload: AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: start_time
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt
  commentId: P:AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt
  id: EndsAt
  parent: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  langs:
  - csharp
  - vb
  name: EndsAt
  nameWithType: ScheduleSegment.EndsAt
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EndsAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of when the broadcast ends.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("end_time")]

      public DateTime EndsAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("end_time")>

      Public Property EndsAt As Date
  overload: AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: end_time
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title
  commentId: P:AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title
  id: Title
  parent: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ScheduleSegment.Title
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcast segmentâ€™s title.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("title")]

      public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("title")>

      Public Property Title As String
  overload: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil
  commentId: P:AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil
  id: CancelledUntil
  parent: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  langs:
  - csharp
  - vb
  name: CancelledUntil
  nameWithType: ScheduleSegment.CancelledUntil
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CancelledUntil
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Indicates whether the broadcaster canceled this segment of a recurring broadcast.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("canceled_until")]

      public DateTime? CancelledUntil { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("canceled_until")>

      Public Property CancelledUntil As Date?
  overload: AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: canceled_until
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category
  commentId: P:AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category
  id: Category
  parent: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: ScheduleSegment.Category
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Category
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The type of content that the broadcaster plans to stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("category")]

      public Category Category { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Models.Category
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("category")>

      Public Property Category As Category
  overload: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: category
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring
  commentId: P:AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring
  id: IsRecurring
  parent: AuxLabs.Twitch.Rest.Models.ScheduleSegment
  langs:
  - csharp
  - vb
  name: IsRecurring
  nameWithType: ScheduleSegment.IsRecurring
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsRecurring
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Schedule/ScheduleSegment.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the broadcast is part of a recurring series that streams at the same time each week or is a one-time broadcast.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_recurring")]

      public bool IsRecurring { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_recurring")>

      Public Property IsRecurring As Boolean
  overload: AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_recurring
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id
  href: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id.html
  name: Id
  nameWithType: ScheduleSegment.Id
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt
  href: AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt.html
  name: StartsAt
  nameWithType: ScheduleSegment.StartsAt
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.StartsAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt
  href: AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt.html
  name: EndsAt
  nameWithType: ScheduleSegment.EndsAt
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.EndsAt
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title
  href: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title.html
  name: Title
  nameWithType: ScheduleSegment.Title
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Title
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil
  href: AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil.html
  name: CancelledUntil
  nameWithType: ScheduleSegment.CancelledUntil
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.CancelledUntil
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category
  href: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category.html
  name: Category
  nameWithType: ScheduleSegment.Category
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.Category
- uid: AuxLabs.Twitch.Rest.Models.Category
  commentId: T:AuxLabs.Twitch.Rest.Models.Category
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.Category.html
  name: Category
  nameWithType: Category
  fullName: AuxLabs.Twitch.Rest.Models.Category
- uid: AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring
  href: AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring.html
  name: IsRecurring
  nameWithType: ScheduleSegment.IsRecurring
  fullName: AuxLabs.Twitch.Rest.Models.ScheduleSegment.IsRecurring
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
memberLayout: SeparatePages
