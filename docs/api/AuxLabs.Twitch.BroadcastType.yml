### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.BroadcastType
  commentId: T:AuxLabs.Twitch.BroadcastType
  id: BroadcastType
  parent: AuxLabs.Twitch
  children:
  - AuxLabs.Twitch.BroadcastType.All
  - AuxLabs.Twitch.BroadcastType.Live
  - AuxLabs.Twitch.BroadcastType.Playlist
  - AuxLabs.Twitch.BroadcastType.Premiere
  - AuxLabs.Twitch.BroadcastType.Rerun
  - AuxLabs.Twitch.BroadcastType.Unknown
  - AuxLabs.Twitch.BroadcastType.WatchParty
  langs:
  - csharp
  - vb
  name: BroadcastType
  nameWithType: BroadcastType
  fullName: AuxLabs.Twitch.BroadcastType
  type: Enum
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcastType
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public enum BroadcastType
    content.vb: Public Enum BroadcastType
  extensionMethods:
  - AuxLabs.Twitch.BroadcastType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
- uid: AuxLabs.Twitch.BroadcastType.Unknown
  commentId: F:AuxLabs.Twitch.BroadcastType.Unknown
  id: Unknown
  parent: AuxLabs.Twitch.BroadcastType
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: BroadcastType.Unknown
  fullName: AuxLabs.Twitch.BroadcastType.Unknown
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Unknown
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: Unknown = 0
    return:
      type: AuxLabs.Twitch.BroadcastType
- uid: AuxLabs.Twitch.BroadcastType.All
  commentId: F:AuxLabs.Twitch.BroadcastType.All
  id: All
  parent: AuxLabs.Twitch.BroadcastType
  langs:
  - csharp
  - vb
  name: All
  nameWithType: BroadcastType.All
  fullName: AuxLabs.Twitch.BroadcastType.All
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: All
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "all")]

      All = 1
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: >-
      <EnumMember(Value:="all")>

      All = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: all
- uid: AuxLabs.Twitch.BroadcastType.Live
  commentId: F:AuxLabs.Twitch.BroadcastType.Live
  id: Live
  parent: AuxLabs.Twitch.BroadcastType
  langs:
  - csharp
  - vb
  name: Live
  nameWithType: BroadcastType.Live
  fullName: AuxLabs.Twitch.BroadcastType.Live
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Live
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "live")]

      Live = 2
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: >-
      <EnumMember(Value:="live")>

      Live = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: live
- uid: AuxLabs.Twitch.BroadcastType.Playlist
  commentId: F:AuxLabs.Twitch.BroadcastType.Playlist
  id: Playlist
  parent: AuxLabs.Twitch.BroadcastType
  langs:
  - csharp
  - vb
  name: Playlist
  nameWithType: BroadcastType.Playlist
  fullName: AuxLabs.Twitch.BroadcastType.Playlist
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Playlist
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "playlist")]

      Playlist = 3
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: >-
      <EnumMember(Value:="playlist")>

      Playlist = 3
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: playlist
- uid: AuxLabs.Twitch.BroadcastType.WatchParty
  commentId: F:AuxLabs.Twitch.BroadcastType.WatchParty
  id: WatchParty
  parent: AuxLabs.Twitch.BroadcastType
  langs:
  - csharp
  - vb
  name: WatchParty
  nameWithType: BroadcastType.WatchParty
  fullName: AuxLabs.Twitch.BroadcastType.WatchParty
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WatchParty
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "watch_party")]

      WatchParty = 4
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: >-
      <EnumMember(Value:="watch_party")>

      WatchParty = 4
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: watch_party
- uid: AuxLabs.Twitch.BroadcastType.Premiere
  commentId: F:AuxLabs.Twitch.BroadcastType.Premiere
  id: Premiere
  parent: AuxLabs.Twitch.BroadcastType
  langs:
  - csharp
  - vb
  name: Premiere
  nameWithType: BroadcastType.Premiere
  fullName: AuxLabs.Twitch.BroadcastType.Premiere
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Premiere
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "premiere")]

      Premiere = 5
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: >-
      <EnumMember(Value:="premiere")>

      Premiere = 5
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: premiere
- uid: AuxLabs.Twitch.BroadcastType.Rerun
  commentId: F:AuxLabs.Twitch.BroadcastType.Rerun
  id: Rerun
  parent: AuxLabs.Twitch.BroadcastType
  langs:
  - csharp
  - vb
  name: Rerun
  nameWithType: BroadcastType.Rerun
  fullName: AuxLabs.Twitch.BroadcastType.Rerun
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Rerun
    path: ../src/AuxLabs.Twitch.Core/Models/BroadcastType.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "rerun")]

      Rerun = 6
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: >-
      <EnumMember(Value:="rerun")>

      Rerun = 6
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: rerun
references:
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.BroadcastType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  parent: AuxLabs.Twitch.EnumHelper
  definition: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.BroadcastType).html
  name: GetStringValue<BroadcastType>(BroadcastType)
  nameWithType: EnumHelper.GetStringValue<BroadcastType>(BroadcastType)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<AuxLabs.Twitch.BroadcastType>(AuxLabs.Twitch.BroadcastType)
  nameWithType.vb: EnumHelper.GetStringValue(Of BroadcastType)(BroadcastType)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of AuxLabs.Twitch.BroadcastType)(AuxLabs.Twitch.BroadcastType)
  name.vb: GetStringValue(Of BroadcastType)(BroadcastType)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.BroadcastType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.BroadcastType).html
  - name: <
  - uid: AuxLabs.Twitch.BroadcastType
    name: BroadcastType
    href: AuxLabs.Twitch.BroadcastType.html
  - name: '>'
  - name: (
  - uid: AuxLabs.Twitch.BroadcastType
    name: BroadcastType
    href: AuxLabs.Twitch.BroadcastType.html
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.BroadcastType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.BroadcastType).html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.BroadcastType
    name: BroadcastType
    href: AuxLabs.Twitch.BroadcastType.html
  - name: )
  - name: (
  - uid: AuxLabs.Twitch.BroadcastType
    name: BroadcastType
    href: AuxLabs.Twitch.BroadcastType.html
  - name: )
- uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  name: GetStringValue<T>(T)
  nameWithType: EnumHelper.GetStringValue<T>(T)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<T>(T)
  nameWithType.vb: EnumHelper.GetStringValue(Of T)(T)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of T)(T)
  name.vb: GetStringValue(Of T)(T)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EnumHelper
  commentId: T:AuxLabs.Twitch.EnumHelper
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EnumHelper.html
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: AuxLabs.Twitch.EnumHelper
- uid: AuxLabs.Twitch.BroadcastType
  commentId: T:AuxLabs.Twitch.BroadcastType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.BroadcastType.html
  name: BroadcastType
  nameWithType: BroadcastType
  fullName: AuxLabs.Twitch.BroadcastType
memberLayout: SeparatePages
