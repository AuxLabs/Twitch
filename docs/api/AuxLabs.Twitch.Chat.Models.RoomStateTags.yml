### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags
  commentId: T:AuxLabs.Twitch.Chat.Models.RoomStateTags
  id: RoomStateTags
  parent: AuxLabs.Twitch.Chat.Models
  children:
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  - AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds
  langs:
  - csharp
  - vb
  name: RoomStateTags
  nameWithType: RoomStateTags
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RoomStateTags
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  syntax:
    content: 'public class RoomStateTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable'
    content.vb: Public Class RoomStateTags Inherits BaseTags Implements IDictionary(Of String, String), ICollection(Of KeyValuePair(Of String, String)), IEnumerable(Of KeyValuePair(Of String, String)), IEnumerable
  inheritance:
  - System.Object
  - AuxLabs.Twitch.QueryMap
  - AuxLabs.Twitch.Chat.Models.BaseTags
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.String}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId
  id: ChannelId
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: RoomStateTags.ChannelId
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelId
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: An ID that identifies the channel.
  example: []
  syntax:
    content: public string ChannelId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ChannelId As String
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly
  id: IsEmoteOnly
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: IsEmoteOnly
  nameWithType: RoomStateTags.IsEmoteOnly
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsEmoteOnly
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates whether the chat room allows only messages with emotes.
  example: []
  syntax:
    content: public bool? IsEmoteOnly { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property IsEmoteOnly As Boolean?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly
  id: IsFollowersOnly
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: IsFollowersOnly
  nameWithType: RoomStateTags.IsFollowersOnly
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsFollowersOnly
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates whether only followers can post messages in the chat room.
  example: []
  syntax:
    content: public bool? IsFollowersOnly { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property IsFollowersOnly As Boolean?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes
  id: FollowersOnlyMinutes
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: FollowersOnlyMinutes
  nameWithType: RoomStateTags.FollowersOnlyMinutes
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: FollowersOnlyMinutes
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates how long, in minutes, the user must have followed the broadcaster before posting chat messages.
  example: []
  syntax:
    content: public int? FollowersOnlyMinutes { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property FollowersOnlyMinutes As Integer?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled
  id: IsUniqueEnabled
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: IsUniqueEnabled
  nameWithType: RoomStateTags.IsUniqueEnabled
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsUniqueEnabled
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates whether a userâ€™s messages must be unique.
  example: []
  syntax:
    content: public bool? IsUniqueEnabled { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property IsUniqueEnabled As Boolean?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals
  id: IsRituals
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: IsRituals
  nameWithType: RoomStateTags.IsRituals
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsRituals
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: ''
  example: []
  syntax:
    content: public bool? IsRituals { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property IsRituals As Boolean?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled
  id: IsSlowEnabled
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: IsSlowEnabled
  nameWithType: RoomStateTags.IsSlowEnabled
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsSlowEnabled
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates whether users must wait between sending messages.
  example: []
  syntax:
    content: public bool? IsSlowEnabled { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property IsSlowEnabled As Boolean?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds
  id: SlowSeconds
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: SlowSeconds
  nameWithType: RoomStateTags.SlowSeconds
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SlowSeconds
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates how long, in seconds, users must wait between sending messages.
  example: []
  syntax:
    content: public int? SlowSeconds { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property SlowSeconds As Integer?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly
  commentId: P:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly
  id: IsSubscribersOnly
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: IsSubscribersOnly
  nameWithType: RoomStateTags.IsSubscribersOnly
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsSubscribersOnly
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 31
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates whether only subscribers and moderators can chat in the chat room.
  example: []
  syntax:
    content: public bool? IsSubscribersOnly { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property IsSubscribersOnly As Boolean?
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap
  commentId: M:AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap
  id: CreateQueryMap
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: CreateQueryMap()
  nameWithType: RoomStateTags.CreateQueryMap()
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CreateQueryMap
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 33
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  example: []
  syntax:
    content: public override IDictionary<string, string> CreateQueryMap()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Overrides Function CreateQueryMap() As IDictionary(Of String, String)
  overridden: AuxLabs.Twitch.QueryMap.CreateQueryMap
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap*
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  commentId: M:AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  id: LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  parent: AuxLabs.Twitch.Chat.Models.RoomStateTags
  langs:
  - csharp
  - vb
  name: LoadQueryMap(IReadOnlyDictionary<string, string>)
  nameWithType: RoomStateTags.LoadQueryMap(IReadOnlyDictionary<string, string>)
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary<string, string>)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LoadQueryMap
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/RoomStateTags.cs
    startLine: 47
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Fill a dictionary with tags in their query format.
  example: []
  syntax:
    content: public override void LoadQueryMap(IReadOnlyDictionary<string, string> map)
    parameters:
    - id: map
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    content.vb: Public Overrides Sub LoadQueryMap(map As IReadOnlyDictionary(Of String, String))
  overridden: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  overload: AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap*
  nameWithType.vb: RoomStateTags.LoadQueryMap(IReadOnlyDictionary(Of String, String))
  fullName.vb: AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary(Of String, String))
  name.vb: LoadQueryMap(IReadOnlyDictionary(Of String, String))
references:
- uid: AuxLabs.Twitch.Chat.Models
  commentId: N:AuxLabs.Twitch.Chat.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat.Models
  nameWithType: AuxLabs.Twitch.Chat.Models
  fullName: AuxLabs.Twitch.Chat.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Models
    name: Models
    href: AuxLabs.Twitch.Chat.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Models
    name: Models
    href: AuxLabs.Twitch.Chat.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.QueryMap
  commentId: T:AuxLabs.Twitch.QueryMap
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.QueryMap.html
  name: QueryMap
  nameWithType: QueryMap
  fullName: AuxLabs.Twitch.QueryMap
- uid: AuxLabs.Twitch.Chat.Models.BaseTags
  commentId: T:AuxLabs.Twitch.Chat.Models.BaseTags
  parent: AuxLabs.Twitch.Chat.Models
  href: AuxLabs.Twitch.Chat.Models.BaseTags.html
  name: BaseTags
  nameWithType: BaseTags
  fullName: AuxLabs.Twitch.Chat.Models.BaseTags
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<string, string>>
  nameWithType: ICollection<KeyValuePair<string, string>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of String, String))
  name.vb: ICollection(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<string, string>>
  nameWithType: IEnumerable<KeyValuePair<string, string>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId.html
  name: ChannelId
  nameWithType: RoomStateTags.ChannelId
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.ChannelId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly.html
  name: IsEmoteOnly
  nameWithType: RoomStateTags.IsEmoteOnly
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsEmoteOnly
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly.html
  name: IsFollowersOnly
  nameWithType: RoomStateTags.IsFollowersOnly
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsFollowersOnly
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes.html
  name: FollowersOnlyMinutes
  nameWithType: RoomStateTags.FollowersOnlyMinutes
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.FollowersOnlyMinutes
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled.html
  name: IsUniqueEnabled
  nameWithType: RoomStateTags.IsUniqueEnabled
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsUniqueEnabled
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals.html
  name: IsRituals
  nameWithType: RoomStateTags.IsRituals
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsRituals
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled.html
  name: IsSlowEnabled
  nameWithType: RoomStateTags.IsSlowEnabled
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSlowEnabled
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds.html
  name: SlowSeconds
  nameWithType: RoomStateTags.SlowSeconds
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.SlowSeconds
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly.html
  name: IsSubscribersOnly
  nameWithType: RoomStateTags.IsSubscribersOnly
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.IsSubscribersOnly
- uid: AuxLabs.Twitch.QueryMap.CreateQueryMap
  commentId: M:AuxLabs.Twitch.QueryMap.CreateQueryMap
  parent: AuxLabs.Twitch.QueryMap
  href: AuxLabs.Twitch.QueryMap.CreateQueryMap.html
  name: CreateQueryMap()
  nameWithType: QueryMap.CreateQueryMap()
  fullName: AuxLabs.Twitch.QueryMap.CreateQueryMap()
  spec.csharp:
  - uid: AuxLabs.Twitch.QueryMap.CreateQueryMap
    name: CreateQueryMap
    href: AuxLabs.Twitch.QueryMap.CreateQueryMap.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.QueryMap.CreateQueryMap
    name: CreateQueryMap
    href: AuxLabs.Twitch.QueryMap.CreateQueryMap.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap.html
  name: CreateQueryMap
  nameWithType: RoomStateTags.CreateQueryMap
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.CreateQueryMap
- uid: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  commentId: M:AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  parent: AuxLabs.Twitch.Chat.Models.BaseTags
  isExternal: true
  href: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  name: LoadQueryMap(IReadOnlyDictionary<string, string>)
  nameWithType: BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>)
  fullName: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary<string, string>)
  nameWithType.vb: BaseTags.LoadQueryMap(IReadOnlyDictionary(Of String, String))
  fullName.vb: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary(Of String, String))
  name.vb: LoadQueryMap(IReadOnlyDictionary(Of String, String))
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
    name: LoadQueryMap
    href: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  - name: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
    name: LoadQueryMap
    href: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  - name: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap
  href: AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  name: LoadQueryMap
  nameWithType: RoomStateTags.LoadQueryMap
  fullName: AuxLabs.Twitch.Chat.Models.RoomStateTags.LoadQueryMap
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, string>
  nameWithType: IReadOnlyDictionary<string, string>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, string>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
memberLayout: SeparatePages
