### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatChannel
  id: ChatChannel
  parent: AuxLabs.Twitch.Chat.Entities
  children:
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime
  - AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay
  langs:
  - csharp
  - vb
  name: ChatChannel
  nameWithType: ChatChannel
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChatChannel
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: 'public class ChatChannel : ChatSimpleChannel, IEquatable<ChatEntity<string>>, IEntity<string>'
    content.vb: Public Class ChatChannel Inherits ChatSimpleChannel Implements IEquatable(Of ChatEntity(Of String)), IEntity(Of String)
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  implements:
  - System.IEquatable{AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}}
  - AuxLabs.Twitch.IEntity{System.String}
  inheritedMembers:
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly
  id: IsEmoteOnly
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: IsEmoteOnly
  nameWithType: ChatChannel.IsEmoteOnly
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsEmoteOnly
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public bool IsEmoteOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEmoteOnly As Boolean
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly*
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly
  id: IsFollowersOnly
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: IsFollowersOnly
  nameWithType: ChatChannel.IsFollowersOnly
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsFollowersOnly
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public bool IsFollowersOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFollowersOnly As Boolean
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly*
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime
  id: RequiredFollowTime
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: RequiredFollowTime
  nameWithType: ChatChannel.RequiredFollowTime
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RequiredFollowTime
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public TimeSpan? RequiredFollowTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Public Property RequiredFollowTime As TimeSpan?
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime*
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled
  id: IsUniqueEnabled
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: IsUniqueEnabled
  nameWithType: ChatChannel.IsUniqueEnabled
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsUniqueEnabled
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public bool IsUniqueEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUniqueEnabled As Boolean
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled*
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled
  id: IsRitualsEnabled
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: IsRitualsEnabled
  nameWithType: ChatChannel.IsRitualsEnabled
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsRitualsEnabled
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public bool IsRitualsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRitualsEnabled As Boolean
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled*
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled
  id: IsSlowEnabled
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: IsSlowEnabled
  nameWithType: ChatChannel.IsSlowEnabled
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsSlowEnabled
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public bool IsSlowEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSlowEnabled As Boolean
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled*
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay
  id: SlowModeDelay
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: SlowModeDelay
  nameWithType: ChatChannel.SlowModeDelay
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SlowModeDelay
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public TimeSpan? SlowModeDelay { get; }
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Public Property SlowModeDelay As TimeSpan?
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay*
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly
  id: IsSubscribersOnly
  parent: AuxLabs.Twitch.Chat.Entities.ChatChannel
  langs:
  - csharp
  - vb
  name: IsSubscribersOnly
  nameWithType: ChatChannel.IsSubscribersOnly
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsSubscribersOnly
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatChannel.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: ''
  example: []
  syntax:
    content: public bool IsSubscribersOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSubscribersOnly As Boolean
  overload: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly*
references:
- uid: AuxLabs.Twitch.Chat.Entities
  commentId: N:AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat.Entities
  nameWithType: AuxLabs.Twitch.Chat.Entities
  fullName: AuxLabs.Twitch.Chat.Entities
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Entities
    name: Entities
    href: AuxLabs.Twitch.Chat.Entities.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Entities
    name: Entities
    href: AuxLabs.Twitch.Chat.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  parent: AuxLabs.Twitch.Chat.Entities
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  name: ChatEntity<string>
  nameWithType: ChatEntity<string>
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>
  nameWithType.vb: ChatEntity(Of String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String)
  name.vb: ChatEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  parent: AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.html
  name: ChatSimpleChannel
  nameWithType: ChatSimpleChannel
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
- uid: System.IEquatable{AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}}
  commentId: T:System.IEquatable{AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ChatEntity<string>>
  nameWithType: IEquatable<ChatEntity<string>>
  fullName: System.IEquatable<AuxLabs.Twitch.Chat.Entities.ChatEntity<string>>
  nameWithType.vb: IEquatable(Of ChatEntity(Of String))
  fullName.vb: System.IEquatable(Of AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String))
  name.vb: IEquatable(Of ChatEntity(Of String))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AuxLabs.Twitch.IEntity{System.String}
  commentId: T:AuxLabs.Twitch.IEntity{System.String}
  parent: AuxLabs.Twitch
  definition: AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<string>
  nameWithType: IEntity<string>
  fullName: AuxLabs.Twitch.IEntity<string>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: AuxLabs.Twitch.IEntity(Of String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser.html
  name: MyUser
  nameWithType: ChatSimpleChannel.MyUser
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name.html
  name: Name
  nameWithType: ChatSimpleChannel.Name
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString.html
  name: ToString()
  nameWithType: ChatSimpleChannel.ToString()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
    name: ToString
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
    name: ToString
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String).html
  name: GetUser(string)
  nameWithType: ChatSimpleChannel.GetUser(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(string)
  nameWithType.vb: ChatSimpleChannel.GetUser(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(String)
  name.vb: GetUser(String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
    name: GetUser
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
    name: GetUser
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String).html
  name: GetUserByName(string)
  nameWithType: ChatSimpleChannel.GetUserByName(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(string)
  nameWithType.vb: ChatSimpleChannel.GetUserByName(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(String)
  name.vb: GetUserByName(String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
    name: GetUserByName
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
    name: GetUserByName
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String).html
  name: GetMessage(string)
  nameWithType: ChatSimpleChannel.GetMessage(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(string)
  nameWithType.vb: ChatSimpleChannel.GetMessage(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(String)
  name.vb: GetMessage(String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
    name: GetMessage
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
    name: GetMessage
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32).html
  name: GetMessages(int)
  nameWithType: ChatSimpleChannel.GetMessages(int)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(int)
  nameWithType.vb: ChatSimpleChannel.GetMessages(Integer)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(Integer)
  name.vb: GetMessages(Integer)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
    name: GetMessages
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32).html
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
    name: GetMessages
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32).html
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String).html
  name: SendMessageAsync(string)
  nameWithType: ChatSimpleChannel.SendMessageAsync(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(string)
  nameWithType.vb: ChatSimpleChannel.SendMessageAsync(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(String)
  name.vb: SendMessageAsync(String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
    name: SendMessageAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
    name: SendMessageAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor}).html
  name: SendAnnouncementAsync(string, AnnouncementColor?)
  nameWithType: ChatSimpleChannel.SendAnnouncementAsync(string, AnnouncementColor?)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(string, AuxLabs.Twitch.AnnouncementColor?)
  nameWithType.vb: ChatSimpleChannel.SendAnnouncementAsync(String, AnnouncementColor?)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(String, AuxLabs.Twitch.AnnouncementColor?)
  name.vb: SendAnnouncementAsync(String, AnnouncementColor?)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
    name: SendAnnouncementAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor}).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AuxLabs.Twitch.AnnouncementColor
    name: AnnouncementColor
    href: AuxLabs.Twitch.AnnouncementColor.html
  - name: '?'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
    name: SendAnnouncementAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor}).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AuxLabs.Twitch.AnnouncementColor
    name: AnnouncementColor
    href: AuxLabs.Twitch.AnnouncementColor.html
  - name: '?'
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String).html
  name: SendShoutoutAsync(string)
  nameWithType: ChatSimpleChannel.SendShoutoutAsync(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(string)
  nameWithType.vb: ChatSimpleChannel.SendShoutoutAsync(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(String)
  name.vb: SendShoutoutAsync(String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
    name: SendShoutoutAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
    name: SendShoutoutAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32).html
  name: GetChattersAsync(int)
  nameWithType: ChatSimpleChannel.GetChattersAsync(int)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(int)
  nameWithType.vb: ChatSimpleChannel.GetChattersAsync(Integer)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(Integer)
  name.vb: GetChattersAsync(Integer)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
    name: GetChattersAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32).html
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
    name: GetChattersAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32).html
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync.html
  name: GetEmotesAsync()
  nameWithType: ChatSimpleChannel.GetEmotesAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
    name: GetEmotesAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
    name: GetEmotesAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync.html
  name: GetChatSettingsAsync()
  nameWithType: ChatSimpleChannel.GetChatSettingsAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
    name: GetChatSettingsAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
    name: GetChatSettingsAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody}).html
  name: ModifyChatSettingsAsync(Action<PatchChatSettingsBody>)
  nameWithType: ChatSimpleChannel.ModifyChatSettingsAsync(Action<PatchChatSettingsBody>)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action<AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody>)
  nameWithType.vb: ChatSimpleChannel.ModifyChatSettingsAsync(Action(Of PatchChatSettingsBody))
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action(Of AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody))
  name.vb: ModifyChatSettingsAsync(Action(Of PatchChatSettingsBody))
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
    name: ModifyChatSettingsAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody}).html
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody
    name: PatchChatSettingsBody
    href: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
    name: ModifyChatSettingsAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody}).html
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody
    name: PatchChatSettingsBody
    href: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody.html
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync.html
  name: GetChannelAsync()
  nameWithType: ChatSimpleChannel.GetChannelAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
    name: GetChannelAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
    name: GetChannelAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync.html
  name: GetUserAsync()
  nameWithType: ChatSimpleChannel.GetUserAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
    name: GetUserAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
    name: GetUserAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String).html
  name: GetFollowerAsync(string)
  nameWithType: ChatSimpleChannel.GetFollowerAsync(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(string)
  nameWithType.vb: ChatSimpleChannel.GetFollowerAsync(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(String)
  name.vb: GetFollowerAsync(String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
    name: GetFollowerAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
    name: GetFollowerAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32).html
  name: GetFollowersAsync(int)
  nameWithType: ChatSimpleChannel.GetFollowersAsync(int)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(int)
  nameWithType.vb: ChatSimpleChannel.GetFollowersAsync(Integer)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(Integer)
  name.vb: GetFollowersAsync(Integer)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
    name: GetFollowersAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32).html
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
    name: GetFollowersAsync
    href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32).html
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Id
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id.html
  name: Id
  nameWithType: ChatEntity<string>.Id
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.Id
  nameWithType.vb: ChatEntity(Of String).Id
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).Id
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}).html
  name: Equals(ChatEntity<string>)
  nameWithType: ChatEntity<string>.Equals(ChatEntity<string>)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity<string>)
  nameWithType.vb: ChatEntity(Of String).Equals(ChatEntity(Of String))
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String))
  name.vb: Equals(ChatEntity(Of String))
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object).html
  name: Equals(object)
  nameWithType: ChatEntity<string>.Equals(object)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.Equals(object)
  nameWithType.vb: ChatEntity(Of String).Equals(Object)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode.html
  name: GetHashCode()
  nameWithType: ChatEntity<string>.GetHashCode()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.GetHashCode()
  nameWithType.vb: ChatEntity(Of String).GetHashCode()
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).GetHashCode()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode.html
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatEntity`1
  parent: AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  name: ChatEntity<T>
  nameWithType: ChatEntity<T>
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>
  nameWithType.vb: ChatEntity(Of T)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T)
  name.vb: ChatEntity(Of T)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.IEntity`1
  commentId: T:AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: AuxLabs.Twitch.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: AuxLabs.Twitch.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - name: TId
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: )
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Id
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Id
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Id.html
  name: Id
  nameWithType: ChatEntity<T>.Id
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.Id
  nameWithType.vb: ChatEntity(Of T).Id
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).Id
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{-0}).html
  name: Equals(ChatEntity<T>)
  nameWithType: ChatEntity<T>.Equals(ChatEntity<T>)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity<T>)
  nameWithType.vb: ChatEntity(Of T).Equals(ChatEntity(Of T))
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T))
  name.vb: Equals(ChatEntity(Of T))
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{-0}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{-0}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(System.Object).html
  name: Equals(object)
  nameWithType: ChatEntity<T>.Equals(object)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.Equals(object)
  nameWithType.vb: ChatEntity(Of T).Equals(Object)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.GetHashCode.html
  name: GetHashCode()
  nameWithType: ChatEntity<T>.GetHashCode()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.GetHashCode()
  nameWithType.vb: ChatEntity(Of T).GetHashCode()
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).GetHashCode()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.GetHashCode.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.GetHashCode.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly.html
  name: IsEmoteOnly
  nameWithType: ChatChannel.IsEmoteOnly
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsEmoteOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly.html
  name: IsFollowersOnly
  nameWithType: ChatChannel.IsFollowersOnly
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsFollowersOnly
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime.html
  name: RequiredFollowTime
  nameWithType: ChatChannel.RequiredFollowTime
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.RequiredFollowTime
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled.html
  name: IsUniqueEnabled
  nameWithType: ChatChannel.IsUniqueEnabled
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsUniqueEnabled
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled.html
  name: IsRitualsEnabled
  nameWithType: ChatChannel.IsRitualsEnabled
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsRitualsEnabled
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled.html
  name: IsSlowEnabled
  nameWithType: ChatChannel.IsSlowEnabled
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSlowEnabled
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay.html
  name: SlowModeDelay
  nameWithType: ChatChannel.SlowModeDelay
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.SlowModeDelay
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly
  href: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly.html
  name: IsSubscribersOnly
  nameWithType: ChatChannel.IsSubscribersOnly
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannel.IsSubscribersOnly
memberLayout: SeparatePages
