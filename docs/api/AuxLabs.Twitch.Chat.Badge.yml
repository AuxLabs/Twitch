### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.Badge
  commentId: T:AuxLabs.Twitch.Chat.Badge
  id: Badge
  parent: AuxLabs.Twitch.Chat
  children:
  - AuxLabs.Twitch.Chat.Badge.#ctor(System.String,System.String)
  - AuxLabs.Twitch.Chat.Badge.Name
  - AuxLabs.Twitch.Chat.Badge.Parse(System.String,AuxLabs.Twitch.Chat.Badge@)
  - AuxLabs.Twitch.Chat.Badge.ToString
  - AuxLabs.Twitch.Chat.Badge.TryParseMany(System.String,System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}@)
  - AuxLabs.Twitch.Chat.Badge.Version
  langs:
  - csharp
  - vb
  name: Badge
  nameWithType: Badge
  fullName: AuxLabs.Twitch.Chat.Badge
  type: Struct
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Badge
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: public readonly struct Badge
    content.vb: Public Structure Badge
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AuxLabs.Twitch.Chat.Badge.Name
  commentId: P:AuxLabs.Twitch.Chat.Badge.Name
  id: Name
  parent: AuxLabs.Twitch.Chat.Badge
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Badge.Name
  fullName: AuxLabs.Twitch.Chat.Badge.Name
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Name
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  summary: The badge's name.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: AuxLabs.Twitch.Chat.Badge.Name*
- uid: AuxLabs.Twitch.Chat.Badge.Version
  commentId: P:AuxLabs.Twitch.Chat.Badge.Version
  id: Version
  parent: AuxLabs.Twitch.Chat.Badge
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Badge.Version
  fullName: AuxLabs.Twitch.Chat.Badge.Version
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Version
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  summary: Information relating to the badge.
  example: []
  syntax:
    content: public string Version { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Version As String
  overload: AuxLabs.Twitch.Chat.Badge.Version*
- uid: AuxLabs.Twitch.Chat.Badge.#ctor(System.String,System.String)
  commentId: M:AuxLabs.Twitch.Chat.Badge.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: AuxLabs.Twitch.Chat.Badge
  langs:
  - csharp
  - vb
  name: Badge(string, string)
  nameWithType: Badge.Badge(string, string)
  fullName: AuxLabs.Twitch.Chat.Badge.Badge(string, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: public Badge(string name, string version = "1")
    parameters:
    - id: name
      type: System.String
    - id: version
      type: System.String
    content.vb: Public Sub New(name As String, version As String = "1")
  overload: AuxLabs.Twitch.Chat.Badge.#ctor*
  nameWithType.vb: Badge.New(String, String)
  fullName.vb: AuxLabs.Twitch.Chat.Badge.New(String, String)
  name.vb: New(String, String)
- uid: AuxLabs.Twitch.Chat.Badge.ToString
  commentId: M:AuxLabs.Twitch.Chat.Badge.ToString
  id: ToString
  parent: AuxLabs.Twitch.Chat.Badge
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Badge.ToString()
  fullName: AuxLabs.Twitch.Chat.Badge.ToString()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ToString
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: AuxLabs.Twitch.Chat.Badge.ToString*
- uid: AuxLabs.Twitch.Chat.Badge.Parse(System.String,AuxLabs.Twitch.Chat.Badge@)
  commentId: M:AuxLabs.Twitch.Chat.Badge.Parse(System.String,AuxLabs.Twitch.Chat.Badge@)
  id: Parse(System.String,AuxLabs.Twitch.Chat.Badge@)
  parent: AuxLabs.Twitch.Chat.Badge
  langs:
  - csharp
  - vb
  name: Parse(string, out Badge)
  nameWithType: Badge.Parse(string, out Badge)
  fullName: AuxLabs.Twitch.Chat.Badge.Parse(string, out AuxLabs.Twitch.Chat.Badge)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Parse
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: public static void Parse(string value, out Badge badge)
    parameters:
    - id: value
      type: System.String
    - id: badge
      type: AuxLabs.Twitch.Chat.Badge
    content.vb: Public Shared Sub Parse(value As String, badge As Badge)
  overload: AuxLabs.Twitch.Chat.Badge.Parse*
  nameWithType.vb: Badge.Parse(String, Badge)
  fullName.vb: AuxLabs.Twitch.Chat.Badge.Parse(String, AuxLabs.Twitch.Chat.Badge)
  name.vb: Parse(String, Badge)
- uid: AuxLabs.Twitch.Chat.Badge.TryParseMany(System.String,System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}@)
  commentId: M:AuxLabs.Twitch.Chat.Badge.TryParseMany(System.String,System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}@)
  id: TryParseMany(System.String,System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}@)
  parent: AuxLabs.Twitch.Chat.Badge
  langs:
  - csharp
  - vb
  name: TryParseMany(string, out IReadOnlyCollection<Badge>)
  nameWithType: Badge.TryParseMany(string, out IReadOnlyCollection<Badge>)
  fullName: AuxLabs.Twitch.Chat.Badge.TryParseMany(string, out System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Chat.Badge>)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TryParseMany
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Badge.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: public static bool TryParseMany(string value, out IReadOnlyCollection<Badge> badges)
    parameters:
    - id: value
      type: System.String
    - id: badges
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseMany(value As String, badges As IReadOnlyCollection(Of Badge)) As Boolean
  overload: AuxLabs.Twitch.Chat.Badge.TryParseMany*
  nameWithType.vb: Badge.TryParseMany(String, IReadOnlyCollection(Of Badge))
  fullName.vb: AuxLabs.Twitch.Chat.Badge.TryParseMany(String, System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Chat.Badge))
  name.vb: TryParseMany(String, IReadOnlyCollection(Of Badge))
references:
- uid: AuxLabs.Twitch.Chat
  commentId: N:AuxLabs.Twitch.Chat
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat
  nameWithType: AuxLabs.Twitch.Chat
  fullName: AuxLabs.Twitch.Chat
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Chat.Badge.Name*
  commentId: Overload:AuxLabs.Twitch.Chat.Badge.Name
  href: AuxLabs.Twitch.Chat.Badge.Name.html
  name: Name
  nameWithType: Badge.Name
  fullName: AuxLabs.Twitch.Chat.Badge.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Chat.Badge.Version*
  commentId: Overload:AuxLabs.Twitch.Chat.Badge.Version
  href: AuxLabs.Twitch.Chat.Badge.Version.html
  name: Version
  nameWithType: Badge.Version
  fullName: AuxLabs.Twitch.Chat.Badge.Version
- uid: AuxLabs.Twitch.Chat.Badge.#ctor*
  commentId: Overload:AuxLabs.Twitch.Chat.Badge.#ctor
  href: AuxLabs.Twitch.Chat.Badge.#ctor(System.String,System.String).html
  name: Badge
  nameWithType: Badge.Badge
  fullName: AuxLabs.Twitch.Chat.Badge.Badge
  nameWithType.vb: Badge.New
  fullName.vb: AuxLabs.Twitch.Chat.Badge.New
  name.vb: New
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Badge.ToString*
  commentId: Overload:AuxLabs.Twitch.Chat.Badge.ToString
  href: AuxLabs.Twitch.Chat.Badge.ToString.html
  name: ToString
  nameWithType: Badge.ToString
  fullName: AuxLabs.Twitch.Chat.Badge.ToString
- uid: AuxLabs.Twitch.Chat.Badge.Parse*
  commentId: Overload:AuxLabs.Twitch.Chat.Badge.Parse
  href: AuxLabs.Twitch.Chat.Badge.Parse(System.String,AuxLabs.Twitch.Chat.Badge@).html
  name: Parse
  nameWithType: Badge.Parse
  fullName: AuxLabs.Twitch.Chat.Badge.Parse
- uid: AuxLabs.Twitch.Chat.Badge
  commentId: T:AuxLabs.Twitch.Chat.Badge
  parent: AuxLabs.Twitch.Chat
  href: AuxLabs.Twitch.Chat.Badge.html
  name: Badge
  nameWithType: Badge
  fullName: AuxLabs.Twitch.Chat.Badge
- uid: AuxLabs.Twitch.Chat.Badge.TryParseMany*
  commentId: Overload:AuxLabs.Twitch.Chat.Badge.TryParseMany
  href: AuxLabs.Twitch.Chat.Badge.TryParseMany(System.String,System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}@).html
  name: TryParseMany
  nameWithType: Badge.TryParseMany
  fullName: AuxLabs.Twitch.Chat.Badge.TryParseMany
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<Badge>
  nameWithType: IReadOnlyCollection<Badge>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Chat.Badge>
  nameWithType.vb: IReadOnlyCollection(Of Badge)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Chat.Badge)
  name.vb: IReadOnlyCollection(Of Badge)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Badge
    name: Badge
    href: AuxLabs.Twitch.Chat.Badge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Badge
    name: Badge
    href: AuxLabs.Twitch.Chat.Badge.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
memberLayout: SeparatePages
