### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.Redemption
  commentId: T:AuxLabs.Twitch.Rest.Models.Redemption
  id: Redemption
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId
  - AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin
  - AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName
  - AuxLabs.Twitch.Rest.Models.Redemption.Id
  - AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt
  - AuxLabs.Twitch.Rest.Models.Redemption.Reward
  - AuxLabs.Twitch.Rest.Models.Redemption.Status
  - AuxLabs.Twitch.Rest.Models.Redemption.UserId
  - AuxLabs.Twitch.Rest.Models.Redemption.UserInput
  - AuxLabs.Twitch.Rest.Models.Redemption.UserLogin
  - AuxLabs.Twitch.Rest.Models.Redemption.UserName
  langs:
  - csharp
  - vb
  name: Redemption
  nameWithType: Redemption
  fullName: AuxLabs.Twitch.Rest.Models.Redemption
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Redemption
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class Redemption
    content.vb: Public Class Redemption
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: Redemption.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID that uniquely identifies the broadcaster.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_id")]

      public string BroadcasterId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_id
- uid: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin
  id: BroadcasterLogin
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: BroadcasterLogin
  nameWithType: Redemption.BroadcasterLogin
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterLogin
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s login name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_login")]

      public string BroadcasterLogin { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_login")>

      Public Property BroadcasterLogin As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_login
- uid: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName
  id: BroadcasterName
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: BroadcasterName
  nameWithType: Redemption.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_name")]

      public string BroadcasterName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_name")>

      Public Property BroadcasterName As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_name
- uid: AuxLabs.Twitch.Rest.Models.Redemption.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Redemption.Id
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID that uniquely identifies this redemption.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserLogin
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.UserLogin
  id: UserLogin
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: UserLogin
  nameWithType: Redemption.UserLogin
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserLogin
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserLogin
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The user’s login name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_login")]

      public string UserLogin { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_login")>

      Public Property UserLogin As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.UserLogin*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_login
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserId
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.UserId
  id: UserId
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: Redemption.UserId
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID that uniquely identifies the user that redeemed the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_id")]

      public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_id")>

      Public Property UserId As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.UserId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_id
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserName
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.UserName
  id: UserName
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: Redemption.UserName
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The user’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_name")]

      public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_name")>

      Public Property UserName As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.UserName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_name
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserInput
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.UserInput
  id: UserInput
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: UserInput
  nameWithType: Redemption.UserInput
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserInput
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserInput
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 36
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The text the user entered at the prompt when they redeemed the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("user_input")]

      public string UserInput { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("user_input")>

      Public Property UserInput As String
  overload: AuxLabs.Twitch.Rest.Models.Redemption.UserInput*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_input
- uid: AuxLabs.Twitch.Rest.Models.Redemption.Status
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.Status
  id: Status
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Redemption.Status
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.Status
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Status
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 40
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The state of the redemption.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("status")]

      public RedemptionStatus Status { get; set; }
    parameters: []
    return:
      type: AuxLabs.Twitch.RedemptionStatus
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("status")>

      Public Property Status As RedemptionStatus
  overload: AuxLabs.Twitch.Rest.Models.Redemption.Status*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
- uid: AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt
  id: RedeemedAt
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: RedeemedAt
  nameWithType: Redemption.RedeemedAt
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RedeemedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 44
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The date and time of when the reward was redeemed
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("redeemed_at")]

      public DateTime RedeemedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("redeemed_at")>

      Public Property RedeemedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: redeemed_at
- uid: AuxLabs.Twitch.Rest.Models.Redemption.Reward
  commentId: P:AuxLabs.Twitch.Rest.Models.Redemption.Reward
  id: Reward
  parent: AuxLabs.Twitch.Rest.Models.Redemption
  langs:
  - csharp
  - vb
  name: Reward
  nameWithType: Redemption.Reward
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.Reward
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Reward
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Redemption.cs
    startLine: 48
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The reward that the user redeemed.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("reward")]

      public SimpleReward Reward { get; set; }
    parameters: []
    return:
      type: AuxLabs.Twitch.SimpleReward
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("reward")>

      Public Property Reward As SimpleReward
  overload: AuxLabs.Twitch.Rest.Models.Redemption.Reward*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reward
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId
  href: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId.html
  name: BroadcasterId
  nameWithType: Redemption.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin
  href: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin.html
  name: BroadcasterLogin
  nameWithType: Redemption.BroadcasterLogin
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterLogin
- uid: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName
  href: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName.html
  name: BroadcasterName
  nameWithType: Redemption.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.BroadcasterName
- uid: AuxLabs.Twitch.Rest.Models.Redemption.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.Id
  href: AuxLabs.Twitch.Rest.Models.Redemption.Id.html
  name: Id
  nameWithType: Redemption.Id
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.Id
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserLogin*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.UserLogin
  href: AuxLabs.Twitch.Rest.Models.Redemption.UserLogin.html
  name: UserLogin
  nameWithType: Redemption.UserLogin
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserLogin
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.UserId
  href: AuxLabs.Twitch.Rest.Models.Redemption.UserId.html
  name: UserId
  nameWithType: Redemption.UserId
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserId
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.UserName
  href: AuxLabs.Twitch.Rest.Models.Redemption.UserName.html
  name: UserName
  nameWithType: Redemption.UserName
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserName
- uid: AuxLabs.Twitch.Rest.Models.Redemption.UserInput*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.UserInput
  href: AuxLabs.Twitch.Rest.Models.Redemption.UserInput.html
  name: UserInput
  nameWithType: Redemption.UserInput
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.UserInput
- uid: AuxLabs.Twitch.Rest.Models.Redemption.Status*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.Status
  href: AuxLabs.Twitch.Rest.Models.Redemption.Status.html
  name: Status
  nameWithType: Redemption.Status
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.Status
- uid: AuxLabs.Twitch.RedemptionStatus
  commentId: T:AuxLabs.Twitch.RedemptionStatus
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.RedemptionStatus.html
  name: RedemptionStatus
  nameWithType: RedemptionStatus
  fullName: AuxLabs.Twitch.RedemptionStatus
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt
  href: AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt.html
  name: RedeemedAt
  nameWithType: Redemption.RedeemedAt
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.RedeemedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.Redemption.Reward*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Redemption.Reward
  href: AuxLabs.Twitch.Rest.Models.Redemption.Reward.html
  name: Reward
  nameWithType: Redemption.Reward
  fullName: AuxLabs.Twitch.Rest.Models.Redemption.Reward
- uid: AuxLabs.Twitch.SimpleReward
  commentId: T:AuxLabs.Twitch.SimpleReward
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.SimpleReward.html
  name: SimpleReward
  nameWithType: SimpleReward
  fullName: AuxLabs.Twitch.SimpleReward
memberLayout: SeparatePages
