### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  id: ChatSimpleChannel
  parent: AuxLabs.Twitch.Chat.Entities
  children:
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
  - AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
  langs:
  - csharp
  - vb
  name: ChatSimpleChannel
  nameWithType: ChatSimpleChannel
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChatSimpleChannel
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: 'public class ChatSimpleChannel : ChatEntity<string>, IEquatable<ChatEntity<string>>, IEntity<string>'
    content.vb: Public Class ChatSimpleChannel Inherits ChatEntity(Of String) Implements IEquatable(Of ChatEntity(Of String)), IEntity(Of String)
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  derivedClasses:
  - AuxLabs.Twitch.Chat.Entities.ChatChannel
  implements:
  - System.IEquatable{AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}}
  - AuxLabs.Twitch.IEntity{System.String}
  inheritedMembers:
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
  - AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  id: MyUser
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: MyUser
  nameWithType: ChatSimpleChannel.MyUser
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MyUser
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: The currently authorized user
  example: []
  syntax:
    content: public ChatChannelSelfUser MyUser { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Chat.Entities.ChatChannelSelfUser
    content.vb: Public Property MyUser As ChatChannelSelfUser
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser*
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  id: Name
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ChatSimpleChannel.Name
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Name
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: The channel's name
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name*
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
  id: ToString
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ChatSimpleChannel.ToString()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ToString
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString*
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String)
  id: GetUser(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetUser(string)
  nameWithType: ChatSimpleChannel.GetUser(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetUser
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 62
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public ChatSimpleUser GetUser(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: AuxLabs.Twitch.Chat.Entities.ChatSimpleUser
    content.vb: Public Function GetUser(id As String) As ChatSimpleUser
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser*
  nameWithType.vb: ChatSimpleChannel.GetUser(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(String)
  name.vb: GetUser(String)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String)
  id: GetUserByName(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetUserByName(string)
  nameWithType: ChatSimpleChannel.GetUserByName(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetUserByName
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 64
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public ChatSimpleUser GetUserByName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: AuxLabs.Twitch.Chat.Entities.ChatSimpleUser
    content.vb: Public Function GetUserByName(name As String) As ChatSimpleUser
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName*
  nameWithType.vb: ChatSimpleChannel.GetUserByName(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(String)
  name.vb: GetUserByName(String)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String)
  id: GetMessage(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetMessage(string)
  nameWithType: ChatSimpleChannel.GetMessage(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetMessage
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 90
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public ChatMessage GetMessage(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: AuxLabs.Twitch.Chat.Entities.ChatMessage
    content.vb: Public Function GetMessage(id As String) As ChatMessage
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage*
  nameWithType.vb: ChatSimpleChannel.GetMessage(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(String)
  name.vb: GetMessage(String)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32)
  id: GetMessages(System.Int32)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetMessages(int)
  nameWithType: ChatSimpleChannel.GetMessages(int)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(int)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetMessages
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 92
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public IReadOnlyCollection<ChatMessage> GetMessages(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Entities.ChatMessage}
    content.vb: Public Function GetMessages(count As Integer) As IReadOnlyCollection(Of ChatMessage)
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages*
  nameWithType.vb: ChatSimpleChannel.GetMessages(Integer)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(Integer)
  name.vb: GetMessages(Integer)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String)
  id: SendMessageAsync(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: SendMessageAsync(string)
  nameWithType: ChatSimpleChannel.SendMessageAsync(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SendMessageAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 105
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task SendMessageAsync(string message)
    parameters:
    - id: message
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendMessageAsync(message As String) As Task
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync*
  nameWithType.vb: ChatSimpleChannel.SendMessageAsync(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(String)
  name.vb: SendMessageAsync(String)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
  id: SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor})
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: SendAnnouncementAsync(string, AnnouncementColor?)
  nameWithType: ChatSimpleChannel.SendAnnouncementAsync(string, AnnouncementColor?)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(string, AuxLabs.Twitch.AnnouncementColor?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SendAnnouncementAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 111
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task SendAnnouncementAsync(string message, AnnouncementColor? color = null)
    parameters:
    - id: message
      type: System.String
    - id: color
      type: System.Nullable{AuxLabs.Twitch.AnnouncementColor}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendAnnouncementAsync(message As String, color As AnnouncementColor? = Nothing) As Task
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync*
  nameWithType.vb: ChatSimpleChannel.SendAnnouncementAsync(String, AnnouncementColor?)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(String, AuxLabs.Twitch.AnnouncementColor?)
  name.vb: SendAnnouncementAsync(String, AnnouncementColor?)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String)
  id: SendShoutoutAsync(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: SendShoutoutAsync(string)
  nameWithType: ChatSimpleChannel.SendShoutoutAsync(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SendShoutoutAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 113
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task SendShoutoutAsync(string channelId)
    parameters:
    - id: channelId
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendShoutoutAsync(channelId As String) As Task
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync*
  nameWithType.vb: ChatSimpleChannel.SendShoutoutAsync(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(String)
  name.vb: SendShoutoutAsync(String)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32)
  id: GetChattersAsync(System.Int32)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetChattersAsync(int)
  nameWithType: ChatSimpleChannel.GetChattersAsync(int)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(int)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetChattersAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 115
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public IAsyncEnumerable<IReadOnlyCollection<RestSimpleUser>> GetChattersAsync(int count = 20)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestSimpleUser}}
    content.vb: Public Function GetChattersAsync(count As Integer = 20) As IAsyncEnumerable(Of IReadOnlyCollection(Of RestSimpleUser))
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync*
  nameWithType.vb: ChatSimpleChannel.GetChattersAsync(Integer)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(Integer)
  name.vb: GetChattersAsync(Integer)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
  id: GetEmotesAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetEmotesAsync()
  nameWithType: ChatSimpleChannel.GetEmotesAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetEmotesAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 117
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task<IReadOnlyCollection<RestEmote>> GetEmotesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestEmote}}
    content.vb: Public Function GetEmotesAsync() As Task(Of IReadOnlyCollection(Of RestEmote))
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync*
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
  id: GetChatSettingsAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetChatSettingsAsync()
  nameWithType: ChatSimpleChannel.GetChatSettingsAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetChatSettingsAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 119
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task<ChatSettings> GetChatSettingsAsync()
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.ChatSettings}
    content.vb: Public Function GetChatSettingsAsync() As Task(Of ChatSettings)
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync*
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
  id: ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody})
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: ModifyChatSettingsAsync(Action<PatchChatSettingsBody>)
  nameWithType: ChatSimpleChannel.ModifyChatSettingsAsync(Action<PatchChatSettingsBody>)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action<AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody>)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ModifyChatSettingsAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 121
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task<ChatSettings> ModifyChatSettingsAsync(Action<PatchChatSettingsBody> func)
    parameters:
    - id: func
      type: System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody}
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.ChatSettings}
    content.vb: Public Function ModifyChatSettingsAsync(func As Action(Of PatchChatSettingsBody)) As Task(Of ChatSettings)
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync*
  nameWithType.vb: ChatSimpleChannel.ModifyChatSettingsAsync(Action(Of PatchChatSettingsBody))
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action(Of AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody))
  name.vb: ModifyChatSettingsAsync(Action(Of PatchChatSettingsBody))
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
  id: GetChannelAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetChannelAsync()
  nameWithType: ChatSimpleChannel.GetChannelAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetChannelAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 126
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: Get more info about this channel.
  example: []
  syntax:
    content: public Task<RestChannel> GetChannelAsync()
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
    content.vb: Public Function GetChannelAsync() As Task(Of RestChannel)
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync*
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
  id: GetUserAsync
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetUserAsync()
  nameWithType: ChatSimpleChannel.GetUserAsync()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetUserAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 130
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  summary: Get the user associated with this channel.
  example: []
  syntax:
    content: public Task<RestUser> GetUserAsync()
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestUser}
    content.vb: Public Function GetUserAsync() As Task(Of RestUser)
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync*
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String)
  id: GetFollowerAsync(System.String)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetFollowerAsync(string)
  nameWithType: ChatSimpleChannel.GetFollowerAsync(string)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetFollowerAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 133
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task<RestFollower> GetFollowerAsync(string userId)
    parameters:
    - id: userId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollower}
    content.vb: Public Function GetFollowerAsync(userId As String) As Task(Of RestFollower)
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync*
  nameWithType.vb: ChatSimpleChannel.GetFollowerAsync(String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(String)
  name.vb: GetFollowerAsync(String)
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32)
  id: GetFollowersAsync(System.Int32)
  parent: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel
  langs:
  - csharp
  - vb
  name: GetFollowersAsync(int)
  nameWithType: ChatSimpleChannel.GetFollowersAsync(int)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(int)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetFollowersAsync
    path: ../src/AuxLabs.Twitch.Chat/Entities/Channels/ChatSimpleChannel.cs
    startLine: 135
  assemblies:
  - AuxLabs.Twitch.Chat
  namespace: AuxLabs.Twitch.Chat.Entities
  syntax:
    content: public Task<(IReadOnlyCollection<RestFollower> Followers, int Total)> GetFollowersAsync(int count = 20)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}}
    content.vb: Public Function GetFollowersAsync(count As Integer = 20) As Task(Of (Followers As IReadOnlyCollection(Of RestFollower), Total As Integer))
  overload: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync*
  nameWithType.vb: ChatSimpleChannel.GetFollowersAsync(Integer)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(Integer)
  name.vb: GetFollowersAsync(Integer)
references:
- uid: AuxLabs.Twitch.Chat.Entities
  commentId: N:AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat.Entities
  nameWithType: AuxLabs.Twitch.Chat.Entities
  fullName: AuxLabs.Twitch.Chat.Entities
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Entities
    name: Entities
    href: AuxLabs.Twitch.Chat.Entities.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Entities
    name: Entities
    href: AuxLabs.Twitch.Chat.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  parent: AuxLabs.Twitch.Chat.Entities
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  name: ChatEntity<string>
  nameWithType: ChatEntity<string>
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>
  nameWithType.vb: ChatEntity(Of String)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String)
  name.vb: ChatEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.IEquatable{AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}}
  commentId: T:System.IEquatable{AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ChatEntity<string>>
  nameWithType: IEquatable<ChatEntity<string>>
  fullName: System.IEquatable<AuxLabs.Twitch.Chat.Entities.ChatEntity<string>>
  nameWithType.vb: IEquatable(Of ChatEntity(Of String))
  fullName.vb: System.IEquatable(Of AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String))
  name.vb: IEquatable(Of ChatEntity(Of String))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AuxLabs.Twitch.IEntity{System.String}
  commentId: T:AuxLabs.Twitch.IEntity{System.String}
  parent: AuxLabs.Twitch
  definition: AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<string>
  nameWithType: IEntity<string>
  fullName: AuxLabs.Twitch.IEntity<string>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: AuxLabs.Twitch.IEntity(Of String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Id
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Id.html
  name: Id
  nameWithType: ChatEntity<string>.Id
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.Id
  nameWithType.vb: ChatEntity(Of String).Id
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).Id
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}).html
  name: Equals(ChatEntity<string>)
  nameWithType: ChatEntity<string>.Equals(ChatEntity<string>)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity<string>)
  nameWithType.vb: ChatEntity(Of String).Equals(ChatEntity(Of String))
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String))
  name.vb: Equals(ChatEntity(Of String))
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object).html
  name: Equals(object)
  nameWithType: ChatEntity<string>.Equals(object)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.Equals(object)
  nameWithType.vb: ChatEntity(Of String).Equals(Object)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode.html
  name: GetHashCode()
  nameWithType: ChatEntity<string>.GetHashCode()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.GetHashCode()
  nameWithType.vb: ChatEntity(Of String).GetHashCode()
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).GetHashCode()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.GetHashCode.html
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatEntity`1
  parent: AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  name: ChatEntity<T>
  nameWithType: ChatEntity<T>
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>
  nameWithType.vb: ChatEntity(Of T)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T)
  name.vb: ChatEntity(Of T)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.IEntity`1
  commentId: T:AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: AuxLabs.Twitch.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: AuxLabs.Twitch.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - name: TId
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: )
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Id
  commentId: P:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Id
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Id.html
  name: Id
  nameWithType: ChatEntity<T>.Id
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.Id
  nameWithType.vb: ChatEntity(Of T).Id
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).Id
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{-0}).html
  name: Equals(ChatEntity<T>)
  nameWithType: ChatEntity<T>.Equals(ChatEntity<T>)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity<T>)
  nameWithType.vb: ChatEntity(Of T).Equals(ChatEntity(Of T))
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T))
  name.vb: Equals(ChatEntity(Of T))
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{-0}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{`0})
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(AuxLabs.Twitch.Chat.Entities.ChatEntity{-0}).html
  - name: (
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1
    name: ChatEntity
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
  isExternal: true
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(System.Object).html
  name: Equals(object)
  nameWithType: ChatEntity<T>.Equals(object)
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.Equals(object)
  nameWithType.vb: ChatEntity(Of T).Equals(Object)
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.Equals(System.Object)
    name: Equals
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.Equals(System.Object).html
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.GetHashCode.html
  name: GetHashCode()
  nameWithType: ChatEntity<T>.GetHashCode()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.GetHashCode()
  nameWithType.vb: ChatEntity(Of T).GetHashCode()
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).GetHashCode()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.GetHashCode.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.GetHashCode
    name: GetHashCode
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.GetHashCode.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser.html
  name: MyUser
  nameWithType: ChatSimpleChannel.MyUser
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.MyUser
- uid: AuxLabs.Twitch.Chat.Entities.ChatChannelSelfUser
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatChannelSelfUser
  parent: AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.Twitch.Chat.Entities.ChatChannelSelfUser.html
  name: ChatChannelSelfUser
  nameWithType: ChatChannelSelfUser
  fullName: AuxLabs.Twitch.Chat.Entities.ChatChannelSelfUser
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name.html
  name: Name
  nameWithType: ChatSimpleChannel.Name
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString
  parent: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}
  definition: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.ToString
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString.html
  name: ToString()
  nameWithType: ChatEntity<string>.ToString()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<string>.ToString()
  nameWithType.vb: ChatEntity(Of String).ToString()
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of String).ToString()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString
    name: ToString
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString
    name: ToString
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity{System.String}.ToString.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString.html
  name: ToString
  nameWithType: ChatSimpleChannel.ToString
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ToString
- uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.ToString
  commentId: M:AuxLabs.Twitch.Chat.Entities.ChatEntity`1.ToString
  href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.ToString.html
  name: ToString()
  nameWithType: ChatEntity<T>.ToString()
  fullName: AuxLabs.Twitch.Chat.Entities.ChatEntity<T>.ToString()
  nameWithType.vb: ChatEntity(Of T).ToString()
  fullName.vb: AuxLabs.Twitch.Chat.Entities.ChatEntity(Of T).ToString()
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.ToString
    name: ToString
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.ToString.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Entities.ChatEntity`1.ToString
    name: ToString
    href: AuxLabs.Twitch.Chat.Entities.ChatEntity-1.ToString.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser(System.String).html
  name: GetUser
  nameWithType: ChatSimpleChannel.GetUser
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUser
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleUser
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatSimpleUser
  parent: AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleUser.html
  name: ChatSimpleUser
  nameWithType: ChatSimpleUser
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleUser
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName(System.String).html
  name: GetUserByName
  nameWithType: ChatSimpleChannel.GetUserByName
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserByName
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage(System.String).html
  name: GetMessage
  nameWithType: ChatSimpleChannel.GetMessage
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessage
- uid: AuxLabs.Twitch.Chat.Entities.ChatMessage
  commentId: T:AuxLabs.Twitch.Chat.Entities.ChatMessage
  parent: AuxLabs.Twitch.Chat.Entities
  href: AuxLabs.Twitch.Chat.Entities.ChatMessage.html
  name: ChatMessage
  nameWithType: ChatMessage
  fullName: AuxLabs.Twitch.Chat.Entities.ChatMessage
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages(System.Int32).html
  name: GetMessages
  nameWithType: ChatSimpleChannel.GetMessages
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetMessages
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Entities.ChatMessage}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Entities.ChatMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<ChatMessage>
  nameWithType: IReadOnlyCollection<ChatMessage>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Chat.Entities.ChatMessage>
  nameWithType.vb: IReadOnlyCollection(Of ChatMessage)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Chat.Entities.ChatMessage)
  name.vb: IReadOnlyCollection(Of ChatMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Entities.ChatMessage
    name: ChatMessage
    href: AuxLabs.Twitch.Chat.Entities.ChatMessage.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Entities.ChatMessage
    name: ChatMessage
    href: AuxLabs.Twitch.Chat.Entities.ChatMessage.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync(System.String).html
  name: SendMessageAsync
  nameWithType: ChatSimpleChannel.SendMessageAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendMessageAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync(System.String,System.Nullable{AuxLabs.Twitch.AnnouncementColor}).html
  name: SendAnnouncementAsync
  nameWithType: ChatSimpleChannel.SendAnnouncementAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendAnnouncementAsync
- uid: System.Nullable{AuxLabs.Twitch.AnnouncementColor}
  commentId: T:System.Nullable{AuxLabs.Twitch.AnnouncementColor}
  parent: System
  definition: System.Nullable`1
  href: AuxLabs.Twitch.AnnouncementColor.html
  name: AnnouncementColor?
  nameWithType: AnnouncementColor?
  fullName: AuxLabs.Twitch.AnnouncementColor?
  spec.csharp:
  - uid: AuxLabs.Twitch.AnnouncementColor
    name: AnnouncementColor
    href: AuxLabs.Twitch.AnnouncementColor.html
  - name: '?'
  spec.vb:
  - uid: AuxLabs.Twitch.AnnouncementColor
    name: AnnouncementColor
    href: AuxLabs.Twitch.AnnouncementColor.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync(System.String).html
  name: SendShoutoutAsync
  nameWithType: ChatSimpleChannel.SendShoutoutAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.SendShoutoutAsync
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync(System.Int32).html
  name: GetChattersAsync
  nameWithType: ChatSimpleChannel.GetChattersAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChattersAsync
- uid: System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestSimpleUser}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestSimpleUser}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<IReadOnlyCollection<RestSimpleUser>>
  nameWithType: IAsyncEnumerable<IReadOnlyCollection<RestSimpleUser>>
  fullName: System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Entities.RestSimpleUser>>
  nameWithType.vb: IAsyncEnumerable(Of IReadOnlyCollection(Of RestSimpleUser))
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Entities.RestSimpleUser))
  name.vb: IAsyncEnumerable(Of IReadOnlyCollection(Of RestSimpleUser))
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestSimpleUser
    name: RestSimpleUser
    href: AuxLabs.Twitch.Rest.Entities.RestSimpleUser.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestSimpleUser
    name: RestSimpleUser
    href: AuxLabs.Twitch.Rest.Entities.RestSimpleUser.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync.html
  name: GetEmotesAsync
  nameWithType: ChatSimpleChannel.GetEmotesAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetEmotesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestEmote}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestEmote}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IReadOnlyCollection<RestEmote>>
  nameWithType: Task<IReadOnlyCollection<RestEmote>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Entities.RestEmote>>
  nameWithType.vb: Task(Of IReadOnlyCollection(Of RestEmote))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Entities.RestEmote))
  name.vb: Task(Of IReadOnlyCollection(Of RestEmote))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestEmote
    name: RestEmote
    href: AuxLabs.Twitch.Rest.Entities.RestEmote.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestEmote
    name: RestEmote
    href: AuxLabs.Twitch.Rest.Entities.RestEmote.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync.html
  name: GetChatSettingsAsync
  nameWithType: ChatSimpleChannel.GetChatSettingsAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChatSettingsAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.ChatSettings}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.ChatSettings}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ChatSettings>
  nameWithType: Task<ChatSettings>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Models.ChatSettings>
  nameWithType.vb: Task(Of ChatSettings)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Models.ChatSettings)
  name.vb: Task(Of ChatSettings)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.ChatSettings
    name: ChatSettings
    href: AuxLabs.Twitch.Rest.Models.ChatSettings.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.ChatSettings
    name: ChatSettings
    href: AuxLabs.Twitch.Rest.Models.ChatSettings.html
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync(System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody}).html
  name: ModifyChatSettingsAsync
  nameWithType: ChatSimpleChannel.ModifyChatSettingsAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.ModifyChatSettingsAsync
- uid: System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody}
  commentId: T:System.Action{AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<PatchChatSettingsBody>
  nameWithType: Action<PatchChatSettingsBody>
  fullName: System.Action<AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody>
  nameWithType.vb: Action(Of PatchChatSettingsBody)
  fullName.vb: System.Action(Of AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody)
  name.vb: Action(Of PatchChatSettingsBody)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody
    name: PatchChatSettingsBody
    href: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody
    name: PatchChatSettingsBody
    href: AuxLabs.Twitch.Rest.Requests.PatchChatSettingsBody.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync.html
  name: GetChannelAsync
  nameWithType: ChatSimpleChannel.GetChannelAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetChannelAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestChannel>
  nameWithType: Task<RestChannel>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestChannel>
  nameWithType.vb: Task(Of RestChannel)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestChannel)
  name.vb: Task(Of RestChannel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestChannel
    name: RestChannel
    href: AuxLabs.Twitch.Rest.Entities.RestChannel.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestChannel
    name: RestChannel
    href: AuxLabs.Twitch.Rest.Entities.RestChannel.html
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync.html
  name: GetUserAsync
  nameWithType: ChatSimpleChannel.GetUserAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetUserAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestUser}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestUser>
  nameWithType: Task<RestUser>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestUser>
  nameWithType.vb: Task(Of RestUser)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestUser)
  name.vb: Task(Of RestUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestUser
    name: RestUser
    href: AuxLabs.Twitch.Rest.Entities.RestUser.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestUser
    name: RestUser
    href: AuxLabs.Twitch.Rest.Entities.RestUser.html
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync(System.String).html
  name: GetFollowerAsync
  nameWithType: ChatSimpleChannel.GetFollowerAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowerAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollower}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestFollower}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestFollower>
  nameWithType: Task<RestFollower>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestFollower>
  nameWithType.vb: Task(Of RestFollower)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestFollower)
  name.vb: Task(Of RestFollower)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: )
- uid: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync*
  commentId: Overload:AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync
  href: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync(System.Int32).html
  name: GetFollowersAsync
  nameWithType: ChatSimpleChannel.GetFollowersAsync
  fullName: AuxLabs.Twitch.Chat.Entities.ChatSimpleChannel.GetFollowersAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IReadOnlyCollection<RestFollower> Followers, int Total)>
  nameWithType: Task<(IReadOnlyCollection<RestFollower> Followers, int Total)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Entities.RestFollower> Followers, int Total)>
  nameWithType.vb: Task(Of (Followers As IReadOnlyCollection(Of RestFollower), Total As Integer))
  fullName.vb: System.Threading.Tasks.Task(Of (Followers As System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Entities.RestFollower), Total As Integer))
  name.vb: Task(Of (Followers As IReadOnlyCollection(Of RestFollower), Total As Integer))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Followers
    name: Followers
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.followers
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Total
    name: Total
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.total
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Followers
    name: Followers
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.followers
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestFollower
    name: RestFollower
    href: AuxLabs.Twitch.Rest.Entities.RestFollower.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Entities.RestFollower},System.Int32}.Total
    name: Total
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ireadonlycollection-auxlabs.twitch.rest.entities.restfollower-,system.int32-.total
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
memberLayout: SeparatePages
