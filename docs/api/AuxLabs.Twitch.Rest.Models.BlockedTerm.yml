### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm
  commentId: T:AuxLabs.Twitch.Rest.Models.BlockedTerm
  id: BlockedTerm
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId
  - AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt
  - AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt
  - AuxLabs.Twitch.Rest.Models.BlockedTerm.Id
  - AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId
  - AuxLabs.Twitch.Rest.Models.BlockedTerm.Text
  - AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt
  langs:
  - csharp
  - vb
  name: BlockedTerm
  nameWithType: BlockedTerm
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BlockedTerm
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class BlockedTerm
    content.vb: Public Class BlockedTerm
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.BlockedTerm
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: BlockedTerm.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster that owns the list of blocked terms.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_id")]

      public string BroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_id
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId
  commentId: P:AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId
  id: ModeratorId
  parent: AuxLabs.Twitch.Rest.Models.BlockedTerm
  langs:
  - csharp
  - vb
  name: ModeratorId
  nameWithType: BlockedTerm.ModeratorId
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ModeratorId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The moderator that blocked the word or phrase from being used in the broadcasterâ€™s chat room.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("moderator_id")]

      public string ModeratorId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("moderator_id")>

      Public Property ModeratorId As String
  overload: AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: moderator_id
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.BlockedTerm.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.BlockedTerm
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: BlockedTerm.Id
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies this blocked term.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.BlockedTerm.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.Text
  commentId: P:AuxLabs.Twitch.Rest.Models.BlockedTerm.Text
  id: Text
  parent: AuxLabs.Twitch.Rest.Models.BlockedTerm
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: BlockedTerm.Text
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.Text
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Text
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The blocked word or phrase.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("text")]

      public string Text { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("text")>

      Public Property Text As String
  overload: AuxLabs.Twitch.Rest.Models.BlockedTerm.Text*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: text
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt
  id: CreatedAt
  parent: AuxLabs.Twitch.Rest.Models.BlockedTerm
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: BlockedTerm.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CreatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time that the term was blocked.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("created_at")]

      public DateTime CreatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("created_at")>

      Public Property CreatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: created_at
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt
  id: UpdatedAt
  parent: AuxLabs.Twitch.Rest.Models.BlockedTerm
  langs:
  - csharp
  - vb
  name: UpdatedAt
  nameWithType: BlockedTerm.UpdatedAt
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UpdatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time that the term was updated.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("updated_at")]

      public DateTime UpdatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("updated_at")>

      Public Property UpdatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updated_at
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt
  commentId: P:AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt
  id: ExpiresAt
  parent: AuxLabs.Twitch.Rest.Models.BlockedTerm
  langs:
  - csharp
  - vb
  name: ExpiresAt
  nameWithType: BlockedTerm.ExpiresAt
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ExpiresAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Moderation/Automod/BlockedTerm.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time that the blocked term is set to expire.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("expires_at")]

      public DateTime? ExpiresAt { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("expires_at")>

      Public Property ExpiresAt As Date?
  overload: AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expires_at
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId
  href: AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId.html
  name: BroadcasterId
  nameWithType: BlockedTerm.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.BroadcasterId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId
  href: AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId.html
  name: ModeratorId
  nameWithType: BlockedTerm.ModeratorId
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.ModeratorId
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.BlockedTerm.Id
  href: AuxLabs.Twitch.Rest.Models.BlockedTerm.Id.html
  name: Id
  nameWithType: BlockedTerm.Id
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.Id
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.Text*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.BlockedTerm.Text
  href: AuxLabs.Twitch.Rest.Models.BlockedTerm.Text.html
  name: Text
  nameWithType: BlockedTerm.Text
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.Text
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt
  href: AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt.html
  name: CreatedAt
  nameWithType: BlockedTerm.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt
  href: AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt.html
  name: UpdatedAt
  nameWithType: BlockedTerm.UpdatedAt
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.UpdatedAt
- uid: AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt
  href: AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt.html
  name: ExpiresAt
  nameWithType: BlockedTerm.ExpiresAt
  fullName: AuxLabs.Twitch.Rest.Models.BlockedTerm.ExpiresAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
