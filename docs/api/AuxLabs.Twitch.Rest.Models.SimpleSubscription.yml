### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  commentId: T:AuxLabs.Twitch.Rest.Models.SimpleSubscription
  id: SimpleSubscription
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift
  - AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier
  langs:
  - csharp
  - vb
  name: SimpleSubscription
  nameWithType: SimpleSubscription
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SimpleSubscription
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class SimpleSubscription
    content.vb: Public Class SimpleSubscription
  inheritance:
  - System.Object
  derivedClasses:
  - AuxLabs.Twitch.Rest.Models.Subscription
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: SimpleSubscription.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: ''
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_id")]

      public string BroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_id
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName
  id: BroadcasterName
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: BroadcasterName
  nameWithType: SimpleSubscription.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: ''
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_login")]

      public string BroadcasterName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_login")>

      Public Property BroadcasterName As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_login
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName
  id: BroadcasterDisplayName
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: BroadcasterDisplayName
  nameWithType: SimpleSubscription.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterDisplayName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: ''
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_name")]

      public string BroadcasterDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_name")>

      Public Property BroadcasterDisplayName As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_name
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId
  id: GifterId
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: GifterId
  nameWithType: SimpleSubscription.GifterId
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GifterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: ''
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("gifter_id")]

      public string GifterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("gifter_id")>

      Public Property GifterId As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: gifter_id
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName
  id: GifterName
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: GifterName
  nameWithType: SimpleSubscription.GifterName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GifterName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: ''
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("gifter_login")]

      public string GifterName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("gifter_login")>

      Public Property GifterName As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: gifter_login
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName
  id: GifterDisplayName
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: GifterDisplayName
  nameWithType: SimpleSubscription.GifterDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GifterDisplayName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 27
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: ''
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("gifter_name")]

      public string GifterDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("gifter_name")>

      Public Property GifterDisplayName As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: gifter_name
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift
  id: IsGift
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: IsGift
  nameWithType: SimpleSubscription.IsGift
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsGift
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 31
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the subscription is a gift subscription.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_gift")]

      public bool IsGift { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_gift")>

      Public Property IsGift As Boolean
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_gift
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier
  id: Tier
  parent: AuxLabs.Twitch.Rest.Models.SimpleSubscription
  langs:
  - csharp
  - vb
  name: Tier
  nameWithType: SimpleSubscription.Tier
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tier
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Subscriptions/SimpleSubscription.cs
    startLine: 35
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The type of subscription.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("tier")]

      public SubscriptionType Tier { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.SubscriptionType
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("tier")>

      Public Property Tier As SubscriptionType
  overload: AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tier
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId.html
  name: BroadcasterId
  nameWithType: SimpleSubscription.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName.html
  name: BroadcasterName
  nameWithType: SimpleSubscription.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterName
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName.html
  name: BroadcasterDisplayName
  nameWithType: SimpleSubscription.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.BroadcasterDisplayName
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId.html
  name: GifterId
  nameWithType: SimpleSubscription.GifterId
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterId
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName.html
  name: GifterName
  nameWithType: SimpleSubscription.GifterName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterName
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName.html
  name: GifterDisplayName
  nameWithType: SimpleSubscription.GifterDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.GifterDisplayName
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift.html
  name: IsGift
  nameWithType: SimpleSubscription.IsGift
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.IsGift
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier
  href: AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier.html
  name: Tier
  nameWithType: SimpleSubscription.Tier
  fullName: AuxLabs.Twitch.Rest.Models.SimpleSubscription.Tier
- uid: AuxLabs.Twitch.SubscriptionType
  commentId: T:AuxLabs.Twitch.SubscriptionType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.SubscriptionType.html
  name: SubscriptionType
  nameWithType: SubscriptionType
  fullName: AuxLabs.Twitch.SubscriptionType
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
memberLayout: SeparatePages
