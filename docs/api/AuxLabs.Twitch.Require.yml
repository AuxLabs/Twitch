### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Require
  commentId: T:AuxLabs.Twitch.Require
  id: Require
  parent: AuxLabs.Twitch
  children:
  - AuxLabs.Twitch.Require.After(System.DateTime,System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.After(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.AtLeast(System.Int32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.AtLeast(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.AtLeast(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.AtLeast(System.UInt32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.AtMost(System.Int32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.AtMost(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.AtMost(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.AtMost(System.UInt32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.Before(System.DateTime,System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.Before(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.Equal(System.Object,System.Object,System.String,System.String)
  - AuxLabs.Twitch.Require.Exclusive(System.Object[],System.String[],System.Boolean,System.String)
  - AuxLabs.Twitch.Require.GreaterThan(System.Int32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.GreaterThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.GreaterThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.GreaterThan(System.UInt32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.HasAtMost``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.HasGreaterThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.HasLessThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LengthAtLeast(System.String,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LengthAtMost(System.String,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LengthGreaterThan(System.String,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LengthLessThan(System.String,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LessThan(System.Int32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LessThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LessThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.LessThan(System.UInt32,System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.NotEmpty(System.String,System.String,System.String)
  - AuxLabs.Twitch.Require.NotEmptyOrWhitespace(System.String,System.String,System.String)
  - AuxLabs.Twitch.Require.NotNull(System.Object,System.String,System.String)
  - AuxLabs.Twitch.Require.NotNullOrEmpty(System.String,System.String,System.String)
  - AuxLabs.Twitch.Require.NotNullOrWhitespace(System.String,System.String,System.String)
  - AuxLabs.Twitch.Require.NotZero(System.Int32,System.String,System.String)
  - AuxLabs.Twitch.Require.NotZero(System.Nullable{System.Int32},System.String,System.String)
  - AuxLabs.Twitch.Require.NotZero(System.Nullable{System.UInt32},System.String,System.String)
  - AuxLabs.Twitch.Require.NotZero(System.UInt32,System.String,System.String)
  - AuxLabs.Twitch.Require.OnOrAfter(System.DateTime,System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.OnOrAfter(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.OnOrBefore(System.DateTime,System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.OnOrBefore(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  - AuxLabs.Twitch.Require.Scopes(System.Collections.Generic.IEnumerable{System.String},System.String[])
  langs:
  - csharp
  - vb
  name: Require
  nameWithType: Require
  fullName: AuxLabs.Twitch.Require
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Require
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static class Require
    content.vb: Public Module Require
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Require.Scopes(System.Collections.Generic.IEnumerable{System.String},System.String[])
  commentId: M:AuxLabs.Twitch.Require.Scopes(System.Collections.Generic.IEnumerable{System.String},System.String[])
  id: Scopes(System.Collections.Generic.IEnumerable{System.String},System.String[])
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: Scopes(IEnumerable<string>, string[])
  nameWithType: Require.Scopes(IEnumerable<string>, string[])
  fullName: AuxLabs.Twitch.Require.Scopes(System.Collections.Generic.IEnumerable<string>, string[])
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Scopes
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void Scopes(IEnumerable<string> has, string[] value)
    parameters:
    - id: has
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: value
      type: System.String[]
    content.vb: Public Shared Sub Scopes(has As IEnumerable(Of String), value As String())
  overload: AuxLabs.Twitch.Require.Scopes*
  nameWithType.vb: Require.Scopes(IEnumerable(Of String), String())
  fullName.vb: AuxLabs.Twitch.Require.Scopes(System.Collections.Generic.IEnumerable(Of String), String())
  name.vb: Scopes(IEnumerable(Of String), String())
- uid: AuxLabs.Twitch.Require.Equal(System.Object,System.Object,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.Equal(System.Object,System.Object,System.String,System.String)
  id: Equal(System.Object,System.Object,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: Equal(object, object, string, string)
  nameWithType: Require.Equal(object, object, string, string)
  fullName: AuxLabs.Twitch.Require.Equal(object, object, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Equal
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void Equal(object obj, object value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Object
    - id: value
      type: System.Object
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub Equal(obj As Object, value As Object, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.Equal*
  nameWithType.vb: Require.Equal(Object, Object, String, String)
  fullName.vb: AuxLabs.Twitch.Require.Equal(Object, Object, String, String)
  name.vb: Equal(Object, Object, String, String)
- uid: AuxLabs.Twitch.Require.NotNull(System.Object,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotNull(System.Object,System.String,System.String)
  id: NotNull(System.Object,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotNull(object, string, string)
  nameWithType: Require.NotNull(object, string, string)
  fullName: AuxLabs.Twitch.Require.NotNull(object, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotNull
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotNull(object obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Object
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotNull(obj As Object, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotNull*
  nameWithType.vb: Require.NotNull(Object, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotNull(Object, String, String)
  name.vb: NotNull(Object, String, String)
- uid: AuxLabs.Twitch.Require.NotEmpty(System.String,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotEmpty(System.String,System.String,System.String)
  id: NotEmpty(System.String,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotEmpty(string, string, string)
  nameWithType: Require.NotEmpty(string, string, string)
  fullName: AuxLabs.Twitch.Require.NotEmpty(string, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotEmpty
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 31
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotEmpty(string obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotEmpty(obj As String, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotEmpty*
  nameWithType.vb: Require.NotEmpty(String, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotEmpty(String, String, String)
  name.vb: NotEmpty(String, String, String)
- uid: AuxLabs.Twitch.Require.NotEmptyOrWhitespace(System.String,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotEmptyOrWhitespace(System.String,System.String,System.String)
  id: NotEmptyOrWhitespace(System.String,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotEmptyOrWhitespace(string, string, string)
  nameWithType: Require.NotEmptyOrWhitespace(string, string, string)
  fullName: AuxLabs.Twitch.Require.NotEmptyOrWhitespace(string, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotEmptyOrWhitespace
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 35
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotEmptyOrWhitespace(string obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotEmptyOrWhitespace(obj As String, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotEmptyOrWhitespace*
  nameWithType.vb: Require.NotEmptyOrWhitespace(String, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotEmptyOrWhitespace(String, String, String)
  name.vb: NotEmptyOrWhitespace(String, String, String)
- uid: AuxLabs.Twitch.Require.NotNullOrEmpty(System.String,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotNullOrEmpty(System.String,System.String,System.String)
  id: NotNullOrEmpty(System.String,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotNullOrEmpty(string, string, string)
  nameWithType: Require.NotNullOrEmpty(string, string, string)
  fullName: AuxLabs.Twitch.Require.NotNullOrEmpty(string, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotNullOrEmpty
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 39
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotNullOrEmpty(string obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotNullOrEmpty(obj As String, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotNullOrEmpty*
  nameWithType.vb: Require.NotNullOrEmpty(String, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotNullOrEmpty(String, String, String)
  name.vb: NotNullOrEmpty(String, String, String)
- uid: AuxLabs.Twitch.Require.NotNullOrWhitespace(System.String,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotNullOrWhitespace(System.String,System.String,System.String)
  id: NotNullOrWhitespace(System.String,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotNullOrWhitespace(string, string, string)
  nameWithType: Require.NotNullOrWhitespace(string, string, string)
  fullName: AuxLabs.Twitch.Require.NotNullOrWhitespace(string, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotNullOrWhitespace
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 44
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotNullOrWhitespace(string obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotNullOrWhitespace(obj As String, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotNullOrWhitespace*
  nameWithType.vb: Require.NotNullOrWhitespace(String, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotNullOrWhitespace(String, String, String)
  name.vb: NotNullOrWhitespace(String, String, String)
- uid: AuxLabs.Twitch.Require.LengthAtLeast(System.String,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LengthAtLeast(System.String,System.Int32,System.String,System.String)
  id: LengthAtLeast(System.String,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LengthAtLeast(string, int, string, string)
  nameWithType: Require.LengthAtLeast(string, int, string, string)
  fullName: AuxLabs.Twitch.Require.LengthAtLeast(string, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LengthAtLeast
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 50
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LengthAtLeast(string obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LengthAtLeast(obj As String, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LengthAtLeast*
  nameWithType.vb: Require.LengthAtLeast(String, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LengthAtLeast(String, Integer, String, String)
  name.vb: LengthAtLeast(String, Integer, String, String)
- uid: AuxLabs.Twitch.Require.LengthAtMost(System.String,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LengthAtMost(System.String,System.Int32,System.String,System.String)
  id: LengthAtMost(System.String,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LengthAtMost(string, int, string, string)
  nameWithType: Require.LengthAtMost(string, int, string, string)
  fullName: AuxLabs.Twitch.Require.LengthAtMost(string, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LengthAtMost
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 54
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LengthAtMost(string obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LengthAtMost(obj As String, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LengthAtMost*
  nameWithType.vb: Require.LengthAtMost(String, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LengthAtMost(String, Integer, String, String)
  name.vb: LengthAtMost(String, Integer, String, String)
- uid: AuxLabs.Twitch.Require.LengthGreaterThan(System.String,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LengthGreaterThan(System.String,System.Int32,System.String,System.String)
  id: LengthGreaterThan(System.String,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LengthGreaterThan(string, int, string, string)
  nameWithType: Require.LengthGreaterThan(string, int, string, string)
  fullName: AuxLabs.Twitch.Require.LengthGreaterThan(string, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LengthGreaterThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 58
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LengthGreaterThan(string obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LengthGreaterThan(obj As String, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LengthGreaterThan*
  nameWithType.vb: Require.LengthGreaterThan(String, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LengthGreaterThan(String, Integer, String, String)
  name.vb: LengthGreaterThan(String, Integer, String, String)
- uid: AuxLabs.Twitch.Require.LengthLessThan(System.String,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LengthLessThan(System.String,System.Int32,System.String,System.String)
  id: LengthLessThan(System.String,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LengthLessThan(string, int, string, string)
  nameWithType: Require.LengthLessThan(string, int, string, string)
  fullName: AuxLabs.Twitch.Require.LengthLessThan(string, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LengthLessThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 62
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LengthLessThan(string obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.String
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LengthLessThan(obj As String, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LengthLessThan*
  nameWithType.vb: Require.LengthLessThan(String, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LengthLessThan(String, Integer, String, String)
  name.vb: LengthLessThan(String, Integer, String, String)
- uid: AuxLabs.Twitch.Require.Before(System.DateTime,System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.Before(System.DateTime,System.DateTime,System.String,System.String)
  id: Before(System.DateTime,System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: Before(DateTime, DateTime, string, string)
  nameWithType: Require.Before(DateTime, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.Before(System.DateTime, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Before
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 70
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void Before(DateTime obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.DateTime
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub Before(obj As Date, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.Before*
  nameWithType.vb: Require.Before(Date, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.Before(Date, Date, String, String)
  name.vb: Before(Date, Date, String, String)
- uid: AuxLabs.Twitch.Require.Before(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.Before(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  id: Before(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: Before(DateTime?, DateTime, string, string)
  nameWithType: Require.Before(DateTime?, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.Before(System.DateTime?, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Before
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 74
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void Before(DateTime? obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.DateTime}
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub Before(obj As Date?, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.Before*
  nameWithType.vb: Require.Before(Date?, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.Before(Date?, Date, String, String)
  name.vb: Before(Date?, Date, String, String)
- uid: AuxLabs.Twitch.Require.OnOrBefore(System.DateTime,System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.OnOrBefore(System.DateTime,System.DateTime,System.String,System.String)
  id: OnOrBefore(System.DateTime,System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: OnOrBefore(DateTime, DateTime, string, string)
  nameWithType: Require.OnOrBefore(DateTime, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.OnOrBefore(System.DateTime, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: OnOrBefore
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 79
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void OnOrBefore(DateTime obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.DateTime
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub OnOrBefore(obj As Date, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.OnOrBefore*
  nameWithType.vb: Require.OnOrBefore(Date, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.OnOrBefore(Date, Date, String, String)
  name.vb: OnOrBefore(Date, Date, String, String)
- uid: AuxLabs.Twitch.Require.OnOrBefore(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.OnOrBefore(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  id: OnOrBefore(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: OnOrBefore(DateTime?, DateTime, string, string)
  nameWithType: Require.OnOrBefore(DateTime?, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.OnOrBefore(System.DateTime?, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: OnOrBefore
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 83
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void OnOrBefore(DateTime? obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.DateTime}
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub OnOrBefore(obj As Date?, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.OnOrBefore*
  nameWithType.vb: Require.OnOrBefore(Date?, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.OnOrBefore(Date?, Date, String, String)
  name.vb: OnOrBefore(Date?, Date, String, String)
- uid: AuxLabs.Twitch.Require.After(System.DateTime,System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.After(System.DateTime,System.DateTime,System.String,System.String)
  id: After(System.DateTime,System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: After(DateTime, DateTime, string, string)
  nameWithType: Require.After(DateTime, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.After(System.DateTime, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: After
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 88
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void After(DateTime obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.DateTime
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub After(obj As Date, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.After*
  nameWithType.vb: Require.After(Date, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.After(Date, Date, String, String)
  name.vb: After(Date, Date, String, String)
- uid: AuxLabs.Twitch.Require.After(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.After(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  id: After(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: After(DateTime?, DateTime, string, string)
  nameWithType: Require.After(DateTime?, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.After(System.DateTime?, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: After
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 92
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void After(DateTime? obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.DateTime}
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub After(obj As Date?, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.After*
  nameWithType.vb: Require.After(Date?, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.After(Date?, Date, String, String)
  name.vb: After(Date?, Date, String, String)
- uid: AuxLabs.Twitch.Require.OnOrAfter(System.DateTime,System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.OnOrAfter(System.DateTime,System.DateTime,System.String,System.String)
  id: OnOrAfter(System.DateTime,System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: OnOrAfter(DateTime, DateTime, string, string)
  nameWithType: Require.OnOrAfter(DateTime, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.OnOrAfter(System.DateTime, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: OnOrAfter
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 97
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void OnOrAfter(DateTime obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.DateTime
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub OnOrAfter(obj As Date, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.OnOrAfter*
  nameWithType.vb: Require.OnOrAfter(Date, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.OnOrAfter(Date, Date, String, String)
  name.vb: OnOrAfter(Date, Date, String, String)
- uid: AuxLabs.Twitch.Require.OnOrAfter(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.OnOrAfter(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  id: OnOrAfter(System.Nullable{System.DateTime},System.DateTime,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: OnOrAfter(DateTime?, DateTime, string, string)
  nameWithType: Require.OnOrAfter(DateTime?, DateTime, string, string)
  fullName: AuxLabs.Twitch.Require.OnOrAfter(System.DateTime?, System.DateTime, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: OnOrAfter
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 101
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void OnOrAfter(DateTime? obj, DateTime value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.DateTime}
    - id: value
      type: System.DateTime
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub OnOrAfter(obj As Date?, value As Date, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.OnOrAfter*
  nameWithType.vb: Require.OnOrAfter(Date?, Date, String, String)
  fullName.vb: AuxLabs.Twitch.Require.OnOrAfter(Date?, Date, String, String)
  name.vb: OnOrAfter(Date?, Date, String, String)
- uid: AuxLabs.Twitch.Require.Exclusive(System.Object[],System.String[],System.Boolean,System.String)
  commentId: M:AuxLabs.Twitch.Require.Exclusive(System.Object[],System.String[],System.Boolean,System.String)
  id: Exclusive(System.Object[],System.String[],System.Boolean,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: Exclusive(object[], string[], bool, string)
  nameWithType: Require.Exclusive(object[], string[], bool, string)
  fullName: AuxLabs.Twitch.Require.Exclusive(object[], string[], bool, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Exclusive
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 109
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void Exclusive(object[] objs, string[] names, bool requireOne = false, string msg = null)
    parameters:
    - id: objs
      type: System.Object[]
    - id: names
      type: System.String[]
    - id: requireOne
      type: System.Boolean
    - id: msg
      type: System.String
    content.vb: Public Shared Sub Exclusive(objs As Object(), names As String(), requireOne As Boolean = False, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.Exclusive*
  nameWithType.vb: Require.Exclusive(Object(), String(), Boolean, String)
  fullName.vb: AuxLabs.Twitch.Require.Exclusive(Object(), String(), Boolean, String)
  name.vb: Exclusive(Object(), String(), Boolean, String)
- uid: AuxLabs.Twitch.Require.HasAtMost``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.HasAtMost``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  id: HasAtMost``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: HasAtMost<T>(IEnumerable<T>, int, string, string)
  nameWithType: Require.HasAtMost<T>(IEnumerable<T>, int, string, string)
  fullName: AuxLabs.Twitch.Require.HasAtMost<T>(System.Collections.Generic.IEnumerable<T>, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: HasAtMost
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 126
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void HasAtMost<T>(IEnumerable<T> obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Shared Sub HasAtMost(Of T)(obj As IEnumerable(Of T), value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.HasAtMost*
  nameWithType.vb: Require.HasAtMost(Of T)(IEnumerable(Of T), Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.HasAtMost(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer, String, String)
  name.vb: HasAtMost(Of T)(IEnumerable(Of T), Integer, String, String)
- uid: AuxLabs.Twitch.Require.HasGreaterThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.HasGreaterThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  id: HasGreaterThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: HasGreaterThan<T>(IEnumerable<T>, int, string, string)
  nameWithType: Require.HasGreaterThan<T>(IEnumerable<T>, int, string, string)
  fullName: AuxLabs.Twitch.Require.HasGreaterThan<T>(System.Collections.Generic.IEnumerable<T>, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: HasGreaterThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 130
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void HasGreaterThan<T>(IEnumerable<T> obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Shared Sub HasGreaterThan(Of T)(obj As IEnumerable(Of T), value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.HasGreaterThan*
  nameWithType.vb: Require.HasGreaterThan(Of T)(IEnumerable(Of T), Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.HasGreaterThan(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer, String, String)
  name.vb: HasGreaterThan(Of T)(IEnumerable(Of T), Integer, String, String)
- uid: AuxLabs.Twitch.Require.HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  id: HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: HasAtLeast<T>(IEnumerable<T>, int, string, string)
  nameWithType: Require.HasAtLeast<T>(IEnumerable<T>, int, string, string)
  fullName: AuxLabs.Twitch.Require.HasAtLeast<T>(System.Collections.Generic.IEnumerable<T>, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: HasAtLeast
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 134
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void HasAtLeast<T>(IEnumerable<T> obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Shared Sub HasAtLeast(Of T)(obj As IEnumerable(Of T), value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.HasAtLeast*
  nameWithType.vb: Require.HasAtLeast(Of T)(IEnumerable(Of T), Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.HasAtLeast(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer, String, String)
  name.vb: HasAtLeast(Of T)(IEnumerable(Of T), Integer, String, String)
- uid: AuxLabs.Twitch.Require.HasLessThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.HasLessThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  id: HasLessThan``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: HasLessThan<T>(IEnumerable<T>, int, string, string)
  nameWithType: Require.HasLessThan<T>(IEnumerable<T>, int, string, string)
  fullName: AuxLabs.Twitch.Require.HasLessThan<T>(System.Collections.Generic.IEnumerable<T>, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: HasLessThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 138
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void HasLessThan<T>(IEnumerable<T> obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Shared Sub HasLessThan(Of T)(obj As IEnumerable(Of T), value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.HasLessThan*
  nameWithType.vb: Require.HasLessThan(Of T)(IEnumerable(Of T), Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.HasLessThan(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer, String, String)
  name.vb: HasLessThan(Of T)(IEnumerable(Of T), Integer, String, String)
- uid: AuxLabs.Twitch.Require.NotZero(System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotZero(System.Int32,System.String,System.String)
  id: NotZero(System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotZero(int, string, string)
  nameWithType: Require.NotZero(int, string, string)
  fullName: AuxLabs.Twitch.Require.NotZero(int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotZero
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 146
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotZero(int obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotZero(obj As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotZero*
  nameWithType.vb: Require.NotZero(Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotZero(Integer, String, String)
  name.vb: NotZero(Integer, String, String)
- uid: AuxLabs.Twitch.Require.NotZero(System.Nullable{System.Int32},System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotZero(System.Nullable{System.Int32},System.String,System.String)
  id: NotZero(System.Nullable{System.Int32},System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotZero(int?, string, string)
  nameWithType: Require.NotZero(int?, string, string)
  fullName: AuxLabs.Twitch.Require.NotZero(int?, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotZero
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 147
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotZero(int? obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.Int32}
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotZero(obj As Integer?, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotZero*
  nameWithType.vb: Require.NotZero(Integer?, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotZero(Integer?, String, String)
  name.vb: NotZero(Integer?, String, String)
- uid: AuxLabs.Twitch.Require.NotZero(System.UInt32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotZero(System.UInt32,System.String,System.String)
  id: NotZero(System.UInt32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotZero(uint, string, string)
  nameWithType: Require.NotZero(uint, string, string)
  fullName: AuxLabs.Twitch.Require.NotZero(uint, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotZero
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 148
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotZero(uint obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.UInt32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotZero(obj As UInteger, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotZero*
  nameWithType.vb: Require.NotZero(UInteger, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotZero(UInteger, String, String)
  name.vb: NotZero(UInteger, String, String)
- uid: AuxLabs.Twitch.Require.NotZero(System.Nullable{System.UInt32},System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.NotZero(System.Nullable{System.UInt32},System.String,System.String)
  id: NotZero(System.Nullable{System.UInt32},System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: NotZero(uint?, string, string)
  nameWithType: Require.NotZero(uint?, string, string)
  fullName: AuxLabs.Twitch.Require.NotZero(uint?, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NotZero
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 149
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void NotZero(uint? obj, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.UInt32}
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub NotZero(obj As UInteger?, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.NotZero*
  nameWithType.vb: Require.NotZero(UInteger?, String, String)
  fullName.vb: AuxLabs.Twitch.Require.NotZero(UInteger?, String, String)
  name.vb: NotZero(UInteger?, String, String)
- uid: AuxLabs.Twitch.Require.AtLeast(System.Int32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtLeast(System.Int32,System.Int32,System.String,System.String)
  id: AtLeast(System.Int32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtLeast(int, int, string, string)
  nameWithType: Require.AtLeast(int, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtLeast(int, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtLeast
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 152
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtLeast(int obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Int32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtLeast(obj As Integer, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtLeast*
  nameWithType.vb: Require.AtLeast(Integer, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtLeast(Integer, Integer, String, String)
  name.vb: AtLeast(Integer, Integer, String, String)
- uid: AuxLabs.Twitch.Require.AtLeast(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtLeast(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  id: AtLeast(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtLeast(int?, int, string, string)
  nameWithType: Require.AtLeast(int?, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtLeast(int?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtLeast
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 153
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtLeast(int? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.Int32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtLeast(obj As Integer?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtLeast*
  nameWithType.vb: Require.AtLeast(Integer?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtLeast(Integer?, Integer, String, String)
  name.vb: AtLeast(Integer?, Integer, String, String)
- uid: AuxLabs.Twitch.Require.AtLeast(System.UInt32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtLeast(System.UInt32,System.Int32,System.String,System.String)
  id: AtLeast(System.UInt32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtLeast(uint, int, string, string)
  nameWithType: Require.AtLeast(uint, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtLeast(uint, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtLeast
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 154
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtLeast(uint obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.UInt32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtLeast(obj As UInteger, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtLeast*
  nameWithType.vb: Require.AtLeast(UInteger, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtLeast(UInteger, Integer, String, String)
  name.vb: AtLeast(UInteger, Integer, String, String)
- uid: AuxLabs.Twitch.Require.AtLeast(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtLeast(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  id: AtLeast(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtLeast(uint?, int, string, string)
  nameWithType: Require.AtLeast(uint?, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtLeast(uint?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtLeast
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 155
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtLeast(uint? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.UInt32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtLeast(obj As UInteger?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtLeast*
  nameWithType.vb: Require.AtLeast(UInteger?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtLeast(UInteger?, Integer, String, String)
  name.vb: AtLeast(UInteger?, Integer, String, String)
- uid: AuxLabs.Twitch.Require.GreaterThan(System.Int32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.GreaterThan(System.Int32,System.Int32,System.String,System.String)
  id: GreaterThan(System.Int32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: GreaterThan(int, int, string, string)
  nameWithType: Require.GreaterThan(int, int, string, string)
  fullName: AuxLabs.Twitch.Require.GreaterThan(int, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GreaterThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 158
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void GreaterThan(int obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Int32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub GreaterThan(obj As Integer, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.GreaterThan*
  nameWithType.vb: Require.GreaterThan(Integer, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.GreaterThan(Integer, Integer, String, String)
  name.vb: GreaterThan(Integer, Integer, String, String)
- uid: AuxLabs.Twitch.Require.GreaterThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.GreaterThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  id: GreaterThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: GreaterThan(int?, int, string, string)
  nameWithType: Require.GreaterThan(int?, int, string, string)
  fullName: AuxLabs.Twitch.Require.GreaterThan(int?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GreaterThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 159
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void GreaterThan(int? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.Int32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub GreaterThan(obj As Integer?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.GreaterThan*
  nameWithType.vb: Require.GreaterThan(Integer?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.GreaterThan(Integer?, Integer, String, String)
  name.vb: GreaterThan(Integer?, Integer, String, String)
- uid: AuxLabs.Twitch.Require.GreaterThan(System.UInt32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.GreaterThan(System.UInt32,System.Int32,System.String,System.String)
  id: GreaterThan(System.UInt32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: GreaterThan(uint, int, string, string)
  nameWithType: Require.GreaterThan(uint, int, string, string)
  fullName: AuxLabs.Twitch.Require.GreaterThan(uint, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GreaterThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 160
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void GreaterThan(uint obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.UInt32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub GreaterThan(obj As UInteger, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.GreaterThan*
  nameWithType.vb: Require.GreaterThan(UInteger, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.GreaterThan(UInteger, Integer, String, String)
  name.vb: GreaterThan(UInteger, Integer, String, String)
- uid: AuxLabs.Twitch.Require.GreaterThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.GreaterThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  id: GreaterThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: GreaterThan(uint?, int, string, string)
  nameWithType: Require.GreaterThan(uint?, int, string, string)
  fullName: AuxLabs.Twitch.Require.GreaterThan(uint?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GreaterThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 161
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void GreaterThan(uint? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.UInt32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub GreaterThan(obj As UInteger?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.GreaterThan*
  nameWithType.vb: Require.GreaterThan(UInteger?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.GreaterThan(UInteger?, Integer, String, String)
  name.vb: GreaterThan(UInteger?, Integer, String, String)
- uid: AuxLabs.Twitch.Require.AtMost(System.Int32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtMost(System.Int32,System.Int32,System.String,System.String)
  id: AtMost(System.Int32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtMost(int, int, string, string)
  nameWithType: Require.AtMost(int, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtMost(int, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtMost
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 164
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtMost(int obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Int32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtMost(obj As Integer, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtMost*
  nameWithType.vb: Require.AtMost(Integer, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtMost(Integer, Integer, String, String)
  name.vb: AtMost(Integer, Integer, String, String)
- uid: AuxLabs.Twitch.Require.AtMost(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtMost(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  id: AtMost(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtMost(int?, int, string, string)
  nameWithType: Require.AtMost(int?, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtMost(int?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtMost
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 165
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtMost(int? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.Int32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtMost(obj As Integer?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtMost*
  nameWithType.vb: Require.AtMost(Integer?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtMost(Integer?, Integer, String, String)
  name.vb: AtMost(Integer?, Integer, String, String)
- uid: AuxLabs.Twitch.Require.AtMost(System.UInt32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtMost(System.UInt32,System.Int32,System.String,System.String)
  id: AtMost(System.UInt32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtMost(uint, int, string, string)
  nameWithType: Require.AtMost(uint, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtMost(uint, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtMost
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 166
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtMost(uint obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.UInt32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtMost(obj As UInteger, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtMost*
  nameWithType.vb: Require.AtMost(UInteger, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtMost(UInteger, Integer, String, String)
  name.vb: AtMost(UInteger, Integer, String, String)
- uid: AuxLabs.Twitch.Require.AtMost(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.AtMost(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  id: AtMost(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: AtMost(uint?, int, string, string)
  nameWithType: Require.AtMost(uint?, int, string, string)
  fullName: AuxLabs.Twitch.Require.AtMost(uint?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AtMost
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 167
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void AtMost(uint? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.UInt32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub AtMost(obj As UInteger?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.AtMost*
  nameWithType.vb: Require.AtMost(UInteger?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.AtMost(UInteger?, Integer, String, String)
  name.vb: AtMost(UInteger?, Integer, String, String)
- uid: AuxLabs.Twitch.Require.LessThan(System.Int32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LessThan(System.Int32,System.Int32,System.String,System.String)
  id: LessThan(System.Int32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LessThan(int, int, string, string)
  nameWithType: Require.LessThan(int, int, string, string)
  fullName: AuxLabs.Twitch.Require.LessThan(int, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LessThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 170
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LessThan(int obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Int32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LessThan(obj As Integer, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LessThan*
  nameWithType.vb: Require.LessThan(Integer, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LessThan(Integer, Integer, String, String)
  name.vb: LessThan(Integer, Integer, String, String)
- uid: AuxLabs.Twitch.Require.LessThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LessThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  id: LessThan(System.Nullable{System.Int32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LessThan(int?, int, string, string)
  nameWithType: Require.LessThan(int?, int, string, string)
  fullName: AuxLabs.Twitch.Require.LessThan(int?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LessThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 171
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LessThan(int? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.Int32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LessThan(obj As Integer?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LessThan*
  nameWithType.vb: Require.LessThan(Integer?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LessThan(Integer?, Integer, String, String)
  name.vb: LessThan(Integer?, Integer, String, String)
- uid: AuxLabs.Twitch.Require.LessThan(System.UInt32,System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LessThan(System.UInt32,System.Int32,System.String,System.String)
  id: LessThan(System.UInt32,System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LessThan(uint, int, string, string)
  nameWithType: Require.LessThan(uint, int, string, string)
  fullName: AuxLabs.Twitch.Require.LessThan(uint, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LessThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 172
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LessThan(uint obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.UInt32
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LessThan(obj As UInteger, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LessThan*
  nameWithType.vb: Require.LessThan(UInteger, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LessThan(UInteger, Integer, String, String)
  name.vb: LessThan(UInteger, Integer, String, String)
- uid: AuxLabs.Twitch.Require.LessThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Require.LessThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  id: LessThan(System.Nullable{System.UInt32},System.Int32,System.String,System.String)
  parent: AuxLabs.Twitch.Require
  langs:
  - csharp
  - vb
  name: LessThan(uint?, int, string, string)
  nameWithType: Require.LessThan(uint?, int, string, string)
  fullName: AuxLabs.Twitch.Require.LessThan(uint?, int, string, string)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Utility/Require.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LessThan
    path: ../src/AuxLabs.Twitch.Core/Utility/Require.cs
    startLine: 173
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public static void LessThan(uint? obj, int value, string name, string msg = null)
    parameters:
    - id: obj
      type: System.Nullable{System.UInt32}
    - id: value
      type: System.Int32
    - id: name
      type: System.String
    - id: msg
      type: System.String
    content.vb: Public Shared Sub LessThan(obj As UInteger?, value As Integer, name As String, msg As String = Nothing)
  overload: AuxLabs.Twitch.Require.LessThan*
  nameWithType.vb: Require.LessThan(UInteger?, Integer, String, String)
  fullName.vb: AuxLabs.Twitch.Require.LessThan(UInteger?, Integer, String, String)
  name.vb: LessThan(UInteger?, Integer, String, String)
references:
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Require.Scopes*
  commentId: Overload:AuxLabs.Twitch.Require.Scopes
  href: AuxLabs.Twitch.Require.Scopes(System.Collections.Generic.IEnumerable{System.String},System.String[]).html
  name: Scopes
  nameWithType: Require.Scopes
  fullName: AuxLabs.Twitch.Require.Scopes
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Require.Equal*
  commentId: Overload:AuxLabs.Twitch.Require.Equal
  href: AuxLabs.Twitch.Require.Equal(System.Object,System.Object,System.String,System.String).html
  name: Equal
  nameWithType: Require.Equal
  fullName: AuxLabs.Twitch.Require.Equal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Require.NotNull*
  commentId: Overload:AuxLabs.Twitch.Require.NotNull
  href: AuxLabs.Twitch.Require.NotNull(System.Object,System.String,System.String).html
  name: NotNull
  nameWithType: Require.NotNull
  fullName: AuxLabs.Twitch.Require.NotNull
- uid: AuxLabs.Twitch.Require.NotEmpty*
  commentId: Overload:AuxLabs.Twitch.Require.NotEmpty
  href: AuxLabs.Twitch.Require.NotEmpty(System.String,System.String,System.String).html
  name: NotEmpty
  nameWithType: Require.NotEmpty
  fullName: AuxLabs.Twitch.Require.NotEmpty
- uid: AuxLabs.Twitch.Require.NotEmptyOrWhitespace*
  commentId: Overload:AuxLabs.Twitch.Require.NotEmptyOrWhitespace
  href: AuxLabs.Twitch.Require.NotEmptyOrWhitespace(System.String,System.String,System.String).html
  name: NotEmptyOrWhitespace
  nameWithType: Require.NotEmptyOrWhitespace
  fullName: AuxLabs.Twitch.Require.NotEmptyOrWhitespace
- uid: AuxLabs.Twitch.Require.NotNullOrEmpty*
  commentId: Overload:AuxLabs.Twitch.Require.NotNullOrEmpty
  href: AuxLabs.Twitch.Require.NotNullOrEmpty(System.String,System.String,System.String).html
  name: NotNullOrEmpty
  nameWithType: Require.NotNullOrEmpty
  fullName: AuxLabs.Twitch.Require.NotNullOrEmpty
- uid: AuxLabs.Twitch.Require.NotNullOrWhitespace*
  commentId: Overload:AuxLabs.Twitch.Require.NotNullOrWhitespace
  href: AuxLabs.Twitch.Require.NotNullOrWhitespace(System.String,System.String,System.String).html
  name: NotNullOrWhitespace
  nameWithType: Require.NotNullOrWhitespace
  fullName: AuxLabs.Twitch.Require.NotNullOrWhitespace
- uid: AuxLabs.Twitch.Require.LengthAtLeast*
  commentId: Overload:AuxLabs.Twitch.Require.LengthAtLeast
  href: AuxLabs.Twitch.Require.LengthAtLeast(System.String,System.Int32,System.String,System.String).html
  name: LengthAtLeast
  nameWithType: Require.LengthAtLeast
  fullName: AuxLabs.Twitch.Require.LengthAtLeast
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Require.LengthAtMost*
  commentId: Overload:AuxLabs.Twitch.Require.LengthAtMost
  href: AuxLabs.Twitch.Require.LengthAtMost(System.String,System.Int32,System.String,System.String).html
  name: LengthAtMost
  nameWithType: Require.LengthAtMost
  fullName: AuxLabs.Twitch.Require.LengthAtMost
- uid: AuxLabs.Twitch.Require.LengthGreaterThan*
  commentId: Overload:AuxLabs.Twitch.Require.LengthGreaterThan
  href: AuxLabs.Twitch.Require.LengthGreaterThan(System.String,System.Int32,System.String,System.String).html
  name: LengthGreaterThan
  nameWithType: Require.LengthGreaterThan
  fullName: AuxLabs.Twitch.Require.LengthGreaterThan
- uid: AuxLabs.Twitch.Require.LengthLessThan*
  commentId: Overload:AuxLabs.Twitch.Require.LengthLessThan
  href: AuxLabs.Twitch.Require.LengthLessThan(System.String,System.Int32,System.String,System.String).html
  name: LengthLessThan
  nameWithType: Require.LengthLessThan
  fullName: AuxLabs.Twitch.Require.LengthLessThan
- uid: AuxLabs.Twitch.Require.Before*
  commentId: Overload:AuxLabs.Twitch.Require.Before
  href: AuxLabs.Twitch.Require.Before(System.DateTime,System.DateTime,System.String,System.String).html
  name: Before
  nameWithType: Require.Before
  fullName: AuxLabs.Twitch.Require.Before
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Require.OnOrBefore*
  commentId: Overload:AuxLabs.Twitch.Require.OnOrBefore
  href: AuxLabs.Twitch.Require.OnOrBefore(System.DateTime,System.DateTime,System.String,System.String).html
  name: OnOrBefore
  nameWithType: Require.OnOrBefore
  fullName: AuxLabs.Twitch.Require.OnOrBefore
- uid: AuxLabs.Twitch.Require.After*
  commentId: Overload:AuxLabs.Twitch.Require.After
  href: AuxLabs.Twitch.Require.After(System.DateTime,System.DateTime,System.String,System.String).html
  name: After
  nameWithType: Require.After
  fullName: AuxLabs.Twitch.Require.After
- uid: AuxLabs.Twitch.Require.OnOrAfter*
  commentId: Overload:AuxLabs.Twitch.Require.OnOrAfter
  href: AuxLabs.Twitch.Require.OnOrAfter(System.DateTime,System.DateTime,System.String,System.String).html
  name: OnOrAfter
  nameWithType: Require.OnOrAfter
  fullName: AuxLabs.Twitch.Require.OnOrAfter
- uid: AuxLabs.Twitch.Require.Exclusive*
  commentId: Overload:AuxLabs.Twitch.Require.Exclusive
  href: AuxLabs.Twitch.Require.Exclusive(System.Object[],System.String[],System.Boolean,System.String).html
  name: Exclusive
  nameWithType: Require.Exclusive
  fullName: AuxLabs.Twitch.Require.Exclusive
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.Require.HasAtMost*
  commentId: Overload:AuxLabs.Twitch.Require.HasAtMost
  href: AuxLabs.Twitch.Require.HasAtMost--1(System.Collections.Generic.IEnumerable{--0},System.Int32,System.String,System.String).html
  name: HasAtMost
  nameWithType: Require.HasAtMost
  fullName: AuxLabs.Twitch.Require.HasAtMost
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Require.HasGreaterThan*
  commentId: Overload:AuxLabs.Twitch.Require.HasGreaterThan
  href: AuxLabs.Twitch.Require.HasGreaterThan--1(System.Collections.Generic.IEnumerable{--0},System.Int32,System.String,System.String).html
  name: HasGreaterThan
  nameWithType: Require.HasGreaterThan
  fullName: AuxLabs.Twitch.Require.HasGreaterThan
- uid: AuxLabs.Twitch.Require.HasAtLeast*
  commentId: Overload:AuxLabs.Twitch.Require.HasAtLeast
  href: AuxLabs.Twitch.Require.HasAtLeast--1(System.Collections.Generic.IEnumerable{--0},System.Int32,System.String,System.String).html
  name: HasAtLeast
  nameWithType: Require.HasAtLeast
  fullName: AuxLabs.Twitch.Require.HasAtLeast
- uid: AuxLabs.Twitch.Require.HasLessThan*
  commentId: Overload:AuxLabs.Twitch.Require.HasLessThan
  href: AuxLabs.Twitch.Require.HasLessThan--1(System.Collections.Generic.IEnumerable{--0},System.Int32,System.String,System.String).html
  name: HasLessThan
  nameWithType: Require.HasLessThan
  fullName: AuxLabs.Twitch.Require.HasLessThan
- uid: AuxLabs.Twitch.Require.NotZero*
  commentId: Overload:AuxLabs.Twitch.Require.NotZero
  href: AuxLabs.Twitch.Require.NotZero(System.Int32,System.String,System.String).html
  name: NotZero
  nameWithType: Require.NotZero
  fullName: AuxLabs.Twitch.Require.NotZero
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint?
  nameWithType: uint?
  fullName: uint?
  nameWithType.vb: UInteger?
  fullName.vb: UInteger?
  name.vb: UInteger?
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '?'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '?'
- uid: AuxLabs.Twitch.Require.AtLeast*
  commentId: Overload:AuxLabs.Twitch.Require.AtLeast
  href: AuxLabs.Twitch.Require.AtLeast(System.Int32,System.Int32,System.String,System.String).html
  name: AtLeast
  nameWithType: Require.AtLeast
  fullName: AuxLabs.Twitch.Require.AtLeast
- uid: AuxLabs.Twitch.Require.GreaterThan*
  commentId: Overload:AuxLabs.Twitch.Require.GreaterThan
  href: AuxLabs.Twitch.Require.GreaterThan(System.Int32,System.Int32,System.String,System.String).html
  name: GreaterThan
  nameWithType: Require.GreaterThan
  fullName: AuxLabs.Twitch.Require.GreaterThan
- uid: AuxLabs.Twitch.Require.AtMost*
  commentId: Overload:AuxLabs.Twitch.Require.AtMost
  href: AuxLabs.Twitch.Require.AtMost(System.Int32,System.Int32,System.String,System.String).html
  name: AtMost
  nameWithType: Require.AtMost
  fullName: AuxLabs.Twitch.Require.AtMost
- uid: AuxLabs.Twitch.Require.LessThan*
  commentId: Overload:AuxLabs.Twitch.Require.LessThan
  href: AuxLabs.Twitch.Require.LessThan(System.Int32,System.Int32,System.String,System.String).html
  name: LessThan
  nameWithType: Require.LessThan
  fullName: AuxLabs.Twitch.Require.LessThan
memberLayout: SeparatePages
