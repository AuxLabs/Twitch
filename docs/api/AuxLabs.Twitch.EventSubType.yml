### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.EventSubType
  commentId: T:AuxLabs.Twitch.EventSubType
  id: EventSubType
  parent: AuxLabs.Twitch
  children:
  - AuxLabs.Twitch.EventSubType.ChannelBan
  - AuxLabs.Twitch.EventSubType.ChannelCheer
  - AuxLabs.Twitch.EventSubType.ChannelFollow
  - AuxLabs.Twitch.EventSubType.ChannelModeratorAdd
  - AuxLabs.Twitch.EventSubType.ChannelModeratorRemove
  - AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionAdd
  - AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionUpdate
  - AuxLabs.Twitch.EventSubType.ChannelPointsRewardAdd
  - AuxLabs.Twitch.EventSubType.ChannelPointsRewardRemove
  - AuxLabs.Twitch.EventSubType.ChannelPointsRewardUpdate
  - AuxLabs.Twitch.EventSubType.ChannelPollEnd
  - AuxLabs.Twitch.EventSubType.ChannelPollProgress
  - AuxLabs.Twitch.EventSubType.ChannelPollStart
  - AuxLabs.Twitch.EventSubType.ChannelPredictionEnd
  - AuxLabs.Twitch.EventSubType.ChannelPredictionLock
  - AuxLabs.Twitch.EventSubType.ChannelPredictionProgress
  - AuxLabs.Twitch.EventSubType.ChannelPredictionStart
  - AuxLabs.Twitch.EventSubType.ChannelRaid
  - AuxLabs.Twitch.EventSubType.ChannelSubscribe
  - AuxLabs.Twitch.EventSubType.ChannelSubscriptionEnd
  - AuxLabs.Twitch.EventSubType.ChannelSubscriptionGift
  - AuxLabs.Twitch.EventSubType.ChannelSubscriptionMessage
  - AuxLabs.Twitch.EventSubType.ChannelUnban
  - AuxLabs.Twitch.EventSubType.ChannelUpdate
  - AuxLabs.Twitch.EventSubType.CharityCampaignProgress
  - AuxLabs.Twitch.EventSubType.CharityCampaignStart
  - AuxLabs.Twitch.EventSubType.CharityCampaignStop
  - AuxLabs.Twitch.EventSubType.CharityDonation
  - AuxLabs.Twitch.EventSubType.DropEntitlementGrant
  - AuxLabs.Twitch.EventSubType.ExtensionBitsTransactionCreate
  - AuxLabs.Twitch.EventSubType.GoalEnd
  - AuxLabs.Twitch.EventSubType.GoalProgress
  - AuxLabs.Twitch.EventSubType.GoalStart
  - AuxLabs.Twitch.EventSubType.HypeTrainEnd
  - AuxLabs.Twitch.EventSubType.HypeTrainProgress
  - AuxLabs.Twitch.EventSubType.HypeTrainStart
  - AuxLabs.Twitch.EventSubType.None
  - AuxLabs.Twitch.EventSubType.ShieldModeEnd
  - AuxLabs.Twitch.EventSubType.ShieldModeStart
  - AuxLabs.Twitch.EventSubType.ShoutoutCreate
  - AuxLabs.Twitch.EventSubType.ShoutoutReceived
  - AuxLabs.Twitch.EventSubType.StreamOffline
  - AuxLabs.Twitch.EventSubType.StreamOnline
  - AuxLabs.Twitch.EventSubType.UserAuthorizationGrant
  - AuxLabs.Twitch.EventSubType.UserAuthorizationRevoke
  - AuxLabs.Twitch.EventSubType.UserUpdate
  langs:
  - csharp
  - vb
  name: EventSubType
  nameWithType: EventSubType
  fullName: AuxLabs.Twitch.EventSubType
  type: Enum
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EventSubType
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public enum EventSubType
    content.vb: Public Enum EventSubType
  extensionMethods:
  - AuxLabs.Twitch.EventSubType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
- uid: AuxLabs.Twitch.EventSubType.None
  commentId: F:AuxLabs.Twitch.EventSubType.None
  id: None
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: EventSubType.None
  fullName: AuxLabs.Twitch.EventSubType.None
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: None
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: None = 0
    return:
      type: AuxLabs.Twitch.EventSubType
- uid: AuxLabs.Twitch.EventSubType.ChannelUpdate
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelUpdate
  id: ChannelUpdate
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelUpdate
  nameWithType: EventSubType.ChannelUpdate
  fullName: AuxLabs.Twitch.EventSubType.ChannelUpdate
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelUpdate
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A broadcaster updates their channel properties e.g., category, title, mature flag, broadcast, or language.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.update")]

      ChannelUpdate = 1
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.update")>

      ChannelUpdate = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.update
- uid: AuxLabs.Twitch.EventSubType.ChannelFollow
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelFollow
  id: ChannelFollow
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelFollow
  nameWithType: EventSubType.ChannelFollow
  fullName: AuxLabs.Twitch.EventSubType.ChannelFollow
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelFollow
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A specified channel receives a follow.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.follow")]

      ChannelFollow = 2
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.follow")>

      ChannelFollow = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.follow
- uid: AuxLabs.Twitch.EventSubType.ChannelSubscribe
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelSubscribe
  id: ChannelSubscribe
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelSubscribe
  nameWithType: EventSubType.ChannelSubscribe
  fullName: AuxLabs.Twitch.EventSubType.ChannelSubscribe
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelSubscribe
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A notification when a specified channel receives a subscriber. This does not include resubscribes.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.subscribe")]

      ChannelSubscribe = 3
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.subscribe")>

      ChannelSubscribe = 3
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.subscribe
- uid: AuxLabs.Twitch.EventSubType.ChannelSubscriptionEnd
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelSubscriptionEnd
  id: ChannelSubscriptionEnd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelSubscriptionEnd
  nameWithType: EventSubType.ChannelSubscriptionEnd
  fullName: AuxLabs.Twitch.EventSubType.ChannelSubscriptionEnd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelSubscriptionEnd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A notification when a subscription to the specified channel ends.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.subscription.end")]

      ChannelSubscriptionEnd = 4
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.subscription.end")>

      ChannelSubscriptionEnd = 4
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.subscription.end
- uid: AuxLabs.Twitch.EventSubType.ChannelSubscriptionGift
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelSubscriptionGift
  id: ChannelSubscriptionGift
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelSubscriptionGift
  nameWithType: EventSubType.ChannelSubscriptionGift
  fullName: AuxLabs.Twitch.EventSubType.ChannelSubscriptionGift
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelSubscriptionGift
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A notification when a viewer gives a gift subscription to one or more users in the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.subscription.gift")]

      ChannelSubscriptionGift = 5
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.subscription.gift")>

      ChannelSubscriptionGift = 5
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.subscription.gift
- uid: AuxLabs.Twitch.EventSubType.ChannelSubscriptionMessage
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelSubscriptionMessage
  id: ChannelSubscriptionMessage
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelSubscriptionMessage
  nameWithType: EventSubType.ChannelSubscriptionMessage
  fullName: AuxLabs.Twitch.EventSubType.ChannelSubscriptionMessage
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelSubscriptionMessage
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A notification when a user sends a resubscription chat message in a specific channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.subscription.message")]

      ChannelSubscriptionMessage = 6
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.subscription.message")>

      ChannelSubscriptionMessage = 6
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.subscription.message
- uid: AuxLabs.Twitch.EventSubType.ChannelCheer
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelCheer
  id: ChannelCheer
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelCheer
  nameWithType: EventSubType.ChannelCheer
  fullName: AuxLabs.Twitch.EventSubType.ChannelCheer
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelCheer
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 33
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A user cheers on the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.cheer")]

      ChannelCheer = 7
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.cheer")>

      ChannelCheer = 7
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.cheer
- uid: AuxLabs.Twitch.EventSubType.ChannelRaid
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelRaid
  id: ChannelRaid
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelRaid
  nameWithType: EventSubType.ChannelRaid
  fullName: AuxLabs.Twitch.EventSubType.ChannelRaid
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelRaid
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A broadcaster raids another broadcaster’s channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.raid")]

      ChannelRaid = 8
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.raid")>

      ChannelRaid = 8
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.raid
- uid: AuxLabs.Twitch.EventSubType.ChannelBan
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelBan
  id: ChannelBan
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelBan
  nameWithType: EventSubType.ChannelBan
  fullName: AuxLabs.Twitch.EventSubType.ChannelBan
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelBan
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 41
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A viewer is banned from the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.ban")]

      ChannelBan = 9
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.ban")>

      ChannelBan = 9
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.ban
- uid: AuxLabs.Twitch.EventSubType.ChannelUnban
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelUnban
  id: ChannelUnban
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelUnban
  nameWithType: EventSubType.ChannelUnban
  fullName: AuxLabs.Twitch.EventSubType.ChannelUnban
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelUnban
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 45
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A viewer is unbanned from the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.unban")]

      ChannelUnban = 10
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.unban")>

      ChannelUnban = 10
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.unban
- uid: AuxLabs.Twitch.EventSubType.ChannelModeratorAdd
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelModeratorAdd
  id: ChannelModeratorAdd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelModeratorAdd
  nameWithType: EventSubType.ChannelModeratorAdd
  fullName: AuxLabs.Twitch.EventSubType.ChannelModeratorAdd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelModeratorAdd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 49
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Moderator privileges were added to a user on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.moderator.add")]

      ChannelModeratorAdd = 11
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.moderator.add")>

      ChannelModeratorAdd = 11
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.moderator.add
- uid: AuxLabs.Twitch.EventSubType.ChannelModeratorRemove
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelModeratorRemove
  id: ChannelModeratorRemove
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelModeratorRemove
  nameWithType: EventSubType.ChannelModeratorRemove
  fullName: AuxLabs.Twitch.EventSubType.ChannelModeratorRemove
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelModeratorRemove
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 53
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Moderator privileges were removed from a user on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.moderator.remove")]

      ChannelModeratorRemove = 12
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.moderator.remove")>

      ChannelModeratorRemove = 12
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.moderator.remove
- uid: AuxLabs.Twitch.EventSubType.ChannelPointsRewardAdd
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPointsRewardAdd
  id: ChannelPointsRewardAdd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPointsRewardAdd
  nameWithType: EventSubType.ChannelPointsRewardAdd
  fullName: AuxLabs.Twitch.EventSubType.ChannelPointsRewardAdd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPointsRewardAdd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 57
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A custom channel points reward has been created for the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.channel_points_custom_reward.add")]

      ChannelPointsRewardAdd = 13
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.channel_points_custom_reward.add")>

      ChannelPointsRewardAdd = 13
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.channel_points_custom_reward.add
- uid: AuxLabs.Twitch.EventSubType.ChannelPointsRewardUpdate
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPointsRewardUpdate
  id: ChannelPointsRewardUpdate
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPointsRewardUpdate
  nameWithType: EventSubType.ChannelPointsRewardUpdate
  fullName: AuxLabs.Twitch.EventSubType.ChannelPointsRewardUpdate
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPointsRewardUpdate
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 61
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A custom channel points reward has been updated for the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.channel_points_custom_reward.update")]

      ChannelPointsRewardUpdate = 14
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.channel_points_custom_reward.update")>

      ChannelPointsRewardUpdate = 14
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.channel_points_custom_reward.update
- uid: AuxLabs.Twitch.EventSubType.ChannelPointsRewardRemove
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPointsRewardRemove
  id: ChannelPointsRewardRemove
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPointsRewardRemove
  nameWithType: EventSubType.ChannelPointsRewardRemove
  fullName: AuxLabs.Twitch.EventSubType.ChannelPointsRewardRemove
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPointsRewardRemove
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 65
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A custom channel points reward has been removed from the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.channel_points_custom_reward.remove")]

      ChannelPointsRewardRemove = 15
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.channel_points_custom_reward.remove")>

      ChannelPointsRewardRemove = 15
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.channel_points_custom_reward.remove
- uid: AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionAdd
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionAdd
  id: ChannelPointsRedemptionAdd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPointsRedemptionAdd
  nameWithType: EventSubType.ChannelPointsRedemptionAdd
  fullName: AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionAdd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPointsRedemptionAdd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 69
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A viewer has redeemed a custom channel points reward on the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.channel_points_custom_reward_redemption.add")]

      ChannelPointsRedemptionAdd = 16
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.channel_points_custom_reward_redemption.add")>

      ChannelPointsRedemptionAdd = 16
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.channel_points_custom_reward_redemption.add
- uid: AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionUpdate
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionUpdate
  id: ChannelPointsRedemptionUpdate
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPointsRedemptionUpdate
  nameWithType: EventSubType.ChannelPointsRedemptionUpdate
  fullName: AuxLabs.Twitch.EventSubType.ChannelPointsRedemptionUpdate
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPointsRedemptionUpdate
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 73
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A redemption of a channel points custom reward has been updated for the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.channel_points_custom_reward_redemption.update")]

      ChannelPointsRedemptionUpdate = 17
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.channel_points_custom_reward_redemption.update")>

      ChannelPointsRedemptionUpdate = 17
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.channel_points_custom_reward_redemption.update
- uid: AuxLabs.Twitch.EventSubType.ChannelPollStart
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPollStart
  id: ChannelPollStart
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPollStart
  nameWithType: EventSubType.ChannelPollStart
  fullName: AuxLabs.Twitch.EventSubType.ChannelPollStart
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPollStart
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 77
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A poll started on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.poll.Start")]

      ChannelPollStart = 18
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.poll.Start")>

      ChannelPollStart = 18
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.poll.Start
- uid: AuxLabs.Twitch.EventSubType.ChannelPollProgress
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPollProgress
  id: ChannelPollProgress
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPollProgress
  nameWithType: EventSubType.ChannelPollProgress
  fullName: AuxLabs.Twitch.EventSubType.ChannelPollProgress
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPollProgress
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 81
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Users respond to a poll on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.poll.progress")]

      ChannelPollProgress = 19
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.poll.progress")>

      ChannelPollProgress = 19
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.poll.progress
- uid: AuxLabs.Twitch.EventSubType.ChannelPollEnd
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPollEnd
  id: ChannelPollEnd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPollEnd
  nameWithType: EventSubType.ChannelPollEnd
  fullName: AuxLabs.Twitch.EventSubType.ChannelPollEnd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPollEnd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 85
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A poll ended on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.poll.end")]

      ChannelPollEnd = 20
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.poll.end")>

      ChannelPollEnd = 20
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.poll.end
- uid: AuxLabs.Twitch.EventSubType.ChannelPredictionStart
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPredictionStart
  id: ChannelPredictionStart
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPredictionStart
  nameWithType: EventSubType.ChannelPredictionStart
  fullName: AuxLabs.Twitch.EventSubType.ChannelPredictionStart
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPredictionStart
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 89
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A Prediction started on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.prediction.Start")]

      ChannelPredictionStart = 21
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.prediction.Start")>

      ChannelPredictionStart = 21
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.prediction.Start
- uid: AuxLabs.Twitch.EventSubType.ChannelPredictionProgress
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPredictionProgress
  id: ChannelPredictionProgress
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPredictionProgress
  nameWithType: EventSubType.ChannelPredictionProgress
  fullName: AuxLabs.Twitch.EventSubType.ChannelPredictionProgress
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPredictionProgress
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 93
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Users participated in a Prediction on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.prediction.progress")]

      ChannelPredictionProgress = 22
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.prediction.progress")>

      ChannelPredictionProgress = 22
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.prediction.progress
- uid: AuxLabs.Twitch.EventSubType.ChannelPredictionLock
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPredictionLock
  id: ChannelPredictionLock
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPredictionLock
  nameWithType: EventSubType.ChannelPredictionLock
  fullName: AuxLabs.Twitch.EventSubType.ChannelPredictionLock
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPredictionLock
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 97
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A Prediction was locked on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.prediction.lock")]

      ChannelPredictionLock = 23
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.prediction.lock")>

      ChannelPredictionLock = 23
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.prediction.lock
- uid: AuxLabs.Twitch.EventSubType.ChannelPredictionEnd
  commentId: F:AuxLabs.Twitch.EventSubType.ChannelPredictionEnd
  id: ChannelPredictionEnd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ChannelPredictionEnd
  nameWithType: EventSubType.ChannelPredictionEnd
  fullName: AuxLabs.Twitch.EventSubType.ChannelPredictionEnd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPredictionEnd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 101
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A Prediction ended on a specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.prediction.end")]

      ChannelPredictionEnd = 24
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.prediction.end")>

      ChannelPredictionEnd = 24
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.prediction.end
- uid: AuxLabs.Twitch.EventSubType.CharityDonation
  commentId: F:AuxLabs.Twitch.EventSubType.CharityDonation
  id: CharityDonation
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: CharityDonation
  nameWithType: EventSubType.CharityDonation
  fullName: AuxLabs.Twitch.EventSubType.CharityDonation
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CharityDonation
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 105
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends an event notification when a user donates to the broadcaster’s charity campaign.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.charity_campaign.donate")]

      CharityDonation = 25
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.charity_campaign.donate")>

      CharityDonation = 25
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.charity_campaign.donate
- uid: AuxLabs.Twitch.EventSubType.CharityCampaignStart
  commentId: F:AuxLabs.Twitch.EventSubType.CharityCampaignStart
  id: CharityCampaignStart
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: CharityCampaignStart
  nameWithType: EventSubType.CharityCampaignStart
  fullName: AuxLabs.Twitch.EventSubType.CharityCampaignStart
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CharityCampaignStart
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 109
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends an event notification when the broadcaster starts a charity campaign.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.charity_campaign.start")]

      CharityCampaignStart = 26
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.charity_campaign.start")>

      CharityCampaignStart = 26
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.charity_campaign.start
- uid: AuxLabs.Twitch.EventSubType.CharityCampaignProgress
  commentId: F:AuxLabs.Twitch.EventSubType.CharityCampaignProgress
  id: CharityCampaignProgress
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: CharityCampaignProgress
  nameWithType: EventSubType.CharityCampaignProgress
  fullName: AuxLabs.Twitch.EventSubType.CharityCampaignProgress
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CharityCampaignProgress
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 113
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends an event notification when progress is made towards the campaign’s goal or when the broadcaster changes the fundraising goal.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.charity_campaign.progress")]

      CharityCampaignProgress = 27
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.charity_campaign.progress")>

      CharityCampaignProgress = 27
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.charity_campaign.progress
- uid: AuxLabs.Twitch.EventSubType.CharityCampaignStop
  commentId: F:AuxLabs.Twitch.EventSubType.CharityCampaignStop
  id: CharityCampaignStop
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: CharityCampaignStop
  nameWithType: EventSubType.CharityCampaignStop
  fullName: AuxLabs.Twitch.EventSubType.CharityCampaignStop
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CharityCampaignStop
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 117
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends an event notification when the broadcaster stops a charity campaign.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.charity_campaign.stop")]

      CharityCampaignStop = 28
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.charity_campaign.stop")>

      CharityCampaignStop = 28
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.charity_campaign.stop
- uid: AuxLabs.Twitch.EventSubType.DropEntitlementGrant
  commentId: F:AuxLabs.Twitch.EventSubType.DropEntitlementGrant
  id: DropEntitlementGrant
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: DropEntitlementGrant
  nameWithType: EventSubType.DropEntitlementGrant
  fullName: AuxLabs.Twitch.EventSubType.DropEntitlementGrant
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DropEntitlementGrant
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 121
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: An entitlement for a Drop is granted to a user.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "drop.entitlement.grant")]

      DropEntitlementGrant = 29
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="drop.entitlement.grant")>

      DropEntitlementGrant = 29
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: drop.entitlement.grant
- uid: AuxLabs.Twitch.EventSubType.ExtensionBitsTransactionCreate
  commentId: F:AuxLabs.Twitch.EventSubType.ExtensionBitsTransactionCreate
  id: ExtensionBitsTransactionCreate
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ExtensionBitsTransactionCreate
  nameWithType: EventSubType.ExtensionBitsTransactionCreate
  fullName: AuxLabs.Twitch.EventSubType.ExtensionBitsTransactionCreate
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ExtensionBitsTransactionCreate
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 125
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A Bits transaction occurred for a specified Twitch Extension.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "extension.bits_transaction.create")]

      ExtensionBitsTransactionCreate = 30
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="extension.bits_transaction.create")>

      ExtensionBitsTransactionCreate = 30
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: extension.bits_transaction.create
- uid: AuxLabs.Twitch.EventSubType.GoalStart
  commentId: F:AuxLabs.Twitch.EventSubType.GoalStart
  id: GoalStart
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: GoalStart
  nameWithType: EventSubType.GoalStart
  fullName: AuxLabs.Twitch.EventSubType.GoalStart
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GoalStart
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 129
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Get notified when a broadcaster Starts a goal.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.goal.Start")]

      GoalStart = 31
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.goal.Start")>

      GoalStart = 31
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.goal.Start
- uid: AuxLabs.Twitch.EventSubType.GoalProgress
  commentId: F:AuxLabs.Twitch.EventSubType.GoalProgress
  id: GoalProgress
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: GoalProgress
  nameWithType: EventSubType.GoalProgress
  fullName: AuxLabs.Twitch.EventSubType.GoalProgress
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GoalProgress
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 133
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Get notified when progress (either positive or negative) is made towards a broadcaster’s goal.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.goal.progress")]

      GoalProgress = 32
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.goal.progress")>

      GoalProgress = 32
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.goal.progress
- uid: AuxLabs.Twitch.EventSubType.GoalEnd
  commentId: F:AuxLabs.Twitch.EventSubType.GoalEnd
  id: GoalEnd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: GoalEnd
  nameWithType: EventSubType.GoalEnd
  fullName: AuxLabs.Twitch.EventSubType.GoalEnd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GoalEnd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 137
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Get notified when a broadcaster ends a goal.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.goal.end")]

      GoalEnd = 33
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.goal.end")>

      GoalEnd = 33
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.goal.end
- uid: AuxLabs.Twitch.EventSubType.HypeTrainStart
  commentId: F:AuxLabs.Twitch.EventSubType.HypeTrainStart
  id: HypeTrainStart
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: HypeTrainStart
  nameWithType: EventSubType.HypeTrainStart
  fullName: AuxLabs.Twitch.EventSubType.HypeTrainStart
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: HypeTrainStart
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 141
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A Hype Train Starts on the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.hype_train.Start")]

      HypeTrainStart = 34
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.hype_train.Start")>

      HypeTrainStart = 34
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.hype_train.Start
- uid: AuxLabs.Twitch.EventSubType.HypeTrainProgress
  commentId: F:AuxLabs.Twitch.EventSubType.HypeTrainProgress
  id: HypeTrainProgress
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: HypeTrainProgress
  nameWithType: EventSubType.HypeTrainProgress
  fullName: AuxLabs.Twitch.EventSubType.HypeTrainProgress
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: HypeTrainProgress
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 145
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A Hype Train makes progress on the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.hype_train.progress")]

      HypeTrainProgress = 35
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.hype_train.progress")>

      HypeTrainProgress = 35
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.hype_train.progress
- uid: AuxLabs.Twitch.EventSubType.HypeTrainEnd
  commentId: F:AuxLabs.Twitch.EventSubType.HypeTrainEnd
  id: HypeTrainEnd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: HypeTrainEnd
  nameWithType: EventSubType.HypeTrainEnd
  fullName: AuxLabs.Twitch.EventSubType.HypeTrainEnd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: HypeTrainEnd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 149
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A Hype Train ends on the specified channel.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.hype_train.end")]

      HypeTrainEnd = 36
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.hype_train.end")>

      HypeTrainEnd = 36
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.hype_train.end
- uid: AuxLabs.Twitch.EventSubType.ShieldModeStart
  commentId: F:AuxLabs.Twitch.EventSubType.ShieldModeStart
  id: ShieldModeStart
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ShieldModeStart
  nameWithType: EventSubType.ShieldModeStart
  fullName: AuxLabs.Twitch.EventSubType.ShieldModeStart
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ShieldModeStart
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 153
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends a notification when the broadcaster activates Shield Mode.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.shield_mode.Start")]

      ShieldModeStart = 37
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.shield_mode.Start")>

      ShieldModeStart = 37
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.shield_mode.Start
- uid: AuxLabs.Twitch.EventSubType.ShieldModeEnd
  commentId: F:AuxLabs.Twitch.EventSubType.ShieldModeEnd
  id: ShieldModeEnd
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ShieldModeEnd
  nameWithType: EventSubType.ShieldModeEnd
  fullName: AuxLabs.Twitch.EventSubType.ShieldModeEnd
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ShieldModeEnd
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 157
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends a notification when the broadcaster deactivates Shield Mode.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.shield_mode.end")]

      ShieldModeEnd = 38
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.shield_mode.end")>

      ShieldModeEnd = 38
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.shield_mode.end
- uid: AuxLabs.Twitch.EventSubType.ShoutoutCreate
  commentId: F:AuxLabs.Twitch.EventSubType.ShoutoutCreate
  id: ShoutoutCreate
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ShoutoutCreate
  nameWithType: EventSubType.ShoutoutCreate
  fullName: AuxLabs.Twitch.EventSubType.ShoutoutCreate
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ShoutoutCreate
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 161
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends a notification when the specified broadcaster sends a Shoutout.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.shoutout.create")]

      ShoutoutCreate = 39
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.shoutout.create")>

      ShoutoutCreate = 39
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.shoutout.create
- uid: AuxLabs.Twitch.EventSubType.ShoutoutReceived
  commentId: F:AuxLabs.Twitch.EventSubType.ShoutoutReceived
  id: ShoutoutReceived
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: ShoutoutReceived
  nameWithType: EventSubType.ShoutoutReceived
  fullName: AuxLabs.Twitch.EventSubType.ShoutoutReceived
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ShoutoutReceived
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 165
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: Sends a notification when the specified broadcaster receives a Shoutout.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel.shoutout.receive")]

      ShoutoutReceived = 40
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="channel.shoutout.receive")>

      ShoutoutReceived = 40
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel.shoutout.receive
- uid: AuxLabs.Twitch.EventSubType.StreamOnline
  commentId: F:AuxLabs.Twitch.EventSubType.StreamOnline
  id: StreamOnline
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: StreamOnline
  nameWithType: EventSubType.StreamOnline
  fullName: AuxLabs.Twitch.EventSubType.StreamOnline
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StreamOnline
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 169
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: The specified broadcaster starts a stream.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "stream.online")]

      StreamOnline = 41
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="stream.online")>

      StreamOnline = 41
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: stream.online
- uid: AuxLabs.Twitch.EventSubType.StreamOffline
  commentId: F:AuxLabs.Twitch.EventSubType.StreamOffline
  id: StreamOffline
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: StreamOffline
  nameWithType: EventSubType.StreamOffline
  fullName: AuxLabs.Twitch.EventSubType.StreamOffline
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StreamOffline
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 173
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: The specified broadcaster stops a stream.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "stream.offline")]

      StreamOffline = 42
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="stream.offline")>

      StreamOffline = 42
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: stream.offline
- uid: AuxLabs.Twitch.EventSubType.UserAuthorizationGrant
  commentId: F:AuxLabs.Twitch.EventSubType.UserAuthorizationGrant
  id: UserAuthorizationGrant
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: UserAuthorizationGrant
  nameWithType: EventSubType.UserAuthorizationGrant
  fullName: AuxLabs.Twitch.EventSubType.UserAuthorizationGrant
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserAuthorizationGrant
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 177
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A user’s authorization has been granted to your client id.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "user.authorization.grant")]

      UserAuthorizationGrant = 43
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="user.authorization.grant")>

      UserAuthorizationGrant = 43
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: user.authorization.grant
- uid: AuxLabs.Twitch.EventSubType.UserAuthorizationRevoke
  commentId: F:AuxLabs.Twitch.EventSubType.UserAuthorizationRevoke
  id: UserAuthorizationRevoke
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: UserAuthorizationRevoke
  nameWithType: EventSubType.UserAuthorizationRevoke
  fullName: AuxLabs.Twitch.EventSubType.UserAuthorizationRevoke
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserAuthorizationRevoke
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 181
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A user’s authorization has been revoked for your client id.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "user.authorization.revoke")]

      UserAuthorizationRevoke = 44
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="user.authorization.revoke")>

      UserAuthorizationRevoke = 44
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: user.authorization.revoke
- uid: AuxLabs.Twitch.EventSubType.UserUpdate
  commentId: F:AuxLabs.Twitch.EventSubType.UserUpdate
  id: UserUpdate
  parent: AuxLabs.Twitch.EventSubType
  langs:
  - csharp
  - vb
  name: UserUpdate
  nameWithType: EventSubType.UserUpdate
  fullName: AuxLabs.Twitch.EventSubType.UserUpdate
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserUpdate
    path: ../src/AuxLabs.Twitch.Core/Models/EventSub/EventSubType.cs
    startLine: 185
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: A user has updated their account.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "user.update")]

      UserUpdate = 45
    return:
      type: AuxLabs.Twitch.EventSubType
    content.vb: >-
      <EnumMember(Value:="user.update")>

      UserUpdate = 45
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: user.update
references:
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.EventSubType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  parent: AuxLabs.Twitch.EnumHelper
  definition: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.EventSubType).html
  name: GetStringValue<EventSubType>(EventSubType)
  nameWithType: EnumHelper.GetStringValue<EventSubType>(EventSubType)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<AuxLabs.Twitch.EventSubType>(AuxLabs.Twitch.EventSubType)
  nameWithType.vb: EnumHelper.GetStringValue(Of EventSubType)(EventSubType)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of AuxLabs.Twitch.EventSubType)(AuxLabs.Twitch.EventSubType)
  name.vb: GetStringValue(Of EventSubType)(EventSubType)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.EventSubType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.EventSubType).html
  - name: <
  - uid: AuxLabs.Twitch.EventSubType
    name: EventSubType
    href: AuxLabs.Twitch.EventSubType.html
  - name: '>'
  - name: (
  - uid: AuxLabs.Twitch.EventSubType
    name: EventSubType
    href: AuxLabs.Twitch.EventSubType.html
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.EventSubType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.EventSubType).html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.EventSubType
    name: EventSubType
    href: AuxLabs.Twitch.EventSubType.html
  - name: )
  - name: (
  - uid: AuxLabs.Twitch.EventSubType
    name: EventSubType
    href: AuxLabs.Twitch.EventSubType.html
  - name: )
- uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  name: GetStringValue<T>(T)
  nameWithType: EnumHelper.GetStringValue<T>(T)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<T>(T)
  nameWithType.vb: EnumHelper.GetStringValue(Of T)(T)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of T)(T)
  name.vb: GetStringValue(Of T)(T)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EnumHelper
  commentId: T:AuxLabs.Twitch.EnumHelper
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EnumHelper.html
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: AuxLabs.Twitch.EnumHelper
- uid: AuxLabs.Twitch.EventSubType
  commentId: T:AuxLabs.Twitch.EventSubType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EventSubType.html
  name: EventSubType
  nameWithType: EventSubType
  fullName: AuxLabs.Twitch.EventSubType
memberLayout: SeparatePages
