### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags
  commentId: T:AuxLabs.Twitch.Chat.Models.WhisperTags
  id: WhisperTags
  parent: AuxLabs.Twitch.Chat.Models
  children:
  - AuxLabs.Twitch.Chat.Models.WhisperTags.Action
  - AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor
  - AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName
  - AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId
  - AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType
  - AuxLabs.Twitch.Chat.Models.WhisperTags.Badges
  - AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap
  - AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes
  - AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo
  - AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  - AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId
  - AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId
  langs:
  - csharp
  - vb
  name: WhisperTags
  nameWithType: WhisperTags
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperTags
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  syntax:
    content: 'public class WhisperTags : BaseTags, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable'
    content.vb: Public Class WhisperTags Inherits BaseTags Implements IDictionary(Of String, String), ICollection(Of KeyValuePair(Of String, String)), IEnumerable(Of KeyValuePair(Of String, String)), IEnumerable
  inheritance:
  - System.Object
  - AuxLabs.Twitch.QueryMap
  - AuxLabs.Twitch.Chat.Models.BaseTags
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.String}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId
  id: MessageId
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: MessageId
  nameWithType: WhisperTags.MessageId
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageId
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: An ID that uniquely identifies the message.
  example: []
  syntax:
    content: public string MessageId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MessageId As String
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId
  id: ThreadId
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: ThreadId
  nameWithType: WhisperTags.ThreadId
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ThreadId
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: An ID that uniquely identifies the whisper thread.
  example: []
  syntax:
    content: public string ThreadId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThreadId As String
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId
  id: AuthorId
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: AuthorId
  nameWithType: WhisperTags.AuthorId
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AuthorId
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: The ID of the user that sent the message.
  example: []
  syntax:
    content: public string AuthorId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthorId As String
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName
  id: AuthorDisplayName
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: AuthorDisplayName
  nameWithType: WhisperTags.AuthorDisplayName
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AuthorDisplayName
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: The user’s display name.
  example: []
  syntax:
    content: public string AuthorDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthorDisplayName As String
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor
  id: AuthorColor
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: AuthorColor
  nameWithType: WhisperTags.AuthorColor
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AuthorColor
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: The color of the user’s name in the chat room.
  example: []
  syntax:
    content: public Color AuthorColor { get; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property AuthorColor As Color
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType
  id: AuthorType
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: AuthorType
  nameWithType: WhisperTags.AuthorType
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AuthorType
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: The type of user.
  example: []
  syntax:
    content: public UserType AuthorType { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Chat.UserType
    content.vb: Public Property AuthorType As UserType
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.Badges
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.Badges
  id: Badges
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: Badges
  nameWithType: WhisperTags.Badges
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.Badges
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Badges
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: A collection of badges the user has.
  example: []
  syntax:
    content: public IReadOnlyCollection<Badge> Badges { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}
    content.vb: Public Property Badges As IReadOnlyCollection(Of Badge)
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.Badges*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes
  id: Emotes
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: Emotes
  nameWithType: WhisperTags.Emotes
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Emotes
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: A collection of emotes and their position in the message.
  example: []
  syntax:
    content: public IReadOnlyCollection<EmotePosition> Emotes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmotePosition}
    content.vb: Public Property Emotes As IReadOnlyCollection(Of EmotePosition)
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.Action
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.Action
  id: Action
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: WhisperTags.Action
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.Action
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Action
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: The message value when someone uses the /me chat command
  example: []
  syntax:
    content: public string Action { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Action As String
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.Action*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo
  commentId: P:AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo
  id: IsTurbo
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: IsTurbo
  nameWithType: WhisperTags.IsTurbo
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsTurbo
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 35
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Indicates whether the user has site-wide commercial free mode enabled.
  example: []
  syntax:
    content: public bool IsTurbo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsTurbo As Boolean
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap
  commentId: M:AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap
  id: CreateQueryMap
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: CreateQueryMap()
  nameWithType: WhisperTags.CreateQueryMap()
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CreateQueryMap
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  example: []
  syntax:
    content: public override IDictionary<string, string> CreateQueryMap()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Overrides Function CreateQueryMap() As IDictionary(Of String, String)
  overridden: AuxLabs.Twitch.QueryMap.CreateQueryMap
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap*
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  commentId: M:AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  id: LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  parent: AuxLabs.Twitch.Chat.Models.WhisperTags
  langs:
  - csharp
  - vb
  name: LoadQueryMap(IReadOnlyDictionary<string, string>)
  nameWithType: WhisperTags.LoadQueryMap(IReadOnlyDictionary<string, string>)
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary<string, string>)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LoadQueryMap
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/Tags/WhisperTags.cs
    startLine: 53
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat.Models
  summary: Fill a dictionary with tags in their query format.
  example: []
  syntax:
    content: public override void LoadQueryMap(IReadOnlyDictionary<string, string> map)
    parameters:
    - id: map
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
    content.vb: Public Overrides Sub LoadQueryMap(map As IReadOnlyDictionary(Of String, String))
  overridden: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  overload: AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap*
  nameWithType.vb: WhisperTags.LoadQueryMap(IReadOnlyDictionary(Of String, String))
  fullName.vb: AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary(Of String, String))
  name.vb: LoadQueryMap(IReadOnlyDictionary(Of String, String))
references:
- uid: AuxLabs.Twitch.Chat.Models
  commentId: N:AuxLabs.Twitch.Chat.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat.Models
  nameWithType: AuxLabs.Twitch.Chat.Models
  fullName: AuxLabs.Twitch.Chat.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Models
    name: Models
    href: AuxLabs.Twitch.Chat.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  - name: .
  - uid: AuxLabs.Twitch.Chat.Models
    name: Models
    href: AuxLabs.Twitch.Chat.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.QueryMap
  commentId: T:AuxLabs.Twitch.QueryMap
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.QueryMap.html
  name: QueryMap
  nameWithType: QueryMap
  fullName: AuxLabs.Twitch.QueryMap
- uid: AuxLabs.Twitch.Chat.Models.BaseTags
  commentId: T:AuxLabs.Twitch.Chat.Models.BaseTags
  parent: AuxLabs.Twitch.Chat.Models
  href: AuxLabs.Twitch.Chat.Models.BaseTags.html
  name: BaseTags
  nameWithType: BaseTags
  fullName: AuxLabs.Twitch.Chat.Models.BaseTags
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<string, string>>
  nameWithType: ICollection<KeyValuePair<string, string>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of String, String))
  name.vb: ICollection(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<string, string>>
  nameWithType: IEnumerable<KeyValuePair<string, string>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId.html
  name: MessageId
  nameWithType: WhisperTags.MessageId
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.MessageId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId.html
  name: ThreadId
  nameWithType: WhisperTags.ThreadId
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.ThreadId
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId.html
  name: AuthorId
  nameWithType: WhisperTags.AuthorId
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorId
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName.html
  name: AuthorDisplayName
  nameWithType: WhisperTags.AuthorDisplayName
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorDisplayName
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor.html
  name: AuthorColor
  nameWithType: WhisperTags.AuthorColor
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorColor
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType.html
  name: AuthorType
  nameWithType: WhisperTags.AuthorType
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.AuthorType
- uid: AuxLabs.Twitch.Chat.UserType
  commentId: T:AuxLabs.Twitch.Chat.UserType
  parent: AuxLabs.Twitch.Chat
  href: AuxLabs.Twitch.Chat.UserType.html
  name: UserType
  nameWithType: UserType
  fullName: AuxLabs.Twitch.Chat.UserType
- uid: AuxLabs.Twitch.Chat
  commentId: N:AuxLabs.Twitch.Chat
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat
  nameWithType: AuxLabs.Twitch.Chat
  fullName: AuxLabs.Twitch.Chat
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.Badges*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.Badges
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.Badges.html
  name: Badges
  nameWithType: WhisperTags.Badges
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.Badges
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Chat.Badge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<Badge>
  nameWithType: IReadOnlyCollection<Badge>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Chat.Badge>
  nameWithType.vb: IReadOnlyCollection(Of Badge)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Chat.Badge)
  name.vb: IReadOnlyCollection(Of Badge)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Chat.Badge
    name: Badge
    href: AuxLabs.Twitch.Chat.Badge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.Badge
    name: Badge
    href: AuxLabs.Twitch.Chat.Badge.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes.html
  name: Emotes
  nameWithType: WhisperTags.Emotes
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.Emotes
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmotePosition}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.EmotePosition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<EmotePosition>
  nameWithType: IReadOnlyCollection<EmotePosition>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.EmotePosition>
  nameWithType.vb: IReadOnlyCollection(Of EmotePosition)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.EmotePosition)
  name.vb: IReadOnlyCollection(Of EmotePosition)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.EmotePosition
    name: EmotePosition
    href: AuxLabs.Twitch.EmotePosition.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.EmotePosition
    name: EmotePosition
    href: AuxLabs.Twitch.EmotePosition.html
  - name: )
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.Action*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.Action
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.Action.html
  name: Action
  nameWithType: WhisperTags.Action
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.Action
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo.html
  name: IsTurbo
  nameWithType: WhisperTags.IsTurbo
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.IsTurbo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.QueryMap.CreateQueryMap
  commentId: M:AuxLabs.Twitch.QueryMap.CreateQueryMap
  parent: AuxLabs.Twitch.QueryMap
  href: AuxLabs.Twitch.QueryMap.CreateQueryMap.html
  name: CreateQueryMap()
  nameWithType: QueryMap.CreateQueryMap()
  fullName: AuxLabs.Twitch.QueryMap.CreateQueryMap()
  spec.csharp:
  - uid: AuxLabs.Twitch.QueryMap.CreateQueryMap
    name: CreateQueryMap
    href: AuxLabs.Twitch.QueryMap.CreateQueryMap.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.QueryMap.CreateQueryMap
    name: CreateQueryMap
    href: AuxLabs.Twitch.QueryMap.CreateQueryMap.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap.html
  name: CreateQueryMap
  nameWithType: WhisperTags.CreateQueryMap
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.CreateQueryMap
- uid: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  commentId: M:AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
  parent: AuxLabs.Twitch.Chat.Models.BaseTags
  isExternal: true
  href: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  name: LoadQueryMap(IReadOnlyDictionary<string, string>)
  nameWithType: BaseTags.LoadQueryMap(IReadOnlyDictionary<string, string>)
  fullName: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary<string, string>)
  nameWithType.vb: BaseTags.LoadQueryMap(IReadOnlyDictionary(Of String, String))
  fullName.vb: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary(Of String, String))
  name.vb: LoadQueryMap(IReadOnlyDictionary(Of String, String))
  spec.csharp:
  - uid: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
    name: LoadQueryMap
    href: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  - name: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})
    name: LoadQueryMap
    href: AuxLabs.Twitch.Chat.Models.BaseTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  - name: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap*
  commentId: Overload:AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap
  href: AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}).html
  name: LoadQueryMap
  nameWithType: WhisperTags.LoadQueryMap
  fullName: AuxLabs.Twitch.Chat.Models.WhisperTags.LoadQueryMap
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, string>
  nameWithType: IReadOnlyDictionary<string, string>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, string>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
memberLayout: SeparatePages
