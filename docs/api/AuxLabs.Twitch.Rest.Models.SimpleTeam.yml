### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam
  commentId: T:AuxLabs.Twitch.Rest.Models.SimpleTeam
  id: SimpleTeam
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.Description
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.Id
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.Name
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl
  - AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt
  langs:
  - csharp
  - vb
  name: SimpleTeam
  nameWithType: SimpleTeam
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SimpleTeam
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class SimpleTeam
    content.vb: Public Class SimpleTeam
  inheritance:
  - System.Object
  derivedClasses:
  - AuxLabs.Twitch.Rest.Models.ChannelTeam
  - AuxLabs.Twitch.Rest.Models.Team
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SimpleTeam.Id
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies the team.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.Name
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.Name
  id: Name
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SimpleTeam.Name
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.Name
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Name
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The team’s name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("team_name")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("team_name")>

      Public Property Name As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: team_name
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName
  id: DisplayName
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: SimpleTeam.DisplayName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DisplayName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The team’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("team_display_name")]

      public string DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("team_display_name")>

      Public Property DisplayName As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: team_display_name
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl
  id: BackgroundImageUrl
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: BackgroundImageUrl
  nameWithType: SimpleTeam.BackgroundImageUrl
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BackgroundImageUrl
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A URL to the team’s background image.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("background_image_url")]

      public string BackgroundImageUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("background_image_url")>

      Public Property BackgroundImageUrl As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: background_image_url
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl
  id: BannerUrl
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: BannerUrl
  nameWithType: SimpleTeam.BannerUrl
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BannerUrl
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A URL to the team’s banner.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("banner")]

      public string BannerUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("banner")>

      Public Property BannerUrl As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: banner
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt
  id: CreatedAt
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: SimpleTeam.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CreatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of when the team was created.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("created_at")]

      public DateTime CreatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("created_at")>

      Public Property CreatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: created_at
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt
  id: UpdatedAt
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: UpdatedAt
  nameWithType: SimpleTeam.UpdatedAt
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UpdatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of the last time the team was updated.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("updated_at")]

      public DateTime UpdatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("updated_at")>

      Public Property UpdatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updated_at
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.Description
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.Description
  id: Description
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: SimpleTeam.Description
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.Description
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Description
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 36
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The team’s description. The description may contain formatting such as Markdown, HTML, newline (\n) characters, etc.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("info")]

      public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("info")>

      Public Property Description As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.Description*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: info
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl
  id: ThumbnailUrl
  parent: AuxLabs.Twitch.Rest.Models.SimpleTeam
  langs:
  - csharp
  - vb
  name: ThumbnailUrl
  nameWithType: SimpleTeam.ThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ThumbnailUrl
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Teams/SimpleTeam.cs
    startLine: 40
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A URL to a thumbnail image of the team’s logo.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("thumbnail_url")]

      public string ThumbnailUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("thumbnail_url")>

      Public Property ThumbnailUrl As String
  overload: AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: thumbnail_url
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.Id
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.Id.html
  name: Id
  nameWithType: SimpleTeam.Id
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.Name*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.Name
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.Name.html
  name: Name
  nameWithType: SimpleTeam.Name
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.Name
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName.html
  name: DisplayName
  nameWithType: SimpleTeam.DisplayName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.DisplayName
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl.html
  name: BackgroundImageUrl
  nameWithType: SimpleTeam.BackgroundImageUrl
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.BackgroundImageUrl
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl.html
  name: BannerUrl
  nameWithType: SimpleTeam.BannerUrl
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.BannerUrl
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt.html
  name: CreatedAt
  nameWithType: SimpleTeam.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt.html
  name: UpdatedAt
  nameWithType: SimpleTeam.UpdatedAt
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.UpdatedAt
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.Description*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.Description
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.Description.html
  name: Description
  nameWithType: SimpleTeam.Description
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.Description
- uid: AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl
  href: AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl.html
  name: ThumbnailUrl
  nameWithType: SimpleTeam.ThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Models.SimpleTeam.ThumbnailUrl
memberLayout: SeparatePages
