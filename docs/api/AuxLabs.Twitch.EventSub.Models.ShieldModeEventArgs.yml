### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  commentId: T:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  id: ShieldModeEventArgs
  parent: AuxLabs.Twitch.EventSub.Models
  children:
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName
  langs:
  - csharp
  - vb
  name: ShieldModeEventArgs
  nameWithType: ShieldModeEventArgs
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ShieldModeEventArgs
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  syntax:
    content: public class ShieldModeEventArgs
    content.vb: Public Class ShieldModeEventArgs
  inheritance:
  - System.Object
  derivedClasses:
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEnabledEventArgs
  - AuxLabs.Twitch.EventSub.Models.ShieldModeEndedEventArgs
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId
  commentId: P:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: ShieldModeEventArgs.BroadcasterId
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster ID.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_id")]

      public string BroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_id
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName
  commentId: P:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName
  id: BroadcasterName
  parent: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterName
  nameWithType: ShieldModeEventArgs.BroadcasterName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster login.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_login")]

      public string BroadcasterName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_login")>

      Public Property BroadcasterName As String
  overload: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_login
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName
  commentId: P:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName
  id: BroadcasterDisplayName
  parent: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterDisplayName
  nameWithType: ShieldModeEventArgs.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterDisplayName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_name")]

      public string BroadcasterDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_name")>

      Public Property BroadcasterDisplayName As String
  overload: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_name
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId
  commentId: P:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId
  id: ModeratorId
  parent: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  langs:
  - csharp
  - vb
  name: ModeratorId
  nameWithType: ShieldModeEventArgs.ModeratorId
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ModeratorId
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: An ID that identifies the moderator that updated the Shield Mode’s status.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("moderator_user_id")]

      public string ModeratorId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("moderator_user_id")>

      Public Property ModeratorId As String
  overload: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: moderator_user_id
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName
  commentId: P:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName
  id: ModeratorName
  parent: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  langs:
  - csharp
  - vb
  name: ModeratorName
  nameWithType: ShieldModeEventArgs.ModeratorName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ModeratorName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The moderator’s login name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("moderator_user_login")]

      public string ModeratorName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("moderator_user_login")>

      Public Property ModeratorName As String
  overload: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: moderator_user_login
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName
  commentId: P:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName
  id: ModeratorDisplayName
  parent: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs
  langs:
  - csharp
  - vb
  name: ModeratorDisplayName
  nameWithType: ShieldModeEventArgs.ModeratorDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ModeratorDisplayName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Moderation/ShieldModeEventArgs.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The moderator’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("moderator_user_name")]

      public string ModeratorDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("moderator_user_name")>

      Public Property ModeratorDisplayName As String
  overload: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: moderator_user_name
references:
- uid: AuxLabs.Twitch.EventSub.Models
  commentId: N:AuxLabs.Twitch.EventSub.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.EventSub.Models
  nameWithType: AuxLabs.Twitch.EventSub.Models
  fullName: AuxLabs.Twitch.EventSub.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId
  href: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId.html
  name: BroadcasterId
  nameWithType: ShieldModeEventArgs.BroadcasterId
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName
  href: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName.html
  name: BroadcasterName
  nameWithType: ShieldModeEventArgs.BroadcasterName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterName
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName
  href: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName.html
  name: BroadcasterDisplayName
  nameWithType: ShieldModeEventArgs.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.BroadcasterDisplayName
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId
  href: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId.html
  name: ModeratorId
  nameWithType: ShieldModeEventArgs.ModeratorId
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorId
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName
  href: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName.html
  name: ModeratorName
  nameWithType: ShieldModeEventArgs.ModeratorName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorName
- uid: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName
  href: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName.html
  name: ModeratorDisplayName
  nameWithType: ShieldModeEventArgs.ModeratorDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.ShieldModeEventArgs.ModeratorDisplayName
memberLayout: SeparatePages
