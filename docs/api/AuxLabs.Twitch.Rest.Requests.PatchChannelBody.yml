### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  commentId: T:AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  id: PatchChannelBody
  parent: AuxLabs.Twitch.Rest.Requests
  children:
  - AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage
  - AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay
  - AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId
  - AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags
  - AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title
  - AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate
  langs:
  - csharp
  - vb
  name: PatchChannelBody
  nameWithType: PatchChannelBody
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PatchChannelBody
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public class PatchChannelBody
    content.vb: Public Class PatchChannelBody
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId
  id: GameId
  parent: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  langs:
  - csharp
  - vb
  name: GameId
  nameWithType: PatchChannelBody.GameId
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GameId
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The ID of the game that the user plays.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("game_id")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string GameId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("game_id")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property GameId As String
  overload: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: game_id
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage
  id: BroadcasterLanguage
  parent: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  langs:
  - csharp
  - vb
  name: BroadcasterLanguage
  nameWithType: PatchChannelBody.BroadcasterLanguage
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterLanguage
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The user’s preferred language. Set the value to an ISO 639-1 two-letter language code.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("broadcaster_language")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string BroadcasterLanguage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("broadcaster_language")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property BroadcasterLanguage As String
  overload: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_language
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title
  id: Title
  parent: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: PatchChannelBody.Title
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The title of the user’s stream.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("title")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("title")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property Title As String
  overload: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay
  id: Delay
  parent: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  langs:
  - csharp
  - vb
  name: Delay
  nameWithType: PatchChannelBody.Delay
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Delay
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The number of seconds you want your broadcast buffered before streaming it live.
  remarks: Only channels with Partner status can change this property. Max value is 900.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("delay")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public int? Delay { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("delay")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property Delay As Integer?
  overload: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: delay
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags
  commentId: P:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags
  id: Tags
  parent: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: PatchChannelBody.Tags
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tags
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
    startLine: 30
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: A collection of channel-defined tags to apply to the channel.
  remarks: ''
  example: []
  syntax:
    content: >-
      [JsonPropertyName("tags")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string[] Tags { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: >-
      <JsonPropertyName("tags")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property Tags As String()
  overload: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tags
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate
  commentId: M:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate
  id: Validate
  parent: AuxLabs.Twitch.Rest.Requests.PatchChannelBody
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: PatchChannelBody.Validate()
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Validate
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Channels/PatchChannelBody.cs
    startLine: 34
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate()
  overload: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate*
references:
- uid: AuxLabs.Twitch.Rest.Requests
  commentId: N:AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Requests
  nameWithType: AuxLabs.Twitch.Rest.Requests
  fullName: AuxLabs.Twitch.Rest.Requests
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId
  href: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId.html
  name: GameId
  nameWithType: PatchChannelBody.GameId
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.GameId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage
  href: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage.html
  name: BroadcasterLanguage
  nameWithType: PatchChannelBody.BroadcasterLanguage
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.BroadcasterLanguage
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title
  href: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title.html
  name: Title
  nameWithType: PatchChannelBody.Title
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Title
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay
  href: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay.html
  name: Delay
  nameWithType: PatchChannelBody.Delay
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Delay
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags
  href: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags.html
  name: Tags
  nameWithType: PatchChannelBody.Tags
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Tags
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate
  href: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate.html
  name: Validate
  nameWithType: PatchChannelBody.Validate
  fullName: AuxLabs.Twitch.Rest.Requests.PatchChannelBody.Validate
memberLayout: SeparatePages
