### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.ExtensionMap
  commentId: T:AuxLabs.Twitch.Rest.Models.ExtensionMap
  id: ExtensionMap
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.ExtensionMap.Component
  - AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay
  - AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel
  langs:
  - csharp
  - vb
  name: ExtensionMap
  nameWithType: ExtensionMap
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionMap
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ExtensionMap
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class ExtensionMap
    content.vb: Public Class ExtensionMap
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel
  commentId: P:AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel
  id: Panel
  parent: AuxLabs.Twitch.Rest.Models.ExtensionMap
  langs:
  - csharp
  - vb
  name: Panel
  nameWithType: ExtensionMap.Panel
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Panel
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A dictionary that contains the data for a panel extension.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("panel")]

      public IReadOnlyDictionary<string, SimpleExtension> Panel { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,AuxLabs.Twitch.Rest.Models.SimpleExtension}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("panel")>

      Public Property Panel As IReadOnlyDictionary(Of String, SimpleExtension)
  overload: AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: panel
- uid: AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay
  commentId: P:AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay
  id: Overlay
  parent: AuxLabs.Twitch.Rest.Models.ExtensionMap
  langs:
  - csharp
  - vb
  name: Overlay
  nameWithType: ExtensionMap.Overlay
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Overlay
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A dictionary that contains the data for a video-overlay extension.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("overlay")]

      public IReadOnlyDictionary<string, SimpleExtension> Overlay { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,AuxLabs.Twitch.Rest.Models.SimpleExtension}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("overlay")>

      Public Property Overlay As IReadOnlyDictionary(Of String, SimpleExtension)
  overload: AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: overlay
- uid: AuxLabs.Twitch.Rest.Models.ExtensionMap.Component
  commentId: P:AuxLabs.Twitch.Rest.Models.ExtensionMap.Component
  id: Component
  parent: AuxLabs.Twitch.Rest.Models.ExtensionMap
  langs:
  - csharp
  - vb
  name: Component
  nameWithType: ExtensionMap.Component
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionMap.Component
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Component
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ExtensionMap.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A dictionary that contains the data for a video-component extension.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("component")]

      public IReadOnlyDictionary<string, ComponentExtension> Component { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,AuxLabs.Twitch.Rest.Models.ComponentExtension}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("component")>

      Public Property Component As IReadOnlyDictionary(Of String, ComponentExtension)
  overload: AuxLabs.Twitch.Rest.Models.ExtensionMap.Component*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: component
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel
  href: AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel.html
  name: Panel
  nameWithType: ExtensionMap.Panel
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionMap.Panel
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,AuxLabs.Twitch.Rest.Models.SimpleExtension}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,AuxLabs.Twitch.Rest.Models.SimpleExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, SimpleExtension>
  nameWithType: IReadOnlyDictionary<string, SimpleExtension>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, AuxLabs.Twitch.Rest.Models.SimpleExtension>
  nameWithType.vb: IReadOnlyDictionary(Of String, SimpleExtension)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, AuxLabs.Twitch.Rest.Models.SimpleExtension)
  name.vb: IReadOnlyDictionary(Of String, SimpleExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.SimpleExtension
    name: SimpleExtension
    href: AuxLabs.Twitch.Rest.Models.SimpleExtension.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.SimpleExtension
    name: SimpleExtension
    href: AuxLabs.Twitch.Rest.Models.SimpleExtension.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay
  href: AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay.html
  name: Overlay
  nameWithType: ExtensionMap.Overlay
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionMap.Overlay
- uid: AuxLabs.Twitch.Rest.Models.ExtensionMap.Component*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ExtensionMap.Component
  href: AuxLabs.Twitch.Rest.Models.ExtensionMap.Component.html
  name: Component
  nameWithType: ExtensionMap.Component
  fullName: AuxLabs.Twitch.Rest.Models.ExtensionMap.Component
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,AuxLabs.Twitch.Rest.Models.ComponentExtension}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,AuxLabs.Twitch.Rest.Models.ComponentExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, ComponentExtension>
  nameWithType: IReadOnlyDictionary<string, ComponentExtension>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, AuxLabs.Twitch.Rest.Models.ComponentExtension>
  nameWithType.vb: IReadOnlyDictionary(Of String, ComponentExtension)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, AuxLabs.Twitch.Rest.Models.ComponentExtension)
  name.vb: IReadOnlyDictionary(Of String, ComponentExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.ComponentExtension
    name: ComponentExtension
    href: AuxLabs.Twitch.Rest.Models.ComponentExtension.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.ComponentExtension
    name: ComponentExtension
    href: AuxLabs.Twitch.Rest.Models.ComponentExtension.html
  - name: )
memberLayout: SeparatePages
