### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.GoalType
  commentId: T:AuxLabs.Twitch.GoalType
  id: GoalType
  parent: AuxLabs.Twitch
  children:
  - AuxLabs.Twitch.GoalType.Follower
  - AuxLabs.Twitch.GoalType.NewSubscription
  - AuxLabs.Twitch.GoalType.NewSubscriptionCount
  - AuxLabs.Twitch.GoalType.None
  - AuxLabs.Twitch.GoalType.Subscription
  - AuxLabs.Twitch.GoalType.SusbcriptionCount
  langs:
  - csharp
  - vb
  name: GoalType
  nameWithType: GoalType
  fullName: AuxLabs.Twitch.GoalType
  type: Enum
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/GoalType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GoalType
    path: ../src/AuxLabs.Twitch.Core/Models/GoalType.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public enum GoalType
    content.vb: Public Enum GoalType
  extensionMethods:
  - AuxLabs.Twitch.GoalType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
- uid: AuxLabs.Twitch.GoalType.None
  commentId: F:AuxLabs.Twitch.GoalType.None
  id: None
  parent: AuxLabs.Twitch.GoalType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: GoalType.None
  fullName: AuxLabs.Twitch.GoalType.None
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/GoalType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: None
    path: ../src/AuxLabs.Twitch.Core/Models/GoalType.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: None = 0
    return:
      type: AuxLabs.Twitch.GoalType
- uid: AuxLabs.Twitch.GoalType.Follower
  commentId: F:AuxLabs.Twitch.GoalType.Follower
  id: Follower
  parent: AuxLabs.Twitch.GoalType
  langs:
  - csharp
  - vb
  name: Follower
  nameWithType: GoalType.Follower
  fullName: AuxLabs.Twitch.GoalType.Follower
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/GoalType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Follower
    path: ../src/AuxLabs.Twitch.Core/Models/GoalType.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: The goal is to increase followers.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "follower")]

      Follower = 1
    return:
      type: AuxLabs.Twitch.GoalType
    content.vb: >-
      <EnumMember(Value:="follower")>

      Follower = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: follower
- uid: AuxLabs.Twitch.GoalType.Subscription
  commentId: F:AuxLabs.Twitch.GoalType.Subscription
  id: Subscription
  parent: AuxLabs.Twitch.GoalType
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: GoalType.Subscription
  fullName: AuxLabs.Twitch.GoalType.Subscription
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/GoalType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Subscription
    path: ../src/AuxLabs.Twitch.Core/Models/GoalType.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: The goal is to increase subscriptions.
  remarks: This type shows the net increase or decrease in tier points associated with the subscriptions.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "subscription")]

      Subscription = 2
    return:
      type: AuxLabs.Twitch.GoalType
    content.vb: >-
      <EnumMember(Value:="subscription")>

      Subscription = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: subscription
- uid: AuxLabs.Twitch.GoalType.SusbcriptionCount
  commentId: F:AuxLabs.Twitch.GoalType.SusbcriptionCount
  id: SusbcriptionCount
  parent: AuxLabs.Twitch.GoalType
  langs:
  - csharp
  - vb
  name: SusbcriptionCount
  nameWithType: GoalType.SusbcriptionCount
  fullName: AuxLabs.Twitch.GoalType.SusbcriptionCount
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/GoalType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SusbcriptionCount
    path: ../src/AuxLabs.Twitch.Core/Models/GoalType.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: The goal is to increase subscriptions.
  remarks: This type shows the net increase or decrease in the number of subscriptions.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "subscription_count")]

      SusbcriptionCount = 3
    return:
      type: AuxLabs.Twitch.GoalType
    content.vb: >-
      <EnumMember(Value:="subscription_count")>

      SusbcriptionCount = 3
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: subscription_count
- uid: AuxLabs.Twitch.GoalType.NewSubscription
  commentId: F:AuxLabs.Twitch.GoalType.NewSubscription
  id: NewSubscription
  parent: AuxLabs.Twitch.GoalType
  langs:
  - csharp
  - vb
  name: NewSubscription
  nameWithType: GoalType.NewSubscription
  fullName: AuxLabs.Twitch.GoalType.NewSubscription
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/GoalType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NewSubscription
    path: ../src/AuxLabs.Twitch.Core/Models/GoalType.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: The goal is to increase subscriptions.
  remarks: This type shows only the net increase in tier points associated with the subscriptions.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "new_subscription")]

      NewSubscription = 4
    return:
      type: AuxLabs.Twitch.GoalType
    content.vb: >-
      <EnumMember(Value:="new_subscription")>

      NewSubscription = 4
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: new_subscription
- uid: AuxLabs.Twitch.GoalType.NewSubscriptionCount
  commentId: F:AuxLabs.Twitch.GoalType.NewSubscriptionCount
  id: NewSubscriptionCount
  parent: AuxLabs.Twitch.GoalType
  langs:
  - csharp
  - vb
  name: NewSubscriptionCount
  nameWithType: GoalType.NewSubscriptionCount
  fullName: AuxLabs.Twitch.GoalType.NewSubscriptionCount
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/GoalType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NewSubscriptionCount
    path: ../src/AuxLabs.Twitch.Core/Models/GoalType.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  summary: The goal is to increase subscriptions.
  remarks: This type shows only the net increase in the number of subscriptions.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "new_subscription_count")]

      NewSubscriptionCount = 5
    return:
      type: AuxLabs.Twitch.GoalType
    content.vb: >-
      <EnumMember(Value:="new_subscription_count")>

      NewSubscriptionCount = 5
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: new_subscription_count
references:
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.GoalType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  parent: AuxLabs.Twitch.EnumHelper
  definition: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.GoalType).html
  name: GetStringValue<GoalType>(GoalType)
  nameWithType: EnumHelper.GetStringValue<GoalType>(GoalType)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<AuxLabs.Twitch.GoalType>(AuxLabs.Twitch.GoalType)
  nameWithType.vb: EnumHelper.GetStringValue(Of GoalType)(GoalType)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of AuxLabs.Twitch.GoalType)(AuxLabs.Twitch.GoalType)
  name.vb: GetStringValue(Of GoalType)(GoalType)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.GoalType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.GoalType).html
  - name: <
  - uid: AuxLabs.Twitch.GoalType
    name: GoalType
    href: AuxLabs.Twitch.GoalType.html
  - name: '>'
  - name: (
  - uid: AuxLabs.Twitch.GoalType
    name: GoalType
    href: AuxLabs.Twitch.GoalType.html
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.GoalType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.GoalType).html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.GoalType
    name: GoalType
    href: AuxLabs.Twitch.GoalType.html
  - name: )
  - name: (
  - uid: AuxLabs.Twitch.GoalType
    name: GoalType
    href: AuxLabs.Twitch.GoalType.html
  - name: )
- uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  name: GetStringValue<T>(T)
  nameWithType: EnumHelper.GetStringValue<T>(T)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<T>(T)
  nameWithType.vb: EnumHelper.GetStringValue(Of T)(T)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of T)(T)
  name.vb: GetStringValue(Of T)(T)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EnumHelper
  commentId: T:AuxLabs.Twitch.EnumHelper
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EnumHelper.html
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: AuxLabs.Twitch.EnumHelper
- uid: AuxLabs.Twitch.GoalType
  commentId: T:AuxLabs.Twitch.GoalType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.GoalType.html
  name: GoalType
  nameWithType: GoalType
  fullName: AuxLabs.Twitch.GoalType
memberLayout: SeparatePages
