### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.Cheermote
  commentId: T:AuxLabs.Twitch.Rest.Models.Cheermote
  id: Cheermote
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable
  - AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt
  - AuxLabs.Twitch.Rest.Models.Cheermote.Name
  - AuxLabs.Twitch.Rest.Models.Cheermote.Order
  - AuxLabs.Twitch.Rest.Models.Cheermote.Tiers
  - AuxLabs.Twitch.Rest.Models.Cheermote.Type
  langs:
  - csharp
  - vb
  name: Cheermote
  nameWithType: Cheermote
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Cheermote
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class Cheermote
    content.vb: Public Class Cheermote
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Name
  commentId: P:AuxLabs.Twitch.Rest.Models.Cheermote.Name
  id: Name
  parent: AuxLabs.Twitch.Rest.Models.Cheermote
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Cheermote.Name
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Name
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Name
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The prefix of the Cheermote string that you use in chat to cheer bits.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("prefix")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("prefix")>

      Public Property Name As String
  overload: AuxLabs.Twitch.Rest.Models.Cheermote.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: prefix
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Tiers
  commentId: P:AuxLabs.Twitch.Rest.Models.Cheermote.Tiers
  id: Tiers
  parent: AuxLabs.Twitch.Rest.Models.Cheermote
  langs:
  - csharp
  - vb
  name: Tiers
  nameWithType: Cheermote.Tiers
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Tiers
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tiers
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A collection of tier levels that the Cheermote supports.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("tiers")]

      public IEnumerable<BitsTier> Tiers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{AuxLabs.Twitch.Rest.Models.BitsTier}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("tiers")>

      Public Property Tiers As IEnumerable(Of BitsTier)
  overload: AuxLabs.Twitch.Rest.Models.Cheermote.Tiers*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tiers
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Type
  commentId: P:AuxLabs.Twitch.Rest.Models.Cheermote.Type
  id: Type
  parent: AuxLabs.Twitch.Rest.Models.Cheermote
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Cheermote.Type
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Type
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Type
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The type of Cheermote.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("type")]

      public CheermoteType Type { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.CheermoteType
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("type")>

      Public Property Type As CheermoteType
  overload: AuxLabs.Twitch.Rest.Models.Cheermote.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Order
  commentId: P:AuxLabs.Twitch.Rest.Models.Cheermote.Order
  id: Order
  parent: AuxLabs.Twitch.Rest.Models.Cheermote
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: Cheermote.Order
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Order
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Order
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The order that the Cheermotes are shown in the bits card.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("order")]

      public int Order { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("order")>

      Public Property Order As Integer
  overload: AuxLabs.Twitch.Rest.Models.Cheermote.Order*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: order
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt
  id: LastUpdatedAt
  parent: AuxLabs.Twitch.Rest.Models.Cheermote
  langs:
  - csharp
  - vb
  name: LastUpdatedAt
  nameWithType: Cheermote.LastUpdatedAt
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LastUpdatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The date and time when this Cheermote was last updated.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("last_updated")]

      public DateTime LastUpdatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("last_updated")>

      Public Property LastUpdatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: last_updated
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable
  commentId: P:AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable
  id: IsCharitable
  parent: AuxLabs.Twitch.Rest.Models.Cheermote
  langs:
  - csharp
  - vb
  name: IsCharitable
  nameWithType: Cheermote.IsCharitable
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsCharitable
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Bits/Cheermote.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Indicates whether this Cheermote provides a charitable contribution match during charity campaigns.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_charitable")]

      public bool IsCharitable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_charitable")>

      Public Property IsCharitable As Boolean
  overload: AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_charitable
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Name*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Cheermote.Name
  href: AuxLabs.Twitch.Rest.Models.Cheermote.Name.html
  name: Name
  nameWithType: Cheermote.Name
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Tiers*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Cheermote.Tiers
  href: AuxLabs.Twitch.Rest.Models.Cheermote.Tiers.html
  name: Tiers
  nameWithType: Cheermote.Tiers
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Tiers
- uid: System.Collections.Generic.IEnumerable{AuxLabs.Twitch.Rest.Models.BitsTier}
  commentId: T:System.Collections.Generic.IEnumerable{AuxLabs.Twitch.Rest.Models.BitsTier}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<BitsTier>
  nameWithType: IEnumerable<BitsTier>
  fullName: System.Collections.Generic.IEnumerable<AuxLabs.Twitch.Rest.Models.BitsTier>
  nameWithType.vb: IEnumerable(Of BitsTier)
  fullName.vb: System.Collections.Generic.IEnumerable(Of AuxLabs.Twitch.Rest.Models.BitsTier)
  name.vb: IEnumerable(Of BitsTier)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.BitsTier
    name: BitsTier
    href: AuxLabs.Twitch.Rest.Models.BitsTier.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.BitsTier
    name: BitsTier
    href: AuxLabs.Twitch.Rest.Models.BitsTier.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Type*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Cheermote.Type
  href: AuxLabs.Twitch.Rest.Models.Cheermote.Type.html
  name: Type
  nameWithType: Cheermote.Type
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Type
- uid: AuxLabs.Twitch.CheermoteType
  commentId: T:AuxLabs.Twitch.CheermoteType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.CheermoteType.html
  name: CheermoteType
  nameWithType: CheermoteType
  fullName: AuxLabs.Twitch.CheermoteType
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.Order*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Cheermote.Order
  href: AuxLabs.Twitch.Rest.Models.Cheermote.Order.html
  name: Order
  nameWithType: Cheermote.Order
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.Order
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt
  href: AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt.html
  name: LastUpdatedAt
  nameWithType: Cheermote.LastUpdatedAt
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.LastUpdatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable
  href: AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable.html
  name: IsCharitable
  nameWithType: Cheermote.IsCharitable
  fullName: AuxLabs.Twitch.Rest.Models.Cheermote.IsCharitable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
memberLayout: SeparatePages
