### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.Prediction
  commentId: T:AuxLabs.Twitch.Rest.Models.Prediction
  id: Prediction
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName
  - AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId
  - AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName
  - AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt
  - AuxLabs.Twitch.Rest.Models.Prediction.EndedAt
  - AuxLabs.Twitch.Rest.Models.Prediction.Id
  - AuxLabs.Twitch.Rest.Models.Prediction.LockedAt
  - AuxLabs.Twitch.Rest.Models.Prediction.Outcomes
  - AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds
  - AuxLabs.Twitch.Rest.Models.Prediction.Status
  - AuxLabs.Twitch.Rest.Models.Prediction.Title
  - AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId
  langs:
  - csharp
  - vb
  name: Prediction
  nameWithType: Prediction
  fullName: AuxLabs.Twitch.Rest.Models.Prediction
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Prediction
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class Prediction
    content.vb: Public Class Prediction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.Id
  id: Id
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Prediction.Id
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies this prediction.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.Rest.Models.Prediction.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: Prediction.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies the broadcaster that created the prediction.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_id")]

      public string BroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_id
- uid: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName
  id: BroadcasterName
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: BroadcasterName
  nameWithType: Prediction.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s login name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_login")]

      public string BroadcasterName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_login")>

      Public Property BroadcasterName As String
  overload: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_login
- uid: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName
  id: BroadcasterDisplayName
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: BroadcasterDisplayName
  nameWithType: Prediction.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterDisplayName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_name")]

      public string BroadcasterDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_name")>

      Public Property BroadcasterDisplayName As String
  overload: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_name
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Title
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.Title
  id: Title
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: Prediction.Title
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The question that the prediction asks.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("title")]

      public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("title")>

      Public Property Title As String
  overload: AuxLabs.Twitch.Rest.Models.Prediction.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
- uid: AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId
  id: WinningOutcomeId
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: WinningOutcomeId
  nameWithType: Prediction.WinningOutcomeId
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WinningOutcomeId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID of the winning outcome.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("winning_outcome_id")]

      public string WinningOutcomeId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("winning_outcome_id")>

      Public Property WinningOutcomeId As String
  overload: AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: winning_outcome_id
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Outcomes
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.Outcomes
  id: Outcomes
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: Outcomes
  nameWithType: Prediction.Outcomes
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Outcomes
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Outcomes
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 33
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A collection of possible outcomes for the prediction.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("outcomes")]

      public IReadOnlyCollection<PredictionOption> Outcomes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.PredictionOption}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("outcomes")>

      Public Property Outcomes As IReadOnlyCollection(Of PredictionOption)
  overload: AuxLabs.Twitch.Rest.Models.Prediction.Outcomes*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: outcomes
- uid: AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds
  id: PredictionDurationSeconds
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: PredictionDurationSeconds
  nameWithType: Prediction.PredictionDurationSeconds
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PredictionDurationSeconds
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The length of time that the prediction will run for.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("prediction_window")]

      public int PredictionDurationSeconds { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("prediction_window")>

      Public Property PredictionDurationSeconds As Integer
  overload: AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: prediction_window
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Status
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.Status
  id: Status
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Prediction.Status
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Status
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Status
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 41
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The prediction’s status.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("status")]

      public PredictionStatus Status { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.PredictionStatus
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("status")>

      Public Property Status As PredictionStatus
  overload: AuxLabs.Twitch.Rest.Models.Prediction.Status*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
- uid: AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt
  id: CreatedAt
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: Prediction.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CreatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 45
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of when the Prediction began.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("created_at")]

      public DateTime CreatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("created_at")>

      Public Property CreatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: created_at
- uid: AuxLabs.Twitch.Rest.Models.Prediction.EndedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.EndedAt
  id: EndedAt
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: EndedAt
  nameWithType: Prediction.EndedAt
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.EndedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EndedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 49
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of when the Prediction ended.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("ended_at")]

      public DateTime? EndedAt { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("ended_at")>

      Public Property EndedAt As Date?
  overload: AuxLabs.Twitch.Rest.Models.Prediction.EndedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ended_at
- uid: AuxLabs.Twitch.Rest.Models.Prediction.LockedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Prediction.LockedAt
  id: LockedAt
  parent: AuxLabs.Twitch.Rest.Models.Prediction
  langs:
  - csharp
  - vb
  name: LockedAt
  nameWithType: Prediction.LockedAt
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.LockedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LockedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Predictions/Prediction.cs
    startLine: 53
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The UTC date and time of when the Prediction was locked.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("locked_at")]

      public DateTime? LockedAt { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("locked_at")>

      Public Property LockedAt As Date?
  overload: AuxLabs.Twitch.Rest.Models.Prediction.LockedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: locked_at
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Id*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.Id
  href: AuxLabs.Twitch.Rest.Models.Prediction.Id.html
  name: Id
  nameWithType: Prediction.Id
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId
  href: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId.html
  name: BroadcasterId
  nameWithType: Prediction.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterId
- uid: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName
  href: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName.html
  name: BroadcasterName
  nameWithType: Prediction.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterName
- uid: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName
  href: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName.html
  name: BroadcasterDisplayName
  nameWithType: Prediction.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.BroadcasterDisplayName
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Title*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.Title
  href: AuxLabs.Twitch.Rest.Models.Prediction.Title.html
  name: Title
  nameWithType: Prediction.Title
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Title
- uid: AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId
  href: AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId.html
  name: WinningOutcomeId
  nameWithType: Prediction.WinningOutcomeId
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.WinningOutcomeId
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Outcomes*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.Outcomes
  href: AuxLabs.Twitch.Rest.Models.Prediction.Outcomes.html
  name: Outcomes
  nameWithType: Prediction.Outcomes
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Outcomes
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.PredictionOption}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.PredictionOption}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<PredictionOption>
  nameWithType: IReadOnlyCollection<PredictionOption>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Models.PredictionOption>
  nameWithType.vb: IReadOnlyCollection(Of PredictionOption)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Models.PredictionOption)
  name.vb: IReadOnlyCollection(Of PredictionOption)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.PredictionOption
    name: PredictionOption
    href: AuxLabs.Twitch.Rest.Models.PredictionOption.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.PredictionOption
    name: PredictionOption
    href: AuxLabs.Twitch.Rest.Models.PredictionOption.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds
  href: AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds.html
  name: PredictionDurationSeconds
  nameWithType: Prediction.PredictionDurationSeconds
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.PredictionDurationSeconds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Rest.Models.Prediction.Status*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.Status
  href: AuxLabs.Twitch.Rest.Models.Prediction.Status.html
  name: Status
  nameWithType: Prediction.Status
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.Status
- uid: AuxLabs.Twitch.PredictionStatus
  commentId: T:AuxLabs.Twitch.PredictionStatus
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.PredictionStatus.html
  name: PredictionStatus
  nameWithType: PredictionStatus
  fullName: AuxLabs.Twitch.PredictionStatus
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt
  href: AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt.html
  name: CreatedAt
  nameWithType: Prediction.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Models.Prediction.EndedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.EndedAt
  href: AuxLabs.Twitch.Rest.Models.Prediction.EndedAt.html
  name: EndedAt
  nameWithType: Prediction.EndedAt
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.EndedAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.Prediction.LockedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Prediction.LockedAt
  href: AuxLabs.Twitch.Rest.Models.Prediction.LockedAt.html
  name: LockedAt
  nameWithType: Prediction.LockedAt
  fullName: AuxLabs.Twitch.Rest.Models.Prediction.LockedAt
memberLayout: SeparatePages
