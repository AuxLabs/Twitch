### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  commentId: T:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  id: PredictionEventArgs
  parent: AuxLabs.Twitch.EventSub.Models
  children:
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt
  - AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title
  langs:
  - csharp
  - vb
  name: PredictionEventArgs
  nameWithType: PredictionEventArgs
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PredictionEventArgs
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  syntax:
    content: public class PredictionEventArgs
    content.vb: Public Class PredictionEventArgs
  inheritance:
  - System.Object
  derivedClasses:
  - AuxLabs.Twitch.EventSub.Models.PredictionEndedEventArgs
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id
  id: Id
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PredictionEventArgs.Id
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The prediction identifier.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: PredictionEventArgs.BroadcasterId
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster ID.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_id")]

      public string BroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_id
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName
  id: BroadcasterName
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterName
  nameWithType: PredictionEventArgs.BroadcasterName
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster login.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_login")]

      public string BroadcasterName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_login")>

      Public Property BroadcasterName As String
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_login
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName
  id: BroadcasterDisplayName
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterDisplayName
  nameWithType: PredictionEventArgs.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterDisplayName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_name")]

      public string BroadcasterDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_name")>

      Public Property BroadcasterDisplayName As String
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_name
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title
  id: Title
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: PredictionEventArgs.Title
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Title for the Channel Points Prediction.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("title")]

      public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("title")>

      Public Property Title As String
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options
  id: Options
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: PredictionEventArgs.Options
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Options
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 30
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: A collection of outcomes for the Channel Points Prediction.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("outcomes")]

      public IReadOnlyCollection<PredictionOption> Options { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.PredictionOption}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("outcomes")>

      Public Property Options As IReadOnlyCollection(Of PredictionOption)
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: outcomes
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt
  id: StartedAt
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: StartedAt
  nameWithType: PredictionEventArgs.StartedAt
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StartedAt
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 34
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The time the Channel Points Prediction started.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("started_at")]

      public DateTime StartedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("started_at")>

      Public Property StartedAt As Date
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: started_at
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt
  commentId: P:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt
  id: LocksAt
  parent: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs
  langs:
  - csharp
  - vb
  name: LocksAt
  nameWithType: PredictionEventArgs.LocksAt
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LocksAt
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Predictions/PredictionEventArgs.cs
    startLine: 38
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The time the Channel Points Prediction will automatically lock.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("locks_at")]

      public DateTime LocksAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("locks_at")>

      Public Property LocksAt As Date
  overload: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: locks_at
references:
- uid: AuxLabs.Twitch.EventSub.Models
  commentId: N:AuxLabs.Twitch.EventSub.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.EventSub.Models
  nameWithType: AuxLabs.Twitch.EventSub.Models
  fullName: AuxLabs.Twitch.EventSub.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id.html
  name: Id
  nameWithType: PredictionEventArgs.Id
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId.html
  name: BroadcasterId
  nameWithType: PredictionEventArgs.BroadcasterId
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterId
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName.html
  name: BroadcasterName
  nameWithType: PredictionEventArgs.BroadcasterName
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterName
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName.html
  name: BroadcasterDisplayName
  nameWithType: PredictionEventArgs.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.BroadcasterDisplayName
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title.html
  name: Title
  nameWithType: PredictionEventArgs.Title
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Title
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options.html
  name: Options
  nameWithType: PredictionEventArgs.Options
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.Options
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.PredictionOption}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.Rest.Models.PredictionOption}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<PredictionOption>
  nameWithType: IReadOnlyCollection<PredictionOption>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.Rest.Models.PredictionOption>
  nameWithType.vb: IReadOnlyCollection(Of PredictionOption)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.Rest.Models.PredictionOption)
  name.vb: IReadOnlyCollection(Of PredictionOption)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.PredictionOption
    name: PredictionOption
    href: AuxLabs.Twitch.Rest.Models.PredictionOption.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.PredictionOption
    name: PredictionOption
    href: AuxLabs.Twitch.Rest.Models.PredictionOption.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt.html
  name: StartedAt
  nameWithType: PredictionEventArgs.StartedAt
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.StartedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt
  href: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt.html
  name: LocksAt
  nameWithType: PredictionEventArgs.LocksAt
  fullName: AuxLabs.Twitch.EventSub.Models.PredictionEventArgs.LocksAt
memberLayout: SeparatePages
