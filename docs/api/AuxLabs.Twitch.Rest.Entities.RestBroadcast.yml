### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestBroadcast
  id: RestBroadcast
  parent: AuxLabs.Twitch.Rest.Entities
  children:
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl(System.Int32,System.Int32)
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.User
  - AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount
  langs:
  - csharp
  - vb
  name: RestBroadcast
  nameWithType: RestBroadcast
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RestBroadcast
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: 'public class RestBroadcast : RestEntity<string>, IUpdatable'
    content.vb: Public Class RestBroadcast Inherits RestEntity(Of String) Implements IUpdatable
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  implements:
  - AuxLabs.Twitch.IUpdatable
  inheritedMembers:
  - AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.User
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.User
  id: User
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: User
  nameWithType: RestBroadcast.User
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.User
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: User
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public RestSimpleUser User { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Entities.RestSimpleUser
    content.vb: Public Property User As RestSimpleUser
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.User*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId
  id: GameId
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: GameId
  nameWithType: RestBroadcast.GameId
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GameId
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public string GameId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GameId As String
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName
  id: GameName
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: GameName
  nameWithType: RestBroadcast.GameName
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GameName
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public string GameName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GameName As String
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type
  id: Type
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RestBroadcast.Type
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Type
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public BroadcastType Type { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.BroadcastType
    content.vb: Public Property Type As BroadcastType
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title
  id: Title
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: RestBroadcast.Title
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags
  id: Tags
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: RestBroadcast.Tags
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tags
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public IReadOnlyCollection<string> Tags { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
    content.vb: Public Property Tags As IReadOnlyCollection(Of String)
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount
  id: ViewerCount
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: ViewerCount
  nameWithType: RestBroadcast.ViewerCount
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ViewerCount
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public int ViewerCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ViewerCount As Integer
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt
  id: StartedAt
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: StartedAt
  nameWithType: RestBroadcast.StartedAt
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: StartedAt
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 31
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public DateTime StartedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property StartedAt As Date
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture
  id: Culture
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: RestBroadcast.Culture
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Culture
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 34
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public CultureInfo Culture { get; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public Property Culture As CultureInfo
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl
  id: RawThumbnailUrl
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: RawThumbnailUrl
  nameWithType: RestBroadcast.RawThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RawThumbnailUrl
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public string RawThumbnailUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RawThumbnailUrl As String
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature
  id: IsMature
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: IsMature
  nameWithType: RestBroadcast.IsMature
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsMature
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 40
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: ''
  example: []
  syntax:
    content: public bool IsMature { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsMature As Boolean
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString
  id: ToString
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RestBroadcast.ToString()
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ToString
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 67
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl(System.Int32,System.Int32)
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl(System.Int32,System.Int32)
  id: GetThumbnailUrl(System.Int32,System.Int32)
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: GetThumbnailUrl(int, int)
  nameWithType: RestBroadcast.GetThumbnailUrl(int, int)
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl(int, int)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetThumbnailUrl
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 69
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  syntax:
    content: public string GetThumbnailUrl(int width, int height)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetThumbnailUrl(width As Integer, height As Integer) As String
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl*
  nameWithType.vb: RestBroadcast.GetThumbnailUrl(Integer, Integer)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl(Integer, Integer)
  name.vb: GetThumbnailUrl(Integer, Integer)
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync
  id: UpdateAsync
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: UpdateAsync()
  nameWithType: RestBroadcast.UpdateAsync()
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UpdateAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 72
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  example: []
  syntax:
    content: public virtual Task UpdateAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function UpdateAsync() As Task
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync*
  implements:
  - AuxLabs.Twitch.IUpdatable.UpdateAsync
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync
  id: GetChannelAsync
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: GetChannelAsync()
  nameWithType: RestBroadcast.GetChannelAsync()
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetChannelAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 78
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: Get the channel associated with this broadcast.
  example: []
  syntax:
    content: public Task<RestChannel> GetChannelAsync()
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
    content.vb: Public Function GetChannelAsync() As Task(Of RestChannel)
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync*
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync
  commentId: M:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync
  id: GetUserAsync
  parent: AuxLabs.Twitch.Rest.Entities.RestBroadcast
  langs:
  - csharp
  - vb
  name: GetUserAsync()
  nameWithType: RestBroadcast.GetUserAsync()
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GetUserAsync
    path: ../src/AuxLabs.Twitch.Rest/Entities/Broadcasts/RestBroadcast.cs
    startLine: 82
  assemblies:
  - AuxLabs.Twitch.Rest
  namespace: AuxLabs.Twitch.Rest.Entities
  summary: Get the user associated with this broadcast.
  example: []
  syntax:
    content: public Task<RestUser> GetUserAsync()
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestUser}
    content.vb: Public Function GetUserAsync() As Task(Of RestUser)
  overload: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync*
references:
- uid: AuxLabs.Twitch.Rest.Entities
  commentId: N:AuxLabs.Twitch.Rest.Entities
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Entities
  nameWithType: AuxLabs.Twitch.Rest.Entities
  fullName: AuxLabs.Twitch.Rest.Entities
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Entities
    name: Entities
    href: AuxLabs.Twitch.Rest.Entities.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Entities
    name: Entities
    href: AuxLabs.Twitch.Rest.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  parent: AuxLabs.Twitch.Rest.Entities
  definition: AuxLabs.Twitch.Rest.Entities.RestEntity`1
  href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  name: RestEntity<string>
  nameWithType: RestEntity<string>
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<string>
  nameWithType.vb: RestEntity(Of String)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of String)
  name.vb: RestEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.IUpdatable
  commentId: T:AuxLabs.Twitch.IUpdatable
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.IUpdatable.html
  name: IUpdatable
  nameWithType: IUpdatable
  fullName: AuxLabs.Twitch.IUpdatable
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id
  parent: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}
  definition: AuxLabs.Twitch.Rest.Entities.RestEntity`1.Id
  href: AuxLabs.Twitch.Rest.Entities.RestEntity{System.String}.Id.html
  name: Id
  nameWithType: RestEntity<string>.Id
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<string>.Id
  nameWithType.vb: RestEntity(Of String).Id
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of String).Id
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestEntity`1
  href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1
    name: RestEntity
    href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Entities.RestEntity`1.Id
  commentId: P:AuxLabs.Twitch.Rest.Entities.RestEntity`1.Id
  href: AuxLabs.Twitch.Rest.Entities.RestEntity-1.Id.html
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: AuxLabs.Twitch.Rest.Entities.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: AuxLabs.Twitch.Rest.Entities.RestEntity(Of T).Id
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.User*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.User
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.User.html
  name: User
  nameWithType: RestBroadcast.User
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.User
- uid: AuxLabs.Twitch.Rest.Entities.RestSimpleUser
  commentId: T:AuxLabs.Twitch.Rest.Entities.RestSimpleUser
  parent: AuxLabs.Twitch.Rest.Entities
  href: AuxLabs.Twitch.Rest.Entities.RestSimpleUser.html
  name: RestSimpleUser
  nameWithType: RestSimpleUser
  fullName: AuxLabs.Twitch.Rest.Entities.RestSimpleUser
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId.html
  name: GameId
  nameWithType: RestBroadcast.GameId
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName.html
  name: GameName
  nameWithType: RestBroadcast.GameName
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GameName
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type.html
  name: Type
  nameWithType: RestBroadcast.Type
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Type
- uid: AuxLabs.Twitch.BroadcastType
  commentId: T:AuxLabs.Twitch.BroadcastType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.BroadcastType.html
  name: BroadcastType
  nameWithType: BroadcastType
  fullName: AuxLabs.Twitch.BroadcastType
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title.html
  name: Title
  nameWithType: RestBroadcast.Title
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Title
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags.html
  name: Tags
  nameWithType: RestBroadcast.Tags
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Tags
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<string>
  nameWithType: IReadOnlyCollection<string>
  fullName: System.Collections.Generic.IReadOnlyCollection<string>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount.html
  name: ViewerCount
  nameWithType: RestBroadcast.ViewerCount
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ViewerCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt.html
  name: StartedAt
  nameWithType: RestBroadcast.StartedAt
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.StartedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture.html
  name: Culture
  nameWithType: RestBroadcast.Culture
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.Culture
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl.html
  name: RawThumbnailUrl
  nameWithType: RestBroadcast.RawThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.RawThumbnailUrl
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature.html
  name: IsMature
  nameWithType: RestBroadcast.IsMature
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.IsMature
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString.html
  name: ToString
  nameWithType: RestBroadcast.ToString
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.ToString
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl(System.Int32,System.Int32).html
  name: GetThumbnailUrl
  nameWithType: RestBroadcast.GetThumbnailUrl
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetThumbnailUrl
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync.html
  name: UpdateAsync
  nameWithType: RestBroadcast.UpdateAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.UpdateAsync
- uid: AuxLabs.Twitch.IUpdatable.UpdateAsync
  commentId: M:AuxLabs.Twitch.IUpdatable.UpdateAsync
  parent: AuxLabs.Twitch.IUpdatable
  href: AuxLabs.Twitch.IUpdatable.UpdateAsync.html
  name: UpdateAsync()
  nameWithType: IUpdatable.UpdateAsync()
  fullName: AuxLabs.Twitch.IUpdatable.UpdateAsync()
  spec.csharp:
  - uid: AuxLabs.Twitch.IUpdatable.UpdateAsync
    name: UpdateAsync
    href: AuxLabs.Twitch.IUpdatable.UpdateAsync.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.IUpdatable.UpdateAsync
    name: UpdateAsync
    href: AuxLabs.Twitch.IUpdatable.UpdateAsync.html
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync.html
  name: GetChannelAsync
  nameWithType: RestBroadcast.GetChannelAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetChannelAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestChannel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestChannel>
  nameWithType: Task<RestChannel>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestChannel>
  nameWithType.vb: Task(Of RestChannel)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestChannel)
  name.vb: Task(Of RestChannel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestChannel
    name: RestChannel
    href: AuxLabs.Twitch.Rest.Entities.RestChannel.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestChannel
    name: RestChannel
    href: AuxLabs.Twitch.Rest.Entities.RestChannel.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync
  href: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync.html
  name: GetUserAsync
  nameWithType: RestBroadcast.GetUserAsync
  fullName: AuxLabs.Twitch.Rest.Entities.RestBroadcast.GetUserAsync
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestUser}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Entities.RestUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RestUser>
  nameWithType: Task<RestUser>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Entities.RestUser>
  nameWithType.vb: Task(Of RestUser)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Entities.RestUser)
  name.vb: Task(Of RestUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Entities.RestUser
    name: RestUser
    href: AuxLabs.Twitch.Rest.Entities.RestUser.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Entities.RestUser
    name: RestUser
    href: AuxLabs.Twitch.Rest.Entities.RestUser.html
  - name: )
memberLayout: SeparatePages
