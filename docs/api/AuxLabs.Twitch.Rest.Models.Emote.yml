### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.Emote
  commentId: T:AuxLabs.Twitch.Rest.Models.Emote
  id: Emote
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId
  - AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId
  - AuxLabs.Twitch.Rest.Models.Emote.Tier
  - AuxLabs.Twitch.Rest.Models.Emote.Type
  langs:
  - csharp
  - vb
  name: Emote
  nameWithType: Emote
  fullName: AuxLabs.Twitch.Rest.Models.Emote
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Emote
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: 'public class Emote : GlobalEmote'
    content.vb: Public Class Emote Inherits GlobalEmote
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Rest.Models.GlobalEmote
  inheritedMembers:
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  - AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.Emote.Tier
  commentId: P:AuxLabs.Twitch.Rest.Models.Emote.Tier
  id: Tier
  parent: AuxLabs.Twitch.Rest.Models.Emote
  langs:
  - csharp
  - vb
  name: Tier
  nameWithType: Emote.Tier
  fullName: AuxLabs.Twitch.Rest.Models.Emote.Tier
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Tier
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The subscriber tier at which the emote is unlocked.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("tier")]

      public string Tier { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("tier")>

      Public Property Tier As String
  overload: AuxLabs.Twitch.Rest.Models.Emote.Tier*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tier
- uid: AuxLabs.Twitch.Rest.Models.Emote.Type
  commentId: P:AuxLabs.Twitch.Rest.Models.Emote.Type
  id: Type
  parent: AuxLabs.Twitch.Rest.Models.Emote
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Emote.Type
  fullName: AuxLabs.Twitch.Rest.Models.Emote.Type
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Type
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The type of emote.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("emote_type")]

      public EmoteType Type { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.EmoteType
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("emote_type")>

      Public Property Type As EmoteType
  overload: AuxLabs.Twitch.Rest.Models.Emote.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: emote_type
- uid: AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId
  commentId: P:AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId
  id: EmoteSetId
  parent: AuxLabs.Twitch.Rest.Models.Emote
  langs:
  - csharp
  - vb
  name: EmoteSetId
  nameWithType: Emote.EmoteSetId
  fullName: AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EmoteSetId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies the emote set that the emote belongs to.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("emote_set_id")]

      public string EmoteSetId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("emote_set_id")>

      Public Property EmoteSetId As String
  overload: AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: emote_set_id
- uid: AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.Emote
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: Emote.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Chat/Emote.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID of the broadcaster who owns the emote.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("owner_id")]

      public string BroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("owner_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: owner_id
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote
  commentId: T:AuxLabs.Twitch.Rest.Models.GlobalEmote
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.html
  name: GlobalEmote
  nameWithType: GlobalEmote
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id.html
  name: Id
  nameWithType: GlobalEmote.Id
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Id
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name.html
  name: Name
  nameWithType: GlobalEmote.Name
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Name
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images.html
  name: Images
  nameWithType: GlobalEmote.Images
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Images
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats.html
  name: Formats
  nameWithType: GlobalEmote.Formats
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Formats
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales.html
  name: Scales
  nameWithType: GlobalEmote.Scales
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Scales
- uid: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  commentId: P:AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
  parent: AuxLabs.Twitch.Rest.Models.GlobalEmote
  href: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes.html
  name: Themes
  nameWithType: GlobalEmote.Themes
  fullName: AuxLabs.Twitch.Rest.Models.GlobalEmote.Themes
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.Emote.Tier*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Emote.Tier
  href: AuxLabs.Twitch.Rest.Models.Emote.Tier.html
  name: Tier
  nameWithType: Emote.Tier
  fullName: AuxLabs.Twitch.Rest.Models.Emote.Tier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.Emote.Type*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Emote.Type
  href: AuxLabs.Twitch.Rest.Models.Emote.Type.html
  name: Type
  nameWithType: Emote.Type
  fullName: AuxLabs.Twitch.Rest.Models.Emote.Type
- uid: AuxLabs.Twitch.EmoteType
  commentId: T:AuxLabs.Twitch.EmoteType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EmoteType.html
  name: EmoteType
  nameWithType: EmoteType
  fullName: AuxLabs.Twitch.EmoteType
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId
  href: AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId.html
  name: EmoteSetId
  nameWithType: Emote.EmoteSetId
  fullName: AuxLabs.Twitch.Rest.Models.Emote.EmoteSetId
- uid: AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId
  href: AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId.html
  name: BroadcasterId
  nameWithType: Emote.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Emote.BroadcasterId
memberLayout: SeparatePages
