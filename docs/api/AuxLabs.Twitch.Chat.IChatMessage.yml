### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.IChatMessage
  commentId: T:AuxLabs.Twitch.Chat.IChatMessage
  id: IChatMessage
  parent: AuxLabs.Twitch.Chat
  children:
  - AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo
  - AuxLabs.Twitch.Chat.IChatMessage.BitsAmount
  - AuxLabs.Twitch.Chat.IChatMessage.ChannelId
  - AuxLabs.Twitch.Chat.IChatMessage.ChannelName
  - AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId
  - AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly
  - AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage
  - AuxLabs.Twitch.Chat.IChatMessage.IsModerator
  - AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber
  - AuxLabs.Twitch.Chat.IChatMessage.IsVip
  - AuxLabs.Twitch.Chat.IChatMessage.MessageType
  - AuxLabs.Twitch.Chat.IChatMessage.Nonce
  - AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName
  - AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId
  - AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName
  - AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent
  - AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId
  - AuxLabs.Twitch.Chat.IChatMessage.Timestamp
  langs:
  - csharp
  - vb
  name: IChatMessage
  nameWithType: IChatMessage
  fullName: AuxLabs.Twitch.Chat.IChatMessage
  type: Interface
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IChatMessage
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: 'public interface IChatMessage : IMessage, IEntity<string>'
    content.vb: Public Interface IChatMessage Inherits IMessage, IEntity(Of String)
  inheritedMembers:
  - AuxLabs.Twitch.Chat.IMessage.AuthorId
  - AuxLabs.Twitch.Chat.IMessage.AuthorName
  - AuxLabs.Twitch.Chat.IMessage.AuthorDisplayName
  - AuxLabs.Twitch.Chat.IMessage.AuthorType
  - AuxLabs.Twitch.Chat.IMessage.AuthorColor
  - AuxLabs.Twitch.Chat.IMessage.Content
  - AuxLabs.Twitch.Chat.IMessage.Action
  - AuxLabs.Twitch.Chat.IMessage.IsTurbo
  - AuxLabs.Twitch.Chat.IMessage.Badges
  - AuxLabs.Twitch.Chat.IMessage.Emotes
  - AuxLabs.Twitch.IEntity{System.String}.Id
- uid: AuxLabs.Twitch.Chat.IChatMessage.Timestamp
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.Timestamp
  id: Timestamp
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: IChatMessage.Timestamp
  fullName: AuxLabs.Twitch.Chat.IChatMessage.Timestamp
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Timestamp
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: DateTimeOffset Timestamp { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: ReadOnly Property Timestamp As DateTimeOffset
  overload: AuxLabs.Twitch.Chat.IChatMessage.Timestamp*
- uid: AuxLabs.Twitch.Chat.IChatMessage.ChannelId
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.ChannelId
  id: ChannelId
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: IChatMessage.ChannelId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ChannelId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelId
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string ChannelId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ChannelId As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.ChannelId*
- uid: AuxLabs.Twitch.Chat.IChatMessage.ChannelName
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.ChannelName
  id: ChannelName
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: ChannelName
  nameWithType: IChatMessage.ChannelName
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ChannelName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelName
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string ChannelName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ChannelName As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.ChannelName*
- uid: AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo
  id: BadgeInfo
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: BadgeInfo
  nameWithType: IChatMessage.BadgeInfo
  fullName: AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BadgeInfo
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string BadgeInfo { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property BadgeInfo As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo*
- uid: AuxLabs.Twitch.Chat.IChatMessage.Nonce
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.Nonce
  id: Nonce
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: Nonce
  nameWithType: IChatMessage.Nonce
  fullName: AuxLabs.Twitch.Chat.IChatMessage.Nonce
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Nonce
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string Nonce { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Nonce As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.Nonce*
- uid: AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId
  id: CustomRewardId
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: CustomRewardId
  nameWithType: IChatMessage.CustomRewardId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CustomRewardId
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string CustomRewardId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property CustomRewardId As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId*
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId
  id: ReplyMessageId
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: ReplyMessageId
  nameWithType: IChatMessage.ReplyMessageId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ReplyMessageId
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string ReplyMessageId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ReplyMessageId As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId*
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent
  id: ReplyMessageContent
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: ReplyMessageContent
  nameWithType: IChatMessage.ReplyMessageContent
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ReplyMessageContent
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string ReplyMessageContent { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ReplyMessageContent As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent*
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId
  id: ReplyAuthorId
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: ReplyAuthorId
  nameWithType: IChatMessage.ReplyAuthorId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ReplyAuthorId
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string ReplyAuthorId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ReplyAuthorId As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId*
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName
  id: ReplyAuthorName
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: ReplyAuthorName
  nameWithType: IChatMessage.ReplyAuthorName
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ReplyAuthorName
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string ReplyAuthorName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ReplyAuthorName As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName*
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName
  id: ReplyAuthorDisplayName
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: ReplyAuthorDisplayName
  nameWithType: IChatMessage.ReplyAuthorDisplayName
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ReplyAuthorDisplayName
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: string ReplyAuthorDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ReplyAuthorDisplayName As String
  overload: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName*
- uid: AuxLabs.Twitch.Chat.IChatMessage.BitsAmount
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.BitsAmount
  id: BitsAmount
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: BitsAmount
  nameWithType: IChatMessage.BitsAmount
  fullName: AuxLabs.Twitch.Chat.IChatMessage.BitsAmount
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BitsAmount
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: int BitsAmount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property BitsAmount As Integer
  overload: AuxLabs.Twitch.Chat.IChatMessage.BitsAmount*
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsModerator
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.IsModerator
  id: IsModerator
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: IsModerator
  nameWithType: IChatMessage.IsModerator
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsModerator
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsModerator
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: bool IsModerator { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsModerator As Boolean
  overload: AuxLabs.Twitch.Chat.IChatMessage.IsModerator*
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber
  id: IsSubscriber
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: IsSubscriber
  nameWithType: IChatMessage.IsSubscriber
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsSubscriber
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: bool IsSubscriber { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsSubscriber As Boolean
  overload: AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber*
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsVip
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.IsVip
  id: IsVip
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: IsVip
  nameWithType: IChatMessage.IsVip
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsVip
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsVip
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: bool IsVip { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsVip As Boolean
  overload: AuxLabs.Twitch.Chat.IChatMessage.IsVip*
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage
  id: IsFirstMessage
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: IsFirstMessage
  nameWithType: IChatMessage.IsFirstMessage
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsFirstMessage
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: bool IsFirstMessage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsFirstMessage As Boolean
  overload: AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage*
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly
  id: IsEmoteOnly
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: IsEmoteOnly
  nameWithType: IChatMessage.IsEmoteOnly
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsEmoteOnly
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 27
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: bool IsEmoteOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEmoteOnly As Boolean
  overload: AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly*
- uid: AuxLabs.Twitch.Chat.IChatMessage.MessageType
  commentId: P:AuxLabs.Twitch.Chat.IChatMessage.MessageType
  id: MessageType
  parent: AuxLabs.Twitch.Chat.IChatMessage
  langs:
  - csharp
  - vb
  name: MessageType
  nameWithType: IChatMessage.MessageType
  fullName: AuxLabs.Twitch.Chat.IChatMessage.MessageType
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageType
    path: ../src/AuxLabs.Twitch.Chat.Api/Contracts/Messages/IChatMessage.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: MessageType MessageType { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Chat.MessageType
    content.vb: ReadOnly Property MessageType As MessageType
  overload: AuxLabs.Twitch.Chat.IChatMessage.MessageType*
references:
- uid: AuxLabs.Twitch.Chat
  commentId: N:AuxLabs.Twitch.Chat
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat
  nameWithType: AuxLabs.Twitch.Chat
  fullName: AuxLabs.Twitch.Chat
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
- uid: AuxLabs.Twitch.Chat.IMessage.AuthorId
  commentId: P:AuxLabs.Twitch.Chat.IMessage.AuthorId
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.AuthorId.html
  name: AuthorId
  nameWithType: IMessage.AuthorId
  fullName: AuxLabs.Twitch.Chat.IMessage.AuthorId
- uid: AuxLabs.Twitch.Chat.IMessage.AuthorName
  commentId: P:AuxLabs.Twitch.Chat.IMessage.AuthorName
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.AuthorName.html
  name: AuthorName
  nameWithType: IMessage.AuthorName
  fullName: AuxLabs.Twitch.Chat.IMessage.AuthorName
- uid: AuxLabs.Twitch.Chat.IMessage.AuthorDisplayName
  commentId: P:AuxLabs.Twitch.Chat.IMessage.AuthorDisplayName
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.AuthorDisplayName.html
  name: AuthorDisplayName
  nameWithType: IMessage.AuthorDisplayName
  fullName: AuxLabs.Twitch.Chat.IMessage.AuthorDisplayName
- uid: AuxLabs.Twitch.Chat.IMessage.AuthorType
  commentId: P:AuxLabs.Twitch.Chat.IMessage.AuthorType
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.AuthorType.html
  name: AuthorType
  nameWithType: IMessage.AuthorType
  fullName: AuxLabs.Twitch.Chat.IMessage.AuthorType
- uid: AuxLabs.Twitch.Chat.IMessage.AuthorColor
  commentId: P:AuxLabs.Twitch.Chat.IMessage.AuthorColor
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.AuthorColor.html
  name: AuthorColor
  nameWithType: IMessage.AuthorColor
  fullName: AuxLabs.Twitch.Chat.IMessage.AuthorColor
- uid: AuxLabs.Twitch.Chat.IMessage.Content
  commentId: P:AuxLabs.Twitch.Chat.IMessage.Content
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.Content.html
  name: Content
  nameWithType: IMessage.Content
  fullName: AuxLabs.Twitch.Chat.IMessage.Content
- uid: AuxLabs.Twitch.Chat.IMessage.Action
  commentId: P:AuxLabs.Twitch.Chat.IMessage.Action
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.Action.html
  name: Action
  nameWithType: IMessage.Action
  fullName: AuxLabs.Twitch.Chat.IMessage.Action
- uid: AuxLabs.Twitch.Chat.IMessage.IsTurbo
  commentId: P:AuxLabs.Twitch.Chat.IMessage.IsTurbo
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.IsTurbo.html
  name: IsTurbo
  nameWithType: IMessage.IsTurbo
  fullName: AuxLabs.Twitch.Chat.IMessage.IsTurbo
- uid: AuxLabs.Twitch.Chat.IMessage.Badges
  commentId: P:AuxLabs.Twitch.Chat.IMessage.Badges
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.Badges.html
  name: Badges
  nameWithType: IMessage.Badges
  fullName: AuxLabs.Twitch.Chat.IMessage.Badges
- uid: AuxLabs.Twitch.Chat.IMessage.Emotes
  commentId: P:AuxLabs.Twitch.Chat.IMessage.Emotes
  parent: AuxLabs.Twitch.Chat.IMessage
  href: AuxLabs.Twitch.Chat.IMessage.Emotes.html
  name: Emotes
  nameWithType: IMessage.Emotes
  fullName: AuxLabs.Twitch.Chat.IMessage.Emotes
- uid: AuxLabs.Twitch.IEntity{System.String}.Id
  commentId: P:AuxLabs.Twitch.IEntity{System.String}.Id
  parent: AuxLabs.Twitch.IEntity{System.String}
  definition: AuxLabs.Twitch.IEntity`1.Id
  href: AuxLabs.Twitch.IEntity{System.String}.Id.html
  name: Id
  nameWithType: IEntity<string>.Id
  fullName: AuxLabs.Twitch.IEntity<string>.Id
  nameWithType.vb: IEntity(Of String).Id
  fullName.vb: AuxLabs.Twitch.IEntity(Of String).Id
- uid: AuxLabs.Twitch.Chat.IMessage
  commentId: T:AuxLabs.Twitch.Chat.IMessage
  parent: AuxLabs.Twitch.Chat
  href: AuxLabs.Twitch.Chat.IMessage.html
  name: IMessage
  nameWithType: IMessage
  fullName: AuxLabs.Twitch.Chat.IMessage
- uid: AuxLabs.Twitch.IEntity`1.Id
  commentId: P:AuxLabs.Twitch.IEntity`1.Id
  href: AuxLabs.Twitch.IEntity-1.Id.html
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: AuxLabs.Twitch.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: AuxLabs.Twitch.IEntity(Of TId).Id
- uid: AuxLabs.Twitch.IEntity{System.String}
  commentId: T:AuxLabs.Twitch.IEntity{System.String}
  parent: AuxLabs.Twitch
  definition: AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<string>
  nameWithType: IEntity<string>
  fullName: AuxLabs.Twitch.IEntity<string>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: AuxLabs.Twitch.IEntity(Of String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.IEntity`1
  commentId: T:AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: AuxLabs.Twitch.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: AuxLabs.Twitch.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - name: TId
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: )
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Chat.IChatMessage.Timestamp*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.Timestamp
  href: AuxLabs.Twitch.Chat.IChatMessage.Timestamp.html
  name: Timestamp
  nameWithType: IChatMessage.Timestamp
  fullName: AuxLabs.Twitch.Chat.IChatMessage.Timestamp
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Chat.IChatMessage.ChannelId*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.ChannelId
  href: AuxLabs.Twitch.Chat.IChatMessage.ChannelId.html
  name: ChannelId
  nameWithType: IChatMessage.ChannelId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ChannelId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Chat.IChatMessage.ChannelName*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.ChannelName
  href: AuxLabs.Twitch.Chat.IChatMessage.ChannelName.html
  name: ChannelName
  nameWithType: IChatMessage.ChannelName
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ChannelName
- uid: AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo
  href: AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo.html
  name: BadgeInfo
  nameWithType: IChatMessage.BadgeInfo
  fullName: AuxLabs.Twitch.Chat.IChatMessage.BadgeInfo
- uid: AuxLabs.Twitch.Chat.IChatMessage.Nonce*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.Nonce
  href: AuxLabs.Twitch.Chat.IChatMessage.Nonce.html
  name: Nonce
  nameWithType: IChatMessage.Nonce
  fullName: AuxLabs.Twitch.Chat.IChatMessage.Nonce
- uid: AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId
  href: AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId.html
  name: CustomRewardId
  nameWithType: IChatMessage.CustomRewardId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.CustomRewardId
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId
  href: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId.html
  name: ReplyMessageId
  nameWithType: IChatMessage.ReplyMessageId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageId
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent
  href: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent.html
  name: ReplyMessageContent
  nameWithType: IChatMessage.ReplyMessageContent
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyMessageContent
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId
  href: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId.html
  name: ReplyAuthorId
  nameWithType: IChatMessage.ReplyAuthorId
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorId
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName
  href: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName.html
  name: ReplyAuthorName
  nameWithType: IChatMessage.ReplyAuthorName
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorName
- uid: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName
  href: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName.html
  name: ReplyAuthorDisplayName
  nameWithType: IChatMessage.ReplyAuthorDisplayName
  fullName: AuxLabs.Twitch.Chat.IChatMessage.ReplyAuthorDisplayName
- uid: AuxLabs.Twitch.Chat.IChatMessage.BitsAmount*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.BitsAmount
  href: AuxLabs.Twitch.Chat.IChatMessage.BitsAmount.html
  name: BitsAmount
  nameWithType: IChatMessage.BitsAmount
  fullName: AuxLabs.Twitch.Chat.IChatMessage.BitsAmount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsModerator*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.IsModerator
  href: AuxLabs.Twitch.Chat.IChatMessage.IsModerator.html
  name: IsModerator
  nameWithType: IChatMessage.IsModerator
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsModerator
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber
  href: AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber.html
  name: IsSubscriber
  nameWithType: IChatMessage.IsSubscriber
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsSubscriber
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsVip*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.IsVip
  href: AuxLabs.Twitch.Chat.IChatMessage.IsVip.html
  name: IsVip
  nameWithType: IChatMessage.IsVip
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsVip
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage
  href: AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage.html
  name: IsFirstMessage
  nameWithType: IChatMessage.IsFirstMessage
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsFirstMessage
- uid: AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly
  href: AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly.html
  name: IsEmoteOnly
  nameWithType: IChatMessage.IsEmoteOnly
  fullName: AuxLabs.Twitch.Chat.IChatMessage.IsEmoteOnly
- uid: AuxLabs.Twitch.Chat.IChatMessage.MessageType*
  commentId: Overload:AuxLabs.Twitch.Chat.IChatMessage.MessageType
  href: AuxLabs.Twitch.Chat.IChatMessage.MessageType.html
  name: MessageType
  nameWithType: IChatMessage.MessageType
  fullName: AuxLabs.Twitch.Chat.IChatMessage.MessageType
- uid: AuxLabs.Twitch.Chat.MessageType
  commentId: T:AuxLabs.Twitch.Chat.MessageType
  parent: AuxLabs.Twitch.Chat
  href: AuxLabs.Twitch.Chat.MessageType.html
  name: MessageType
  nameWithType: MessageType
  fullName: AuxLabs.Twitch.Chat.MessageType
memberLayout: SeparatePages
