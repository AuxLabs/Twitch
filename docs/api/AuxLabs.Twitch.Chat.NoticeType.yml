### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Chat.NoticeType
  commentId: T:AuxLabs.Twitch.Chat.NoticeType
  id: NoticeType
  parent: AuxLabs.Twitch.Chat
  children:
  - AuxLabs.Twitch.Chat.NoticeType.ColorChanged
  - AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOff
  - AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOn
  - AuxLabs.Twitch.Chat.NoticeType.FollowersOff
  - AuxLabs.Twitch.Chat.NoticeType.FollowersOn
  - AuxLabs.Twitch.Chat.NoticeType.FollowersOnZero
  - AuxLabs.Twitch.Chat.NoticeType.MessageBadCharacters
  - AuxLabs.Twitch.Chat.NoticeType.MessageBanned
  - AuxLabs.Twitch.Chat.NoticeType.MessageChannelBlocked
  - AuxLabs.Twitch.Chat.NoticeType.MessageChannelSuspended
  - AuxLabs.Twitch.Chat.NoticeType.MessageDuplicate
  - AuxLabs.Twitch.Chat.NoticeType.MessageEmoteOnly
  - AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnly
  - AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyFollowed
  - AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyZero
  - AuxLabs.Twitch.Chat.NoticeType.MessageR9k
  - AuxLabs.Twitch.Chat.NoticeType.MessageRatelimited
  - AuxLabs.Twitch.Chat.NoticeType.MessageRejected
  - AuxLabs.Twitch.Chat.NoticeType.MessageRejectedMandatory
  - AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedEmail
  - AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedPhone
  - AuxLabs.Twitch.Chat.NoticeType.MessageSlowmode
  - AuxLabs.Twitch.Chat.NoticeType.MessageSubsOnly
  - AuxLabs.Twitch.Chat.NoticeType.MessageSuspended
  - AuxLabs.Twitch.Chat.NoticeType.MessageTimedout
  - AuxLabs.Twitch.Chat.NoticeType.R9kOff
  - AuxLabs.Twitch.Chat.NoticeType.R9kOn
  - AuxLabs.Twitch.Chat.NoticeType.SlowOff
  - AuxLabs.Twitch.Chat.NoticeType.SlowOn
  - AuxLabs.Twitch.Chat.NoticeType.SubsOff
  - AuxLabs.Twitch.Chat.NoticeType.SubsOn
  - AuxLabs.Twitch.Chat.NoticeType.TOSBan
  - AuxLabs.Twitch.Chat.NoticeType.Unknown
  - AuxLabs.Twitch.Chat.NoticeType.WhisperBanned
  - AuxLabs.Twitch.Chat.NoticeType.WhisperBannedRecipient
  - AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidLogin
  - AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidSelf
  - AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedMinute
  - AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedSecond
  - AuxLabs.Twitch.Chat.NoticeType.WhisperRestricted
  - AuxLabs.Twitch.Chat.NoticeType.WhisperRestrictedRecipient
  langs:
  - csharp
  - vb
  name: NoticeType
  nameWithType: NoticeType
  fullName: AuxLabs.Twitch.Chat.NoticeType
  type: Enum
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: NoticeType
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: public enum NoticeType
    content.vb: Public Enum NoticeType
  extensionMethods:
  - AuxLabs.Twitch.Chat.NoticeType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
- uid: AuxLabs.Twitch.Chat.NoticeType.Unknown
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.Unknown
  id: Unknown
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: NoticeType.Unknown
  fullName: AuxLabs.Twitch.Chat.NoticeType.Unknown
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Unknown
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: Unknown = 0
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
- uid: AuxLabs.Twitch.Chat.NoticeType.ColorChanged
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.ColorChanged
  id: ColorChanged
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: ColorChanged
  nameWithType: NoticeType.ColorChanged
  fullName: AuxLabs.Twitch.Chat.NoticeType.ColorChanged
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ColorChanged
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "color_changed")]

      ColorChanged = 1
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="color_changed")>

      ColorChanged = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: color_changed
- uid: AuxLabs.Twitch.Chat.NoticeType.TOSBan
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.TOSBan
  id: TOSBan
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: TOSBan
  nameWithType: NoticeType.TOSBan
  fullName: AuxLabs.Twitch.Chat.NoticeType.TOSBan
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TOSBan
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "tos_ban")]

      TOSBan = 2
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="tos_ban")>

      TOSBan = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: tos_ban
- uid: AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOff
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOff
  id: EmoteOnlyOff
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: EmoteOnlyOff
  nameWithType: NoticeType.EmoteOnlyOff
  fullName: AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOff
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EmoteOnlyOff
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "emote_only_off")]

      EmoteOnlyOff = 3
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="emote_only_off")>

      EmoteOnlyOff = 3
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: emote_only_off
- uid: AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOn
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOn
  id: EmoteOnlyOn
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: EmoteOnlyOn
  nameWithType: NoticeType.EmoteOnlyOn
  fullName: AuxLabs.Twitch.Chat.NoticeType.EmoteOnlyOn
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EmoteOnlyOn
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "emote_only_on")]

      EmoteOnlyOn = 4
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="emote_only_on")>

      EmoteOnlyOn = 4
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: emote_only_on
- uid: AuxLabs.Twitch.Chat.NoticeType.FollowersOff
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.FollowersOff
  id: FollowersOff
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: FollowersOff
  nameWithType: NoticeType.FollowersOff
  fullName: AuxLabs.Twitch.Chat.NoticeType.FollowersOff
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: FollowersOff
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "followers_off")]

      FollowersOff = 5
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="followers_off")>

      FollowersOff = 5
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: followers_off
- uid: AuxLabs.Twitch.Chat.NoticeType.FollowersOn
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.FollowersOn
  id: FollowersOn
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: FollowersOn
  nameWithType: NoticeType.FollowersOn
  fullName: AuxLabs.Twitch.Chat.NoticeType.FollowersOn
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: FollowersOn
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "followers_on")]

      FollowersOn = 6
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="followers_on")>

      FollowersOn = 6
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: followers_on
- uid: AuxLabs.Twitch.Chat.NoticeType.FollowersOnZero
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.FollowersOnZero
  id: FollowersOnZero
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: FollowersOnZero
  nameWithType: NoticeType.FollowersOnZero
  fullName: AuxLabs.Twitch.Chat.NoticeType.FollowersOnZero
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: FollowersOnZero
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "followers_on_zero")]

      FollowersOnZero = 7
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="followers_on_zero")>

      FollowersOnZero = 7
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: followers_on_zero
- uid: AuxLabs.Twitch.Chat.NoticeType.R9kOff
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.R9kOff
  id: R9kOff
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: R9kOff
  nameWithType: NoticeType.R9kOff
  fullName: AuxLabs.Twitch.Chat.NoticeType.R9kOff
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: R9kOff
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "R9k_off")]

      R9kOff = 8
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="R9k_off")>

      R9kOff = 8
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: R9k_off
- uid: AuxLabs.Twitch.Chat.NoticeType.R9kOn
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.R9kOn
  id: R9kOn
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: R9kOn
  nameWithType: NoticeType.R9kOn
  fullName: AuxLabs.Twitch.Chat.NoticeType.R9kOn
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: R9kOn
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 25
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "R9k_on")]

      R9kOn = 9
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="R9k_on")>

      R9kOn = 9
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: R9k_on
- uid: AuxLabs.Twitch.Chat.NoticeType.SlowOff
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.SlowOff
  id: SlowOff
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: SlowOff
  nameWithType: NoticeType.SlowOff
  fullName: AuxLabs.Twitch.Chat.NoticeType.SlowOff
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SlowOff
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 27
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "slow_off")]

      SlowOff = 10
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="slow_off")>

      SlowOff = 10
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: slow_off
- uid: AuxLabs.Twitch.Chat.NoticeType.SlowOn
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.SlowOn
  id: SlowOn
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: SlowOn
  nameWithType: NoticeType.SlowOn
  fullName: AuxLabs.Twitch.Chat.NoticeType.SlowOn
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SlowOn
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 29
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "slow_on")]

      SlowOn = 11
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="slow_on")>

      SlowOn = 11
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: slow_on
- uid: AuxLabs.Twitch.Chat.NoticeType.SubsOff
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.SubsOff
  id: SubsOff
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: SubsOff
  nameWithType: NoticeType.SubsOff
  fullName: AuxLabs.Twitch.Chat.NoticeType.SubsOff
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SubsOff
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 31
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "subs_off")]

      SubsOff = 12
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="subs_off")>

      SubsOff = 12
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: subs_off
- uid: AuxLabs.Twitch.Chat.NoticeType.SubsOn
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.SubsOn
  id: SubsOn
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: SubsOn
  nameWithType: NoticeType.SubsOn
  fullName: AuxLabs.Twitch.Chat.NoticeType.SubsOn
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: SubsOn
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 33
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "subs_on")]

      SubsOn = 13
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="subs_on")>

      SubsOn = 13
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: subs_on
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageBanned
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageBanned
  id: MessageBanned
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageBanned
  nameWithType: NoticeType.MessageBanned
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageBanned
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageBanned
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 36
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_banned")]

      MessageBanned = 14
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_banned")>

      MessageBanned = 14
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_banned
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageBadCharacters
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageBadCharacters
  id: MessageBadCharacters
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageBadCharacters
  nameWithType: NoticeType.MessageBadCharacters
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageBadCharacters
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageBadCharacters
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 38
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_bad_characters")]

      MessageBadCharacters = 15
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_bad_characters")>

      MessageBadCharacters = 15
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_bad_characters
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageChannelBlocked
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageChannelBlocked
  id: MessageChannelBlocked
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageChannelBlocked
  nameWithType: NoticeType.MessageChannelBlocked
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageChannelBlocked
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageChannelBlocked
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 40
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_channel_blocked")]

      MessageChannelBlocked = 16
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_channel_blocked")>

      MessageChannelBlocked = 16
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_channel_blocked
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageChannelSuspended
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageChannelSuspended
  id: MessageChannelSuspended
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageChannelSuspended
  nameWithType: NoticeType.MessageChannelSuspended
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageChannelSuspended
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageChannelSuspended
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 42
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_channel_suspended")]

      MessageChannelSuspended = 17
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_channel_suspended")>

      MessageChannelSuspended = 17
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_channel_suspended
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageDuplicate
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageDuplicate
  id: MessageDuplicate
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageDuplicate
  nameWithType: NoticeType.MessageDuplicate
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageDuplicate
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageDuplicate
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 44
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_duplicate")]

      MessageDuplicate = 18
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_duplicate")>

      MessageDuplicate = 18
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_duplicate
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageEmoteOnly
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageEmoteOnly
  id: MessageEmoteOnly
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageEmoteOnly
  nameWithType: NoticeType.MessageEmoteOnly
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageEmoteOnly
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageEmoteOnly
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 46
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_emoteonly")]

      MessageEmoteOnly = 19
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_emoteonly")>

      MessageEmoteOnly = 19
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_emoteonly
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnly
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnly
  id: MessageFollowersOnly
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageFollowersOnly
  nameWithType: NoticeType.MessageFollowersOnly
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnly
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageFollowersOnly
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 48
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_followersonly")]

      MessageFollowersOnly = 20
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_followersonly")>

      MessageFollowersOnly = 20
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_followersonly
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyFollowed
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyFollowed
  id: MessageFollowersOnlyFollowed
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageFollowersOnlyFollowed
  nameWithType: NoticeType.MessageFollowersOnlyFollowed
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyFollowed
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageFollowersOnlyFollowed
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 50
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_followersonly_followed")]

      MessageFollowersOnlyFollowed = 21
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_followersonly_followed")>

      MessageFollowersOnlyFollowed = 21
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_followersonly_followed
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyZero
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyZero
  id: MessageFollowersOnlyZero
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageFollowersOnlyZero
  nameWithType: NoticeType.MessageFollowersOnlyZero
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageFollowersOnlyZero
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageFollowersOnlyZero
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 52
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_followersonly_zero")]

      MessageFollowersOnlyZero = 22
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_followersonly_zero")>

      MessageFollowersOnlyZero = 22
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_followersonly_zero
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageR9k
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageR9k
  id: MessageR9k
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageR9k
  nameWithType: NoticeType.MessageR9k
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageR9k
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageR9k
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 54
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_R9k")]

      MessageR9k = 23
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_R9k")>

      MessageR9k = 23
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_R9k
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageRatelimited
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageRatelimited
  id: MessageRatelimited
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageRatelimited
  nameWithType: NoticeType.MessageRatelimited
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageRatelimited
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageRatelimited
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 56
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_ratelimit")]

      MessageRatelimited = 24
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_ratelimit")>

      MessageRatelimited = 24
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_ratelimit
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageRejected
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageRejected
  id: MessageRejected
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageRejected
  nameWithType: NoticeType.MessageRejected
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageRejected
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageRejected
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 58
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_rejected")]

      MessageRejected = 25
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_rejected")>

      MessageRejected = 25
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_rejected
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageRejectedMandatory
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageRejectedMandatory
  id: MessageRejectedMandatory
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageRejectedMandatory
  nameWithType: NoticeType.MessageRejectedMandatory
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageRejectedMandatory
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageRejectedMandatory
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 60
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_rejected_mandatory")]

      MessageRejectedMandatory = 26
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_rejected_mandatory")>

      MessageRejectedMandatory = 26
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_rejected_mandatory
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedPhone
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedPhone
  id: MessageRequiresVerifiedPhone
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageRequiresVerifiedPhone
  nameWithType: NoticeType.MessageRequiresVerifiedPhone
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedPhone
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageRequiresVerifiedPhone
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 62
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_requires_verified_phone_number")]

      MessageRequiresVerifiedPhone = 27
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_requires_verified_phone_number")>

      MessageRequiresVerifiedPhone = 27
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_requires_verified_phone_number
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageSlowmode
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageSlowmode
  id: MessageSlowmode
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageSlowmode
  nameWithType: NoticeType.MessageSlowmode
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageSlowmode
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageSlowmode
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 64
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_slowmode")]

      MessageSlowmode = 28
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_slowmode")>

      MessageSlowmode = 28
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_slowmode
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageSubsOnly
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageSubsOnly
  id: MessageSubsOnly
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageSubsOnly
  nameWithType: NoticeType.MessageSubsOnly
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageSubsOnly
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageSubsOnly
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 66
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_subsonly")]

      MessageSubsOnly = 29
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_subsonly")>

      MessageSubsOnly = 29
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_subsonly
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageSuspended
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageSuspended
  id: MessageSuspended
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageSuspended
  nameWithType: NoticeType.MessageSuspended
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageSuspended
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageSuspended
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 68
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_suspended")]

      MessageSuspended = 30
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_suspended")>

      MessageSuspended = 30
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_suspended
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageTimedout
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageTimedout
  id: MessageTimedout
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageTimedout
  nameWithType: NoticeType.MessageTimedout
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageTimedout
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageTimedout
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 70
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_timedout")]

      MessageTimedout = 31
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_timedout")>

      MessageTimedout = 31
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_timedout
- uid: AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedEmail
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedEmail
  id: MessageRequiresVerifiedEmail
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: MessageRequiresVerifiedEmail
  nameWithType: NoticeType.MessageRequiresVerifiedEmail
  fullName: AuxLabs.Twitch.Chat.NoticeType.MessageRequiresVerifiedEmail
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MessageRequiresVerifiedEmail
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 72
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "msg_verified_email")]

      MessageRequiresVerifiedEmail = 32
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="msg_verified_email")>

      MessageRequiresVerifiedEmail = 32
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: msg_verified_email
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperBanned
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperBanned
  id: WhisperBanned
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperBanned
  nameWithType: NoticeType.WhisperBanned
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperBanned
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperBanned
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 75
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_banned")]

      WhisperBanned = 33
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_banned")>

      WhisperBanned = 33
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_banned
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperBannedRecipient
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperBannedRecipient
  id: WhisperBannedRecipient
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperBannedRecipient
  nameWithType: NoticeType.WhisperBannedRecipient
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperBannedRecipient
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperBannedRecipient
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 77
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_banned_recipient")]

      WhisperBannedRecipient = 34
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_banned_recipient")>

      WhisperBannedRecipient = 34
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_banned_recipient
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidLogin
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidLogin
  id: WhisperInvalidLogin
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperInvalidLogin
  nameWithType: NoticeType.WhisperInvalidLogin
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidLogin
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperInvalidLogin
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 79
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_invalid_login")]

      WhisperInvalidLogin = 35
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_invalid_login")>

      WhisperInvalidLogin = 35
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_invalid_login
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidSelf
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidSelf
  id: WhisperInvalidSelf
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperInvalidSelf
  nameWithType: NoticeType.WhisperInvalidSelf
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperInvalidSelf
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperInvalidSelf
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 81
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_invalid_self")]

      WhisperInvalidSelf = 36
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_invalid_self")>

      WhisperInvalidSelf = 36
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_invalid_self
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedMinute
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedMinute
  id: WhisperRatelimitedMinute
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperRatelimitedMinute
  nameWithType: NoticeType.WhisperRatelimitedMinute
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedMinute
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperRatelimitedMinute
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 83
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_limit_per_min")]

      WhisperRatelimitedMinute = 37
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_limit_per_min")>

      WhisperRatelimitedMinute = 37
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_limit_per_min
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedSecond
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedSecond
  id: WhisperRatelimitedSecond
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperRatelimitedSecond
  nameWithType: NoticeType.WhisperRatelimitedSecond
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperRatelimitedSecond
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperRatelimitedSecond
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 85
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_limit_per_sec")]

      WhisperRatelimitedSecond = 38
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_limit_per_sec")>

      WhisperRatelimitedSecond = 38
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_limit_per_sec
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperRestricted
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperRestricted
  id: WhisperRestricted
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperRestricted
  nameWithType: NoticeType.WhisperRestricted
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperRestricted
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperRestricted
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 87
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_restricted")]

      WhisperRestricted = 39
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_restricted")>

      WhisperRestricted = 39
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_restricted
- uid: AuxLabs.Twitch.Chat.NoticeType.WhisperRestrictedRecipient
  commentId: F:AuxLabs.Twitch.Chat.NoticeType.WhisperRestrictedRecipient
  id: WhisperRestrictedRecipient
  parent: AuxLabs.Twitch.Chat.NoticeType
  langs:
  - csharp
  - vb
  name: WhisperRestrictedRecipient
  nameWithType: NoticeType.WhisperRestrictedRecipient
  fullName: AuxLabs.Twitch.Chat.NoticeType.WhisperRestrictedRecipient
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: WhisperRestrictedRecipient
    path: ../src/AuxLabs.Twitch.Chat.Api/Models/NoticeType.cs
    startLine: 89
  assemblies:
  - AuxLabs.Twitch.Chat.Api
  namespace: AuxLabs.Twitch.Chat
  syntax:
    content: >-
      [EnumMember(Value = "whisper_restricted_recipient")]

      WhisperRestrictedRecipient = 40
    return:
      type: AuxLabs.Twitch.Chat.NoticeType
    content.vb: >-
      <EnumMember(Value:="whisper_restricted_recipient")>

      WhisperRestrictedRecipient = 40
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whisper_restricted_recipient
references:
- uid: AuxLabs.Twitch.Chat
  commentId: N:AuxLabs.Twitch.Chat
  href: AuxLabs.html
  name: AuxLabs.Twitch.Chat
  nameWithType: AuxLabs.Twitch.Chat
  fullName: AuxLabs.Twitch.Chat
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Chat
    name: Chat
    href: AuxLabs.Twitch.Chat.html
- uid: AuxLabs.Twitch.Chat.NoticeType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  parent: AuxLabs.Twitch.EnumHelper
  definition: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.Chat.NoticeType).html
  name: GetStringValue<NoticeType>(NoticeType)
  nameWithType: EnumHelper.GetStringValue<NoticeType>(NoticeType)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<AuxLabs.Twitch.Chat.NoticeType>(AuxLabs.Twitch.Chat.NoticeType)
  nameWithType.vb: EnumHelper.GetStringValue(Of NoticeType)(NoticeType)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of AuxLabs.Twitch.Chat.NoticeType)(AuxLabs.Twitch.Chat.NoticeType)
  name.vb: GetStringValue(Of NoticeType)(NoticeType)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.Chat.NoticeType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.Chat.NoticeType).html
  - name: <
  - uid: AuxLabs.Twitch.Chat.NoticeType
    name: NoticeType
    href: AuxLabs.Twitch.Chat.NoticeType.html
  - name: '>'
  - name: (
  - uid: AuxLabs.Twitch.Chat.NoticeType
    name: NoticeType
    href: AuxLabs.Twitch.Chat.NoticeType.html
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.Chat.NoticeType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.Chat.NoticeType).html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Chat.NoticeType
    name: NoticeType
    href: AuxLabs.Twitch.Chat.NoticeType.html
  - name: )
  - name: (
  - uid: AuxLabs.Twitch.Chat.NoticeType
    name: NoticeType
    href: AuxLabs.Twitch.Chat.NoticeType.html
  - name: )
- uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  name: GetStringValue<T>(T)
  nameWithType: EnumHelper.GetStringValue<T>(T)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<T>(T)
  nameWithType.vb: EnumHelper.GetStringValue(Of T)(T)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of T)(T)
  name.vb: GetStringValue(Of T)(T)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EnumHelper
  commentId: T:AuxLabs.Twitch.EnumHelper
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EnumHelper.html
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: AuxLabs.Twitch.EnumHelper
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Chat.NoticeType
  commentId: T:AuxLabs.Twitch.Chat.NoticeType
  parent: AuxLabs.Twitch.Chat
  href: AuxLabs.Twitch.Chat.NoticeType.html
  name: NoticeType
  nameWithType: NoticeType
  fullName: AuxLabs.Twitch.Chat.NoticeType
memberLayout: SeparatePages
