### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription
  commentId: T:AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription
  id: BitsTransactionSubscription
  parent: AuxLabs.Twitch.Rest.Requests
  children:
  - AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor(System.String,System.String,System.String)
  - AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor(System.String,System.String)
  langs:
  - csharp
  - vb
  name: BitsTransactionSubscription
  nameWithType: BitsTransactionSubscription
  fullName: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/EventSub/Subscriptions/Extensions/BitsTransactionSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BitsTransactionSubscription
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/EventSub/Subscriptions/Extensions/BitsTransactionSubscription.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: 'public class BitsTransactionSubscription : PostEventSubscriptionBody<ExtensionCondition>'
    content.vb: Public Class BitsTransactionSubscription Inherits PostEventSubscriptionBody(Of ExtensionCondition)
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  inheritedMembers:
  - AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Type
  - AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Version
  - AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Condition
  - AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Transport
  - AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor(System.String,System.String)
  commentId: M:AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription
  langs:
  - csharp
  - vb
  name: BitsTransactionSubscription(string, string)
  nameWithType: BitsTransactionSubscription.BitsTransactionSubscription(string, string)
  fullName: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.BitsTransactionSubscription(string, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/EventSub/Subscriptions/Extensions/BitsTransactionSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/EventSub/Subscriptions/Extensions/BitsTransactionSubscription.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public BitsTransactionSubscription(string clientId, string sessionId)
    parameters:
    - id: clientId
      type: System.String
    - id: sessionId
      type: System.String
    content.vb: Public Sub New(clientId As String, sessionId As String)
  overload: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor*
  nameWithType.vb: BitsTransactionSubscription.New(String, String)
  fullName.vb: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.New(String, String)
  name.vb: New(String, String)
- uid: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor(System.String,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription
  langs:
  - csharp
  - vb
  name: BitsTransactionSubscription(string, string, string)
  nameWithType: BitsTransactionSubscription.BitsTransactionSubscription(string, string, string)
  fullName: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.BitsTransactionSubscription(string, string, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/EventSub/Subscriptions/Extensions/BitsTransactionSubscription.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/EventSub/Subscriptions/Extensions/BitsTransactionSubscription.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public BitsTransactionSubscription(string clientId, string callbackUrl, string secret)
    parameters:
    - id: clientId
      type: System.String
    - id: callbackUrl
      type: System.String
    - id: secret
      type: System.String
    content.vb: Public Sub New(clientId As String, callbackUrl As String, secret As String)
  overload: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor*
  nameWithType.vb: BitsTransactionSubscription.New(String, String, String)
  fullName.vb: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.New(String, String, String)
  name.vb: New(String, String, String)
references:
- uid: AuxLabs.Twitch.Rest.Requests
  commentId: N:AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Requests
  nameWithType: AuxLabs.Twitch.Rest.Requests
  fullName: AuxLabs.Twitch.Rest.Requests
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  commentId: T:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  parent: AuxLabs.Twitch.Rest.Requests
  definition: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html
  name: PostEventSubscriptionBody<ExtensionCondition>
  nameWithType: PostEventSubscriptionBody<ExtensionCondition>
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<AuxLabs.Twitch.Rest.Models.ExtensionCondition>
  nameWithType.vb: PostEventSubscriptionBody(Of ExtensionCondition)
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of AuxLabs.Twitch.Rest.Models.ExtensionCondition)
  name.vb: PostEventSubscriptionBody(Of ExtensionCondition)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1
    name: PostEventSubscriptionBody
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition
    name: ExtensionCondition
    href: AuxLabs.Twitch.Rest.Models.ExtensionCondition.html
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1
    name: PostEventSubscriptionBody
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.ExtensionCondition
    name: ExtensionCondition
    href: AuxLabs.Twitch.Rest.Models.ExtensionCondition.html
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Type
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Type
  parent: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  definition: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Type
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Type.html
  name: Type
  nameWithType: PostEventSubscriptionBody<ExtensionCondition>.Type
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<AuxLabs.Twitch.Rest.Models.ExtensionCondition>.Type
  nameWithType.vb: PostEventSubscriptionBody(Of ExtensionCondition).Type
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of AuxLabs.Twitch.Rest.Models.ExtensionCondition).Type
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Version
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Version
  parent: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  definition: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Version
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Version.html
  name: Version
  nameWithType: PostEventSubscriptionBody<ExtensionCondition>.Version
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<AuxLabs.Twitch.Rest.Models.ExtensionCondition>.Version
  nameWithType.vb: PostEventSubscriptionBody(Of ExtensionCondition).Version
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of AuxLabs.Twitch.Rest.Models.ExtensionCondition).Version
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Condition
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Condition
  parent: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  definition: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Condition
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Condition.html
  name: Condition
  nameWithType: PostEventSubscriptionBody<ExtensionCondition>.Condition
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<AuxLabs.Twitch.Rest.Models.ExtensionCondition>.Condition
  nameWithType.vb: PostEventSubscriptionBody(Of ExtensionCondition).Condition
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of AuxLabs.Twitch.Rest.Models.ExtensionCondition).Condition
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Transport
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Transport
  parent: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  definition: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Transport
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Transport.html
  name: Transport
  nameWithType: PostEventSubscriptionBody<ExtensionCondition>.Transport
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<AuxLabs.Twitch.Rest.Models.ExtensionCondition>.Transport
  nameWithType.vb: PostEventSubscriptionBody(Of ExtensionCondition).Transport
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of AuxLabs.Twitch.Rest.Models.ExtensionCondition).Transport
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate
  commentId: M:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate
  parent: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}
  definition: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Validate
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate.html
  name: Validate()
  nameWithType: PostEventSubscriptionBody<ExtensionCondition>.Validate()
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<AuxLabs.Twitch.Rest.Models.ExtensionCondition>.Validate()
  nameWithType.vb: PostEventSubscriptionBody(Of ExtensionCondition).Validate()
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of AuxLabs.Twitch.Rest.Models.ExtensionCondition).Validate()
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate
    name: Validate
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate
    name: Validate
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody{AuxLabs.Twitch.Rest.Models.ExtensionCondition}.Validate.html
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1
  commentId: T:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html
  name: PostEventSubscriptionBody<TCondition>
  nameWithType: PostEventSubscriptionBody<TCondition>
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<TCondition>
  nameWithType.vb: PostEventSubscriptionBody(Of TCondition)
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of TCondition)
  name.vb: PostEventSubscriptionBody(Of TCondition)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1
    name: PostEventSubscriptionBody
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html
  - name: <
  - name: TCondition
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1
    name: PostEventSubscriptionBody
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TCondition
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Type
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Type
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.Type.html
  name: Type
  nameWithType: PostEventSubscriptionBody<TCondition>.Type
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<TCondition>.Type
  nameWithType.vb: PostEventSubscriptionBody(Of TCondition).Type
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of TCondition).Type
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Version
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Version
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.Version.html
  name: Version
  nameWithType: PostEventSubscriptionBody<TCondition>.Version
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<TCondition>.Version
  nameWithType.vb: PostEventSubscriptionBody(Of TCondition).Version
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of TCondition).Version
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Condition
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Condition
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.Condition.html
  name: Condition
  nameWithType: PostEventSubscriptionBody<TCondition>.Condition
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<TCondition>.Condition
  nameWithType.vb: PostEventSubscriptionBody(Of TCondition).Condition
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of TCondition).Condition
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Transport
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Transport
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.Transport.html
  name: Transport
  nameWithType: PostEventSubscriptionBody<TCondition>.Transport
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<TCondition>.Transport
  nameWithType.vb: PostEventSubscriptionBody(Of TCondition).Transport
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of TCondition).Transport
- uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Validate
  commentId: M:AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Validate
  href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.Validate.html
  name: Validate()
  nameWithType: PostEventSubscriptionBody<TCondition>.Validate()
  fullName: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody<TCondition>.Validate()
  nameWithType.vb: PostEventSubscriptionBody(Of TCondition).Validate()
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody(Of TCondition).Validate()
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Validate
    name: Validate
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.Validate.html
  - name: (
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody`1.Validate
    name: Validate
    href: AuxLabs.Twitch.Rest.Requests.PostEventSubscriptionBody-1.Validate.html
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor
  href: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.#ctor(System.String,System.String).html
  name: BitsTransactionSubscription
  nameWithType: BitsTransactionSubscription.BitsTransactionSubscription
  fullName: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.BitsTransactionSubscription
  nameWithType.vb: BitsTransactionSubscription.New
  fullName.vb: AuxLabs.Twitch.Rest.Requests.BitsTransactionSubscription.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
memberLayout: SeparatePages
