### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1
  commentId: T:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1
  id: EventSubPayload`1
  parent: AuxLabs.Twitch.EventSub.Api
  children:
  - AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Challenge
  - AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Event
  - AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.EventTypeSelector
  - AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Subscription
  langs:
  - csharp
  - vb
  name: EventSubPayload<TEvent>
  nameWithType: EventSubPayload<TEvent>
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EventSubPayload
    path: ../src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Api
  syntax:
    content: public class EventSubPayload<TEvent>
    typeParameters:
    - id: TEvent
    content.vb: Public Class EventSubPayload(Of TEvent)
  inheritance:
  - System.Object
  derivedClasses:
  - AuxLabs.Twitch.EventSub.Api.EventSubPayload
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EventSubPayload(Of TEvent)
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent)
  name.vb: EventSubPayload(Of TEvent)
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Challenge
  commentId: P:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Challenge
  id: Challenge
  parent: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1
  langs:
  - csharp
  - vb
  name: Challenge
  nameWithType: EventSubPayload<TEvent>.Challenge
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.Challenge
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Challenge
    path: ../src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Api
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("challenge")]

      public string Challenge { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("challenge")>

      Public Property Challenge As String
  overload: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Challenge*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: challenge
  nameWithType.vb: EventSubPayload(Of TEvent).Challenge
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).Challenge
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Subscription
  commentId: P:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Subscription
  id: Subscription
  parent: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: EventSubPayload<TEvent>.Subscription
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.Subscription
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Subscription
    path: ../src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Api
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("subscription")]

      public EventSubscription Subscription { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Models.EventSubscription
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("subscription")>

      Public Property Subscription As EventSubscription
  overload: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Subscription*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: subscription
  nameWithType.vb: EventSubPayload(Of TEvent).Subscription
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).Subscription
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Event
  commentId: P:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Event
  id: Event
  parent: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: EventSubPayload<TEvent>.Event
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.Event
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Event
    path: ../src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Api
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("event")]

      public TEvent Event { get; }
    parameters: []
    return:
      type: '{TEvent}'
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("event")>

      Public Property [Event] As TEvent
  overload: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Event*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: event
  nameWithType.vb: EventSubPayload(Of TEvent).Event
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).Event
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.EventTypeSelector
  commentId: P:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.EventTypeSelector
  id: EventTypeSelector
  parent: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1
  langs:
  - csharp
  - vb
  name: EventTypeSelector
  nameWithType: EventSubPayload<TEvent>.EventTypeSelector
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.EventTypeSelector
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: EventTypeSelector
    path: ../src/AuxLabs.Twitch.EventSub.Api/EventSubPayload.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Api
  syntax:
    content: >-
      [JsonIgnore]

      public static Dictionary<EventSubType, Type> EventTypeSelector { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{AuxLabs.Twitch.EventSubType,System.Type}
    content.vb: >-
      <JsonIgnore>

      Public Shared ReadOnly Property EventTypeSelector As Dictionary(Of EventSubType, Type)
  overload: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.EventTypeSelector*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  nameWithType.vb: EventSubPayload(Of TEvent).EventTypeSelector
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).EventTypeSelector
references:
- uid: AuxLabs.Twitch.EventSub.Api
  commentId: N:AuxLabs.Twitch.EventSub.Api
  href: AuxLabs.html
  name: AuxLabs.Twitch.EventSub.Api
  nameWithType: AuxLabs.Twitch.EventSub.Api
  fullName: AuxLabs.Twitch.EventSub.Api
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Api
    name: Api
    href: AuxLabs.Twitch.EventSub.Api.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Api
    name: Api
    href: AuxLabs.Twitch.EventSub.Api.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Challenge*
  commentId: Overload:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Challenge
  href: AuxLabs.Twitch.EventSub.Api.EventSubPayload-1.Challenge.html
  name: Challenge
  nameWithType: EventSubPayload<TEvent>.Challenge
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.Challenge
  nameWithType.vb: EventSubPayload(Of TEvent).Challenge
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).Challenge
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Subscription*
  commentId: Overload:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Subscription
  href: AuxLabs.Twitch.EventSub.Api.EventSubPayload-1.Subscription.html
  name: Subscription
  nameWithType: EventSubPayload<TEvent>.Subscription
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.Subscription
  nameWithType.vb: EventSubPayload(Of TEvent).Subscription
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).Subscription
- uid: AuxLabs.Twitch.Rest.Models.EventSubscription
  commentId: T:AuxLabs.Twitch.Rest.Models.EventSubscription
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.EventSubscription.html
  name: EventSubscription
  nameWithType: EventSubscription
  fullName: AuxLabs.Twitch.Rest.Models.EventSubscription
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Event*
  commentId: Overload:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.Event
  href: AuxLabs.Twitch.EventSub.Api.EventSubPayload-1.Event.html
  name: Event
  nameWithType: EventSubPayload<TEvent>.Event
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.Event
  nameWithType.vb: EventSubPayload(Of TEvent).Event
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).Event
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: TEvent
  commentId: '!:TEvent'
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.EventTypeSelector*
  commentId: Overload:AuxLabs.Twitch.EventSub.Api.EventSubPayload`1.EventTypeSelector
  href: AuxLabs.Twitch.EventSub.Api.EventSubPayload-1.EventTypeSelector.html
  name: EventTypeSelector
  nameWithType: EventSubPayload<TEvent>.EventTypeSelector
  fullName: AuxLabs.Twitch.EventSub.Api.EventSubPayload<TEvent>.EventTypeSelector
  nameWithType.vb: EventSubPayload(Of TEvent).EventTypeSelector
  fullName.vb: AuxLabs.Twitch.EventSub.Api.EventSubPayload(Of TEvent).EventTypeSelector
- uid: System.Collections.Generic.Dictionary{AuxLabs.Twitch.EventSubType,System.Type}
  commentId: T:System.Collections.Generic.Dictionary{AuxLabs.Twitch.EventSubType,System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<EventSubType, Type>
  nameWithType: Dictionary<EventSubType, Type>
  fullName: System.Collections.Generic.Dictionary<AuxLabs.Twitch.EventSubType, System.Type>
  nameWithType.vb: Dictionary(Of EventSubType, Type)
  fullName.vb: System.Collections.Generic.Dictionary(Of AuxLabs.Twitch.EventSubType, System.Type)
  name.vb: Dictionary(Of EventSubType, Type)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: AuxLabs.Twitch.EventSubType
    name: EventSubType
    href: AuxLabs.Twitch.EventSubType.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.EventSubType
    name: EventSubType
    href: AuxLabs.Twitch.EventSubType.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
memberLayout: SeparatePages
