### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.User
  commentId: T:AuxLabs.Twitch.Rest.Models.User
  id: User
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.User.BroadcasterType
  - AuxLabs.Twitch.Rest.Models.User.CreatedAt
  - AuxLabs.Twitch.Rest.Models.User.Description
  - AuxLabs.Twitch.Rest.Models.User.Email
  - AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl
  - AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl
  - AuxLabs.Twitch.Rest.Models.User.Type
  - AuxLabs.Twitch.Rest.Models.User.ViewCount
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: AuxLabs.Twitch.Rest.Models.User
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: User
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: 'public class User : SimpleUser, ISimpleUser, IPartialUser, IEntity<string>'
    content.vb: Public Class User Inherits SimpleUser Implements ISimpleUser, IPartialUser, IEntity(Of String)
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Rest.Models.SimpleUser
  implements:
  - AuxLabs.Twitch.ISimpleUser
  - AuxLabs.Twitch.IPartialUser
  - AuxLabs.Twitch.IEntity{System.String}
  inheritedMembers:
  - AuxLabs.Twitch.Rest.Models.SimpleUser.Id
  - AuxLabs.Twitch.Rest.Models.SimpleUser.Name
  - AuxLabs.Twitch.Rest.Models.SimpleUser.DisplayName
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.User.Type
  commentId: P:AuxLabs.Twitch.Rest.Models.User.Type
  id: Type
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: User.Type
  fullName: AuxLabs.Twitch.Rest.Models.User.Type
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Type
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: User’s type
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("type")]

      public UserType Type { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.UserType
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("type")>

      Public Property Type As UserType
  overload: AuxLabs.Twitch.Rest.Models.User.Type*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
- uid: AuxLabs.Twitch.Rest.Models.User.BroadcasterType
  commentId: P:AuxLabs.Twitch.Rest.Models.User.BroadcasterType
  id: BroadcasterType
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: BroadcasterType
  nameWithType: User.BroadcasterType
  fullName: AuxLabs.Twitch.Rest.Models.User.BroadcasterType
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterType
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: User’s broadcaster type
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_type")]

      public BroadcasterType BroadcasterType { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.BroadcasterType
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_type")>

      Public Property BroadcasterType As BroadcasterType
  overload: AuxLabs.Twitch.Rest.Models.User.BroadcasterType*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_type
- uid: AuxLabs.Twitch.Rest.Models.User.Description
  commentId: P:AuxLabs.Twitch.Rest.Models.User.Description
  id: Description
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: User.Description
  fullName: AuxLabs.Twitch.Rest.Models.User.Description
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Description
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: User’s channel description
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("description")]

      public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("description")>

      Public Property Description As String
  overload: AuxLabs.Twitch.Rest.Models.User.Description*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
- uid: AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl
  commentId: P:AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl
  id: ProfileImageUrl
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: ProfileImageUrl
  nameWithType: User.ProfileImageUrl
  fullName: AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ProfileImageUrl
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: URL of the user’s profile image
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("profile_image_url")]

      public string ProfileImageUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("profile_image_url")>

      Public Property ProfileImageUrl As String
  overload: AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: profile_image_url
- uid: AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl
  commentId: P:AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl
  id: OfflineImageUrl
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: OfflineImageUrl
  nameWithType: User.OfflineImageUrl
  fullName: AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: OfflineImageUrl
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: URL of the user’s offline image
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("offline_image_url")]

      public string OfflineImageUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("offline_image_url")>

      Public Property OfflineImageUrl As String
  overload: AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: offline_image_url
- uid: AuxLabs.Twitch.Rest.Models.User.ViewCount
  commentId: P:AuxLabs.Twitch.Rest.Models.User.ViewCount
  id: ViewCount
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: ViewCount
  nameWithType: User.ViewCount
  fullName: AuxLabs.Twitch.Rest.Models.User.ViewCount
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ViewCount
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Total number of views of the user’s channel
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("view_count")]

      public int ViewCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("view_count")>

      Public Property ViewCount As Integer
  overload: AuxLabs.Twitch.Rest.Models.User.ViewCount*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: view_count
- uid: AuxLabs.Twitch.Rest.Models.User.Email
  commentId: P:AuxLabs.Twitch.Rest.Models.User.Email
  id: Email
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: User.Email
  fullName: AuxLabs.Twitch.Rest.Models.User.Email
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Email
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: User’s verified email address
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("email")]

      public string Email { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("email")>

      Public Property Email As String
  overload: AuxLabs.Twitch.Rest.Models.User.Email*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: email
- uid: AuxLabs.Twitch.Rest.Models.User.CreatedAt
  commentId: P:AuxLabs.Twitch.Rest.Models.User.CreatedAt
  id: CreatedAt
  parent: AuxLabs.Twitch.Rest.Models.User
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: User.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.User.CreatedAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CreatedAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Users/User.cs
    startLine: 36
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Date when the user was created
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("created_at")]

      public DateTime CreatedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("created_at")>

      Public Property CreatedAt As Date
  overload: AuxLabs.Twitch.Rest.Models.User.CreatedAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: created_at
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.Models.SimpleUser
  commentId: T:AuxLabs.Twitch.Rest.Models.SimpleUser
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.SimpleUser.html
  name: SimpleUser
  nameWithType: SimpleUser
  fullName: AuxLabs.Twitch.Rest.Models.SimpleUser
- uid: AuxLabs.Twitch.ISimpleUser
  commentId: T:AuxLabs.Twitch.ISimpleUser
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.ISimpleUser.html
  name: ISimpleUser
  nameWithType: ISimpleUser
  fullName: AuxLabs.Twitch.ISimpleUser
- uid: AuxLabs.Twitch.IPartialUser
  commentId: T:AuxLabs.Twitch.IPartialUser
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.IPartialUser.html
  name: IPartialUser
  nameWithType: IPartialUser
  fullName: AuxLabs.Twitch.IPartialUser
- uid: AuxLabs.Twitch.IEntity{System.String}
  commentId: T:AuxLabs.Twitch.IEntity{System.String}
  parent: AuxLabs.Twitch
  definition: AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<string>
  nameWithType: IEntity<string>
  fullName: AuxLabs.Twitch.IEntity<string>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: AuxLabs.Twitch.IEntity(Of String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.SimpleUser.Id
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleUser.Id
  parent: AuxLabs.Twitch.Rest.Models.SimpleUser
  href: AuxLabs.Twitch.Rest.Models.SimpleUser.Id.html
  name: Id
  nameWithType: SimpleUser.Id
  fullName: AuxLabs.Twitch.Rest.Models.SimpleUser.Id
- uid: AuxLabs.Twitch.Rest.Models.SimpleUser.Name
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleUser.Name
  parent: AuxLabs.Twitch.Rest.Models.SimpleUser
  href: AuxLabs.Twitch.Rest.Models.SimpleUser.Name.html
  name: Name
  nameWithType: SimpleUser.Name
  fullName: AuxLabs.Twitch.Rest.Models.SimpleUser.Name
- uid: AuxLabs.Twitch.Rest.Models.SimpleUser.DisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.SimpleUser.DisplayName
  parent: AuxLabs.Twitch.Rest.Models.SimpleUser
  href: AuxLabs.Twitch.Rest.Models.SimpleUser.DisplayName.html
  name: DisplayName
  nameWithType: SimpleUser.DisplayName
  fullName: AuxLabs.Twitch.Rest.Models.SimpleUser.DisplayName
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.IEntity`1
  commentId: T:AuxLabs.Twitch.IEntity`1
  href: AuxLabs.Twitch.IEntity-1.html
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: AuxLabs.Twitch.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: AuxLabs.Twitch.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: <
  - name: TId
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.IEntity`1
    name: IEntity
    href: AuxLabs.Twitch.IEntity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.User.Type*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.Type
  href: AuxLabs.Twitch.Rest.Models.User.Type.html
  name: Type
  nameWithType: User.Type
  fullName: AuxLabs.Twitch.Rest.Models.User.Type
- uid: AuxLabs.Twitch.UserType
  commentId: T:AuxLabs.Twitch.UserType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.UserType.html
  name: UserType
  nameWithType: UserType
  fullName: AuxLabs.Twitch.UserType
- uid: AuxLabs.Twitch.Rest.Models.User.BroadcasterType*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.BroadcasterType
  href: AuxLabs.Twitch.Rest.Models.User.BroadcasterType.html
  name: BroadcasterType
  nameWithType: User.BroadcasterType
  fullName: AuxLabs.Twitch.Rest.Models.User.BroadcasterType
- uid: AuxLabs.Twitch.BroadcasterType
  commentId: T:AuxLabs.Twitch.BroadcasterType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.BroadcasterType.html
  name: BroadcasterType
  nameWithType: BroadcasterType
  fullName: AuxLabs.Twitch.BroadcasterType
- uid: AuxLabs.Twitch.Rest.Models.User.Description*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.Description
  href: AuxLabs.Twitch.Rest.Models.User.Description.html
  name: Description
  nameWithType: User.Description
  fullName: AuxLabs.Twitch.Rest.Models.User.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl
  href: AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl.html
  name: ProfileImageUrl
  nameWithType: User.ProfileImageUrl
  fullName: AuxLabs.Twitch.Rest.Models.User.ProfileImageUrl
- uid: AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl
  href: AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl.html
  name: OfflineImageUrl
  nameWithType: User.OfflineImageUrl
  fullName: AuxLabs.Twitch.Rest.Models.User.OfflineImageUrl
- uid: AuxLabs.Twitch.Rest.Models.User.ViewCount*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.ViewCount
  href: AuxLabs.Twitch.Rest.Models.User.ViewCount.html
  name: ViewCount
  nameWithType: User.ViewCount
  fullName: AuxLabs.Twitch.Rest.Models.User.ViewCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Rest.Models.User.Email*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.Email
  href: AuxLabs.Twitch.Rest.Models.User.Email.html
  name: Email
  nameWithType: User.Email
  fullName: AuxLabs.Twitch.Rest.Models.User.Email
- uid: AuxLabs.Twitch.Rest.Models.User.CreatedAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.User.CreatedAt
  href: AuxLabs.Twitch.Rest.Models.User.CreatedAt.html
  name: CreatedAt
  nameWithType: User.CreatedAt
  fullName: AuxLabs.Twitch.Rest.Models.User.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
memberLayout: SeparatePages
