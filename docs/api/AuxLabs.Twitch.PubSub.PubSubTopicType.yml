### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType
  commentId: T:AuxLabs.Twitch.PubSub.PubSubTopicType
  id: PubSubTopicType
  parent: AuxLabs.Twitch.PubSub
  children:
  - AuxLabs.Twitch.PubSub.PubSubTopicType.AutoModQueue
  - AuxLabs.Twitch.PubSub.PubSubTopicType.BitsBadgeUnlocks
  - AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV1
  - AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV2
  - AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelPointRedemptions
  - AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelSubscriptions
  - AuxLabs.Twitch.PubSub.PubSubTopicType.LowTrustUserStatus
  - AuxLabs.Twitch.PubSub.PubSubTopicType.ModerationNotifications
  - AuxLabs.Twitch.PubSub.PubSubTopicType.ModeratorActions
  - AuxLabs.Twitch.PubSub.PubSubTopicType.Unknown
  - AuxLabs.Twitch.PubSub.PubSubTopicType.Whispers
  langs:
  - csharp
  - vb
  name: PubSubTopicType
  nameWithType: PubSubTopicType
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType
  type: Enum
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PubSubTopicType
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  syntax:
    content: public enum PubSubTopicType
    content.vb: Public Enum PubSubTopicType
  extensionMethods:
  - AuxLabs.Twitch.PubSub.PubSubTopicType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.Unknown
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.Unknown
  id: Unknown
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: PubSubTopicType.Unknown
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.Unknown
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Unknown
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  syntax:
    content: Unknown = 0
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV1
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV1
  id: BitsV1
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: BitsV1
  nameWithType: PubSubTopicType.BitsV1
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV1
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BitsV1
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: Anyone cheers in a specified channel.
  remarks: Requires the <code>bits:read</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel-bits-events-v1")]

      BitsV1 = 1
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="channel-bits-events-v1")>

      BitsV1 = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel-bits-events-v1
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV2
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV2
  id: BitsV2
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: BitsV2
  nameWithType: PubSubTopicType.BitsV2
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.BitsV2
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BitsV2
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 15
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: Anyone cheers in a specified channel.
  remarks: Requires the <code>bits:read</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel-bits-events-v2")]

      BitsV2 = 2
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="channel-bits-events-v2")>

      BitsV2 = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel-bits-events-v2
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.BitsBadgeUnlocks
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.BitsBadgeUnlocks
  id: BitsBadgeUnlocks
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: BitsBadgeUnlocks
  nameWithType: PubSubTopicType.BitsBadgeUnlocks
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.BitsBadgeUnlocks
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BitsBadgeUnlocks
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: >-
    Message sent when a user earns a new Bits badge in a particular channel, 
       and chooses to share the notification with chat.
  remarks: Requires the <code>bits:read</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel-bits-badge-unlocks")]

      BitsBadgeUnlocks = 3
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="channel-bits-badge-unlocks")>

      BitsBadgeUnlocks = 3
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel-bits-badge-unlocks
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelPointRedemptions
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelPointRedemptions
  id: ChannelPointRedemptions
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: ChannelPointRedemptions
  nameWithType: PubSubTopicType.ChannelPointRedemptions
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelPointRedemptions
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelPointRedemptions
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: A custom reward is redeemed in a channel.
  remarks: Requires the <code>channel:read:redemptions</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel-points-channel-v1")]

      ChannelPointRedemptions = 4
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="channel-points-channel-v1")>

      ChannelPointRedemptions = 4
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel-points-channel-v1
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelSubscriptions
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelSubscriptions
  id: ChannelSubscriptions
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: ChannelSubscriptions
  nameWithType: PubSubTopicType.ChannelSubscriptions
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.ChannelSubscriptions
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ChannelSubscriptions
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: >-
    Anyone subscribes (first month), resubscribes (subsequent months), 
       or gifts a subscription to a channel.
  remarks: Requires the <code>channel:read:subscriptions</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "channel-subscribe-events-v1")]

      ChannelSubscriptions = 5
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="channel-subscribe-events-v1")>

      ChannelSubscriptions = 5
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: channel-subscribe-events-v1
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.AutoModQueue
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.AutoModQueue
  id: AutoModQueue
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: AutoModQueue
  nameWithType: PubSubTopicType.AutoModQueue
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.AutoModQueue
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: AutoModQueue
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 38
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: >-
    AutoMod flags a message as potentially inappropriate, 
       and when a moderator takes action on a message.
  remarks: Requires the <code>channel:moderate</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "automod-queue")]

      AutoModQueue = 6
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="automod-queue")>

      AutoModQueue = 6
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: automod-queue
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.ModeratorActions
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.ModeratorActions
  id: ModeratorActions
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: ModeratorActions
  nameWithType: PubSubTopicType.ModeratorActions
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.ModeratorActions
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ModeratorActions
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 45
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: >-
    Examples of moderator actions are bans, unbans, timeouts, 
       deleting messages, changing chat mode (followers-only, subs-only), 
       changing AutoMod levels, and adding a mod.
  remarks: Requires the <code>channel:moderate</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "chat_moderator_actions")]

      ModeratorActions = 7
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="chat_moderator_actions")>

      ModeratorActions = 7
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: chat_moderator_actions
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.LowTrustUserStatus
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.LowTrustUserStatus
  id: LowTrustUserStatus
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: LowTrustUserStatus
  nameWithType: PubSubTopicType.LowTrustUserStatus
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.LowTrustUserStatus
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: LowTrustUserStatus
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 52
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: >-
    The broadcaster or a moderator updates the low trust status 
       of a user, or a new message has been sent in chat by a potential ban 
       evader or a bans shared user.
  remarks: Requires the <code>channel:moderate</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "low-trust-users")]

      LowTrustUserStatus = 8
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="low-trust-users")>

      LowTrustUserStatus = 8
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: low-trust-users
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.ModerationNotifications
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.ModerationNotifications
  id: ModerationNotifications
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: ModerationNotifications
  nameWithType: PubSubTopicType.ModerationNotifications
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.ModerationNotifications
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ModerationNotifications
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 57
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: A user’s message held by AutoMod has been approved or denied.
  remarks: Requires the <code>chat:read</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "user-moderation-notifications")]

      ModerationNotifications = 9
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="user-moderation-notifications")>

      ModerationNotifications = 9
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: user-moderation-notifications
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.Whispers
  commentId: F:AuxLabs.Twitch.PubSub.PubSubTopicType.Whispers
  id: Whispers
  parent: AuxLabs.Twitch.PubSub.PubSubTopicType
  langs:
  - csharp
  - vb
  name: Whispers
  nameWithType: PubSubTopicType.Whispers
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType.Whispers
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Whispers
    path: ../src/AuxLabs.Twitch.PubSub.Api/Models/PubSubTopicType.cs
    startLine: 62
  assemblies:
  - AuxLabs.Twitch.PubSub.Api
  namespace: AuxLabs.Twitch.PubSub
  summary: Anyone whispers the specified user.
  remarks: Requires the <code>whispers:read</code> scope.
  example: []
  syntax:
    content: >-
      [EnumMember(Value = "whispers")]

      Whispers = 10
    return:
      type: AuxLabs.Twitch.PubSub.PubSubTopicType
    content.vb: >-
      <EnumMember(Value:="whispers")>

      Whispers = 10
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: whispers
references:
- uid: AuxLabs.Twitch.PubSub
  commentId: N:AuxLabs.Twitch.PubSub
  href: AuxLabs.html
  name: AuxLabs.Twitch.PubSub
  nameWithType: AuxLabs.Twitch.PubSub
  fullName: AuxLabs.Twitch.PubSub
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.PubSub
    name: PubSub
    href: AuxLabs.Twitch.PubSub.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.PubSub
    name: PubSub
    href: AuxLabs.Twitch.PubSub.html
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  parent: AuxLabs.Twitch.EnumHelper
  definition: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.PubSub.PubSubTopicType).html
  name: GetStringValue<PubSubTopicType>(PubSubTopicType)
  nameWithType: EnumHelper.GetStringValue<PubSubTopicType>(PubSubTopicType)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<AuxLabs.Twitch.PubSub.PubSubTopicType>(AuxLabs.Twitch.PubSub.PubSubTopicType)
  nameWithType.vb: EnumHelper.GetStringValue(Of PubSubTopicType)(PubSubTopicType)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of AuxLabs.Twitch.PubSub.PubSubTopicType)(AuxLabs.Twitch.PubSub.PubSubTopicType)
  name.vb: GetStringValue(Of PubSubTopicType)(PubSubTopicType)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.PubSub.PubSubTopicType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.PubSub.PubSubTopicType).html
  - name: <
  - uid: AuxLabs.Twitch.PubSub.PubSubTopicType
    name: PubSubTopicType
    href: AuxLabs.Twitch.PubSub.PubSubTopicType.html
  - name: '>'
  - name: (
  - uid: AuxLabs.Twitch.PubSub.PubSubTopicType
    name: PubSubTopicType
    href: AuxLabs.Twitch.PubSub.PubSubTopicType.html
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.PubSub.PubSubTopicType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.PubSub.PubSubTopicType).html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.PubSub.PubSubTopicType
    name: PubSubTopicType
    href: AuxLabs.Twitch.PubSub.PubSubTopicType.html
  - name: )
  - name: (
  - uid: AuxLabs.Twitch.PubSub.PubSubTopicType
    name: PubSubTopicType
    href: AuxLabs.Twitch.PubSub.PubSubTopicType.html
  - name: )
- uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  name: GetStringValue<T>(T)
  nameWithType: EnumHelper.GetStringValue<T>(T)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<T>(T)
  nameWithType.vb: EnumHelper.GetStringValue(Of T)(T)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of T)(T)
  name.vb: GetStringValue(Of T)(T)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EnumHelper
  commentId: T:AuxLabs.Twitch.EnumHelper
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EnumHelper.html
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: AuxLabs.Twitch.EnumHelper
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.PubSub.PubSubTopicType
  commentId: T:AuxLabs.Twitch.PubSub.PubSubTopicType
  parent: AuxLabs.Twitch.PubSub
  href: AuxLabs.Twitch.PubSub.PubSubTopicType.html
  name: PubSubTopicType
  nameWithType: PubSubTopicType
  fullName: AuxLabs.Twitch.PubSub.PubSubTopicType
memberLayout: SeparatePages
