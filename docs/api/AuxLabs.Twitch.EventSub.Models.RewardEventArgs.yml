### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  commentId: T:AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  id: RewardEventArgs
  parent: AuxLabs.Twitch.EventSub.Models
  children:
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue
  - AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title
  langs:
  - csharp
  - vb
  name: RewardEventArgs
  nameWithType: RewardEventArgs
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RewardEventArgs
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  syntax:
    content: public class RewardEventArgs
    content.vb: Public Class RewardEventArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id
  id: Id
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RewardEventArgs.Id
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Id
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 9
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The reward identifier.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("id")>

      Public Property Id As String
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: RewardEventArgs.BroadcasterId
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 13
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster ID.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_id")]

      public string BroadcasterId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_id
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName
  id: BroadcasterName
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterName
  nameWithType: RewardEventArgs.BroadcasterName
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster login.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_login")]

      public string BroadcasterName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_login")>

      Public Property BroadcasterName As String
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_login
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName
  id: BroadcasterDisplayName
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: BroadcasterDisplayName
  nameWithType: RewardEventArgs.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterDisplayName
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 21
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The requested broadcaster display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_user_name")]

      public string BroadcasterDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_user_name")>

      Public Property BroadcasterDisplayName As String
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_user_name
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled
  id: IsEnabled
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: RewardEventArgs.IsEnabled
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsEnabled
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Is the reward currently enabled.
  remarks: If false, the reward wonâ€™t show up to viewers.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_enabled")]

      public bool IsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_enabled")>

      Public Property IsEnabled As Boolean
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_enabled
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused
  id: IsPaused
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: IsPaused
  nameWithType: RewardEventArgs.IsPaused
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsPaused
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 31
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Is the reward currently paused.
  remarks: If true, viewers canâ€™t redeem.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_paused")]

      public bool IsPaused { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_paused")>

      Public Property IsPaused As Boolean
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_paused
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock
  id: IsInStock
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: IsInStock
  nameWithType: RewardEventArgs.IsInStock
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsInStock
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 36
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Is the reward currently in stock.
  remarks: If false, viewers canâ€™t redeem.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_in_stock")]

      public bool IsInStock { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_in_stock")>

      Public Property IsInStock As Boolean
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_in_stock
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title
  id: Title
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: RewardEventArgs.Title
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Title
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 40
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The reward title.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("title")]

      public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("title")>

      Public Property Title As String
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost
  id: Cost
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: Cost
  nameWithType: RewardEventArgs.Cost
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Cost
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 44
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The reward cost.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("cost")]

      public int Cost { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("cost")>

      Public Property Cost As Integer
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cost
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt
  id: Prompt
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: Prompt
  nameWithType: RewardEventArgs.Prompt
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Prompt
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 48
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The reward description.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("prompt")]

      public string Prompt { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("prompt")>

      Public Property Prompt As String
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: prompt
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired
  id: IsUserInputRequired
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: IsUserInputRequired
  nameWithType: RewardEventArgs.IsUserInputRequired
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsUserInputRequired
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 52
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Does the viewer need to enter information when redeeming the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_user_input_required")]

      public bool IsUserInputRequired { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_user_input_required")>

      Public Property IsUserInputRequired As Boolean
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_user_input_required
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue
  id: ShouldSkipRequestQueue
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: ShouldSkipRequestQueue
  nameWithType: RewardEventArgs.ShouldSkipRequestQueue
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ShouldSkipRequestQueue
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 57
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: >-
    Should redemptions be set to fulfilled status immediately when redeemed and
       skip the request queue instead of the normal unfulfilled status.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("should_redemptions_skip_request_queue")]

      public bool ShouldSkipRequestQueue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("should_redemptions_skip_request_queue")>

      Public Property ShouldSkipRequestQueue As Boolean
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: should_redemptions_skip_request_queue
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream
  id: MaxPerStream
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: MaxPerStream
  nameWithType: RewardEventArgs.MaxPerStream
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MaxPerStream
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 61
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Whether a maximum per stream is enabled and what the maximum is.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("max_per_stream")]

      public RewardSetting MaxPerStream { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.EventSub.Models.RewardSetting
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("max_per_stream")>

      Public Property MaxPerStream As RewardSetting
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: max_per_stream
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser
  id: MaxPerUser
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: MaxPerUser
  nameWithType: RewardEventArgs.MaxPerUser
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MaxPerUser
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 65
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Whether a maximum per user per stream is enabled and what the maximum is.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("max_per_user_per_stream")]

      public RewardSetting MaxPerUser { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.EventSub.Models.RewardSetting
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("max_per_user_per_stream")>

      Public Property MaxPerUser As RewardSetting
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: max_per_user_per_stream
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor
  id: BackgroundColor
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: BackgroundColor
  nameWithType: RewardEventArgs.BackgroundColor
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BackgroundColor
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 69
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Custom background color for the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("background_color")]

      public Color BackgroundColor { get; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("background_color")>

      Public Property BackgroundColor As Color
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: background_color
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image
  id: Image
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: RewardEventArgs.Image
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Image
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 74
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Set of custom images of 1x, 2x and 4x sizes for the reward.
  remarks: Can be <code>null</code> if no images have been uploaded.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("image")]

      public TwitchImage Image { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.TwitchImage
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("image")>

      Public Property Image As TwitchImage
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: image
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage
  id: DefaultImage
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: DefaultImage
  nameWithType: RewardEventArgs.DefaultImage
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DefaultImage
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 78
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Set of default images of 1x, 2x and 4x sizes for the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("default_image")]

      public TwitchImage DefaultImage { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.TwitchImage
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("default_image")>

      Public Property DefaultImage As TwitchImage
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: default_image
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown
  id: GlobalCooldown
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: GlobalCooldown
  nameWithType: RewardEventArgs.GlobalCooldown
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GlobalCooldown
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 82
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Whether a cooldown is enabled and what the cooldown is in seconds.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("global_cooldown")]

      public GlobalCooldownSetting GlobalCooldown { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.EventSub.Models.GlobalCooldownSetting
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("global_cooldown")>

      Public Property GlobalCooldown As GlobalCooldownSetting
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: global_cooldown
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt
  id: CooldownEndsAt
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: CooldownEndsAt
  nameWithType: RewardEventArgs.CooldownEndsAt
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CooldownEndsAt
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 87
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: Timestamp of the cooldown expiration.
  remarks: <code>null</code> if the reward isnâ€™t on cooldown.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("cooldown_expires_at")]

      public DateTime? CooldownEndsAt { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("cooldown_expires_at")>

      Public Property CooldownEndsAt As Date?
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cooldown_expires_at
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal
  commentId: P:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal
  id: CurrentRedeemsTotal
  parent: AuxLabs.Twitch.EventSub.Models.RewardEventArgs
  langs:
  - csharp
  - vb
  name: CurrentRedeemsTotal
  nameWithType: RewardEventArgs.CurrentRedeemsTotal
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CurrentRedeemsTotal
    path: ../src/AuxLabs.Twitch.EventSub.Api/Models/Events/Rewards/RewardEventArgs.cs
    startLine: 91
  assemblies:
  - AuxLabs.Twitch.EventSub.Api
  namespace: AuxLabs.Twitch.EventSub.Models
  summary: The number of redemptions redeemed during the current live stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("redemptions_redeemed_current_stream")]

      public int CurrentRedeemsTotal { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("redemptions_redeemed_current_stream")>

      Public Property CurrentRedeemsTotal As Integer
  overload: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: redemptions_redeemed_current_stream
references:
- uid: AuxLabs.Twitch.EventSub.Models
  commentId: N:AuxLabs.Twitch.EventSub.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.EventSub.Models
  nameWithType: AuxLabs.Twitch.EventSub.Models
  fullName: AuxLabs.Twitch.EventSub.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub
    name: EventSub
    href: AuxLabs.Twitch.EventSub.html
  - name: .
  - uid: AuxLabs.Twitch.EventSub.Models
    name: Models
    href: AuxLabs.Twitch.EventSub.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id.html
  name: Id
  nameWithType: RewardEventArgs.Id
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId.html
  name: BroadcasterId
  nameWithType: RewardEventArgs.BroadcasterId
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterId
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName.html
  name: BroadcasterName
  nameWithType: RewardEventArgs.BroadcasterName
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterName
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName.html
  name: BroadcasterDisplayName
  nameWithType: RewardEventArgs.BroadcasterDisplayName
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BroadcasterDisplayName
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled.html
  name: IsEnabled
  nameWithType: RewardEventArgs.IsEnabled
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused.html
  name: IsPaused
  nameWithType: RewardEventArgs.IsPaused
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsPaused
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock.html
  name: IsInStock
  nameWithType: RewardEventArgs.IsInStock
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsInStock
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title.html
  name: Title
  nameWithType: RewardEventArgs.Title
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Title
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost.html
  name: Cost
  nameWithType: RewardEventArgs.Cost
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Cost
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt.html
  name: Prompt
  nameWithType: RewardEventArgs.Prompt
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Prompt
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired.html
  name: IsUserInputRequired
  nameWithType: RewardEventArgs.IsUserInputRequired
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.IsUserInputRequired
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue.html
  name: ShouldSkipRequestQueue
  nameWithType: RewardEventArgs.ShouldSkipRequestQueue
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.ShouldSkipRequestQueue
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream.html
  name: MaxPerStream
  nameWithType: RewardEventArgs.MaxPerStream
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerStream
- uid: AuxLabs.Twitch.EventSub.Models.RewardSetting
  commentId: T:AuxLabs.Twitch.EventSub.Models.RewardSetting
  parent: AuxLabs.Twitch.EventSub.Models
  href: AuxLabs.Twitch.EventSub.Models.RewardSetting.html
  name: RewardSetting
  nameWithType: RewardSetting
  fullName: AuxLabs.Twitch.EventSub.Models.RewardSetting
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser.html
  name: MaxPerUser
  nameWithType: RewardEventArgs.MaxPerUser
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.MaxPerUser
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor.html
  name: BackgroundColor
  nameWithType: RewardEventArgs.BackgroundColor
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.BackgroundColor
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image.html
  name: Image
  nameWithType: RewardEventArgs.Image
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.Image
- uid: AuxLabs.Twitch.TwitchImage
  commentId: T:AuxLabs.Twitch.TwitchImage
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.TwitchImage.html
  name: TwitchImage
  nameWithType: TwitchImage
  fullName: AuxLabs.Twitch.TwitchImage
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage.html
  name: DefaultImage
  nameWithType: RewardEventArgs.DefaultImage
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.DefaultImage
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown.html
  name: GlobalCooldown
  nameWithType: RewardEventArgs.GlobalCooldown
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.GlobalCooldown
- uid: AuxLabs.Twitch.EventSub.Models.GlobalCooldownSetting
  commentId: T:AuxLabs.Twitch.EventSub.Models.GlobalCooldownSetting
  parent: AuxLabs.Twitch.EventSub.Models
  href: AuxLabs.Twitch.EventSub.Models.GlobalCooldownSetting.html
  name: GlobalCooldownSetting
  nameWithType: GlobalCooldownSetting
  fullName: AuxLabs.Twitch.EventSub.Models.GlobalCooldownSetting
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt.html
  name: CooldownEndsAt
  nameWithType: RewardEventArgs.CooldownEndsAt
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CooldownEndsAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal*
  commentId: Overload:AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal
  href: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal.html
  name: CurrentRedeemsTotal
  nameWithType: RewardEventArgs.CurrentRedeemsTotal
  fullName: AuxLabs.Twitch.EventSub.Models.RewardEventArgs.CurrentRedeemsTotal
memberLayout: SeparatePages
