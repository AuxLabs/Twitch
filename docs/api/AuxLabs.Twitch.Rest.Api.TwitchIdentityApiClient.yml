### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  commentId: T:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  id: TwitchIdentityApiClient
  parent: AuxLabs.Twitch.Rest.Api
  children:
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String,System.String,System.String)
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String,System.String)
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String)
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose(System.Boolean)
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.Nullable{System.Threading.CancellationToken})
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
  - AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  langs:
  - csharp
  - vb
  name: TwitchIdentityApiClient
  nameWithType: TwitchIdentityApiClient
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TwitchIdentityApiClient
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 11
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: A client that implements Twitch's identity api for manging access tokens.
  example: []
  syntax:
    content: 'public class TwitchIdentityApiClient : ITwitchIdentityApi, IDisposable'
    content.vb: Public Class TwitchIdentityApiClient Implements ITwitchIdentityApi, IDisposable
  inheritance:
  - System.Object
  implements:
  - AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity
  commentId: P:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity
  id: Identity
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: TwitchIdentityApiClient.Identity
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Identity
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Information about the currently authorized user.
  example: []
  syntax:
    content: public AppIdentity Identity { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Models.AppIdentity
    content.vb: Public Property Identity As AppIdentity
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity*
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId
  commentId: P:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId
  id: ClientId
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: TwitchIdentityApiClient.ClientId
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ClientId
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Your app’s registered client ID.
  example: []
  syntax:
    content: public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientId As String
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId*
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret
  commentId: P:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret
  id: ClientSecret
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: TwitchIdentityApiClient.ClientSecret
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ClientSecret
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 23
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Your app’s registered client secret.
  example: []
  syntax:
    content: public string ClientSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientSecret As String
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret*
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken
  commentId: P:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken
  id: RefreshToken
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: RefreshToken
  nameWithType: TwitchIdentityApiClient.RefreshToken
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RefreshToken
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: ''
  example: []
  syntax:
    content: public string RefreshToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RefreshToken As String
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken*
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor
  id: '#ctor'
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: TwitchIdentityApiClient()
  nameWithType: TwitchIdentityApiClient.TwitchIdentityApiClient()
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.TwitchIdentityApiClient()
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  syntax:
    content: public TwitchIdentityApiClient()
    content.vb: Public Sub New()
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor*
  nameWithType.vb: TwitchIdentityApiClient.New()
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.New()
  name.vb: New()
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String,System.String)
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: TwitchIdentityApiClient(string, string)
  nameWithType: TwitchIdentityApiClient.TwitchIdentityApiClient(string, string)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.TwitchIdentityApiClient(string, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 30
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  syntax:
    content: public TwitchIdentityApiClient(string clientId, string clientSecret)
    parameters:
    - id: clientId
      type: System.String
    - id: clientSecret
      type: System.String
    content.vb: Public Sub New(clientId As String, clientSecret As String)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor*
  nameWithType.vb: TwitchIdentityApiClient.New(String, String)
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.New(String, String)
  name.vb: New(String, String)
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String)
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: TwitchIdentityApiClient(string)
  nameWithType: TwitchIdentityApiClient.TwitchIdentityApiClient(string)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.TwitchIdentityApiClient(string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  syntax:
    content: public TwitchIdentityApiClient(string url)
    parameters:
    - id: url
      type: System.String
    content.vb: Public Sub New(url As String)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor*
  nameWithType.vb: TwitchIdentityApiClient.New(String)
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.New(String)
  name.vb: New(String)
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String,System.String,System.String)
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: TwitchIdentityApiClient(string, string, string)
  nameWithType: TwitchIdentityApiClient.TwitchIdentityApiClient(string, string, string)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.TwitchIdentityApiClient(string, string, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 38
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  syntax:
    content: public TwitchIdentityApiClient(string clientId, string clientSecret, string url)
    parameters:
    - id: clientId
      type: System.String
    - id: clientSecret
      type: System.String
    - id: url
      type: System.String
    content.vb: Public Sub New(clientId As String, clientSecret As String, url As String)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor*
  nameWithType.vb: TwitchIdentityApiClient.New(String, String, String)
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.New(String, String, String)
  name.vb: New(String, String, String)
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose(System.Boolean)
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: TwitchIdentityApiClient.Dispose(bool)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Dispose
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 45
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose*
  nameWithType.vb: TwitchIdentityApiClient.Dispose(Boolean)
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose
  id: Dispose
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TwitchIdentityApiClient.Dispose()
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Dispose
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 56
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.Nullable{System.Threading.CancellationToken})
  id: ValidateAsync(System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: ValidateAsync(CancellationToken?)
  nameWithType: TwitchIdentityApiClient.ValidateAsync(CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ValidateAsync
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 64
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Get an app identity using the provided app credentials.
  example: []
  syntax:
    content: public Task<AppIdentity> ValidateAsync(CancellationToken? cancelToken = null)
    parameters:
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AppIdentity}
    content.vb: Public Function ValidateAsync(cancelToken As CancellationToken? = Nothing) As Task(Of AppIdentity)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync*
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  id: ValidateAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: ValidateAsync(string, string, CancellationToken?)
  nameWithType: TwitchIdentityApiClient.ValidateAsync(string, string, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(string, string, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ValidateAsync
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 75
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Get information relating to a user access token
  example: []
  syntax:
    content: public Task<AccessTokenInfo> ValidateAsync(string token, string refreshToken, CancellationToken? cancelToken = null)
    parameters:
    - id: token
      type: System.String
    - id: refreshToken
      type: System.String
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AccessTokenInfo}
    content.vb: Public Function ValidateAsync(token As String, refreshToken As String, cancelToken As CancellationToken? = Nothing) As Task(Of AccessTokenInfo)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync*
  nameWithType.vb: TwitchIdentityApiClient.ValidateAsync(String, String, CancellationToken?)
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(String, String, System.Threading.CancellationToken?)
  name.vb: ValidateAsync(String, String, CancellationToken?)
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
  id: ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: ValidateAsync(string, CancellationToken?)
  nameWithType: TwitchIdentityApiClient.ValidateAsync(string, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(string, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ValidateAsync
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 82
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Get information relating to a user access token
  example: []
  syntax:
    content: public Task<AccessTokenInfo> ValidateAsync(string token, CancellationToken? cancelToken = null)
    parameters:
    - id: token
      type: System.String
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AccessTokenInfo}
    content.vb: Public Function ValidateAsync(token As String, cancelToken As CancellationToken? = Nothing) As Task(Of AccessTokenInfo)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync*
  implements:
  - AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
  nameWithType.vb: TwitchIdentityApiClient.ValidateAsync(String, CancellationToken?)
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(String, System.Threading.CancellationToken?)
  name.vb: ValidateAsync(String, CancellationToken?)
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
  id: RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: RevokeTokenAsync(PostRevokeTokenArgs, CancellationToken?)
  nameWithType: TwitchIdentityApiClient.RevokeTokenAsync(PostRevokeTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: RevokeTokenAsync
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 115
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Revoke an access token that is no longer needed
  example: []
  syntax:
    content: public Task RevokeTokenAsync(PostRevokeTokenArgs args, CancellationToken? cancelToken = null)
    parameters:
    - id: args
      type: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RevokeTokenAsync(args As PostRevokeTokenArgs, cancelToken As CancellationToken? = Nothing) As Task
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync*
  implements:
  - AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
  id: PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: PostRefreshTokenAsync(PostRefreshTokenArgs, CancellationToken?)
  nameWithType: TwitchIdentityApiClient.PostRefreshTokenAsync(PostRefreshTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PostRefreshTokenAsync
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 119
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Refresh an expired user access token
  example: []
  syntax:
    content: public Task<UserIdentity> PostRefreshTokenAsync(PostRefreshTokenArgs args, CancellationToken? cancelToken = null)
    parameters:
    - id: args
      type: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.UserIdentity}
    content.vb: Public Function PostRefreshTokenAsync(args As PostRefreshTokenArgs, cancelToken As CancellationToken? = Nothing) As Task(Of UserIdentity)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync*
  implements:
  - AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  id: PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: PostAccessTokenAsync(PostAppAccessTokenArgs, CancellationToken?)
  nameWithType: TwitchIdentityApiClient.PostAccessTokenAsync(PostAppAccessTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PostAccessTokenAsync
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 123
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Get an access token that identifies you as the specified application
  example: []
  syntax:
    content: public Task<AppIdentity> PostAccessTokenAsync(PostAppAccessTokenArgs args, CancellationToken? cancelToken = null)
    parameters:
    - id: args
      type: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AppIdentity}
    content.vb: Public Function PostAccessTokenAsync(args As PostAppAccessTokenArgs, cancelToken As CancellationToken? = Nothing) As Task(Of AppIdentity)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync*
  implements:
  - AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  id: PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient
  langs:
  - csharp
  - vb
  name: PostAccessTokenAsync(PostUserAccessTokenArgs, CancellationToken?)
  nameWithType: TwitchIdentityApiClient.PostAccessTokenAsync(PostUserAccessTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs, System.Threading.CancellationToken?)
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PostAccessTokenAsync
    path: ../src/AuxLabs.Twitch.Rest.Api/TwitchIdentityApiClient.cs
    startLine: 127
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Api
  summary: Get an access token that identifies you as the specified user
  example: []
  syntax:
    content: public Task<UserIdentity> PostAccessTokenAsync(PostUserAccessTokenArgs args, CancellationToken? cancelToken = null)
    parameters:
    - id: args
      type: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.UserIdentity}
    content.vb: Public Function PostAccessTokenAsync(args As PostUserAccessTokenArgs, cancelToken As CancellationToken? = Nothing) As Task(Of UserIdentity)
  overload: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync*
  implements:
  - AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
references:
- uid: AuxLabs.Twitch.Rest.Api
  commentId: N:AuxLabs.Twitch.Rest.Api
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Api
  nameWithType: AuxLabs.Twitch.Rest.Api
  fullName: AuxLabs.Twitch.Rest.Api
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Api
    name: Api
    href: AuxLabs.Twitch.Rest.Api.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Api
    name: Api
    href: AuxLabs.Twitch.Rest.Api.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  commentId: T:AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  parent: AuxLabs.Twitch.Rest.Api
  href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.html
  name: ITwitchIdentityApi
  nameWithType: ITwitchIdentityApi
  fullName: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity.html
  name: Identity
  nameWithType: TwitchIdentityApiClient.Identity
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Identity
- uid: AuxLabs.Twitch.Rest.Models.AppIdentity
  commentId: T:AuxLabs.Twitch.Rest.Models.AppIdentity
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.AppIdentity.html
  name: AppIdentity
  nameWithType: AppIdentity
  fullName: AuxLabs.Twitch.Rest.Models.AppIdentity
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId.html
  name: ClientId
  nameWithType: TwitchIdentityApiClient.ClientId
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret.html
  name: ClientSecret
  nameWithType: TwitchIdentityApiClient.ClientSecret
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ClientSecret
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken.html
  name: RefreshToken
  nameWithType: TwitchIdentityApiClient.RefreshToken
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RefreshToken
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.#ctor.html
  name: TwitchIdentityApiClient
  nameWithType: TwitchIdentityApiClient.TwitchIdentityApiClient
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.TwitchIdentityApiClient
  nameWithType.vb: TwitchIdentityApiClient.New
  fullName.vb: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.New
  name.vb: New
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose(System.Boolean).html
  name: Dispose
  nameWithType: TwitchIdentityApiClient.Dispose
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync(System.Nullable{System.Threading.CancellationToken}).html
  name: ValidateAsync
  nameWithType: TwitchIdentityApiClient.ValidateAsync
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.ValidateAsync
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken?
  nameWithType: CancellationToken?
  fullName: System.Threading.CancellationToken?
  spec.csharp:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  spec.vb:
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AppIdentity}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AppIdentity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AppIdentity>
  nameWithType: Task<AppIdentity>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Models.AppIdentity>
  nameWithType.vb: Task(Of AppIdentity)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Models.AppIdentity)
  name.vb: Task(Of AppIdentity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.AppIdentity
    name: AppIdentity
    href: AuxLabs.Twitch.Rest.Models.AppIdentity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.AppIdentity
    name: AppIdentity
    href: AuxLabs.Twitch.Rest.Models.AppIdentity.html
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AccessTokenInfo}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.AccessTokenInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AccessTokenInfo>
  nameWithType: Task<AccessTokenInfo>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Models.AccessTokenInfo>
  nameWithType.vb: Task(Of AccessTokenInfo)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Models.AccessTokenInfo)
  name.vb: Task(Of AccessTokenInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.AccessTokenInfo
    name: AccessTokenInfo
    href: AuxLabs.Twitch.Rest.Models.AccessTokenInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.AccessTokenInfo
    name: AccessTokenInfo
    href: AuxLabs.Twitch.Rest.Models.AccessTokenInfo.html
  - name: )
- uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  isExternal: true
  href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken}).html
  name: ValidateAsync(string, CancellationToken?)
  nameWithType: ITwitchIdentityApi.ValidateAsync(string, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(string, System.Threading.CancellationToken?)
  nameWithType.vb: ITwitchIdentityApi.ValidateAsync(String, CancellationToken?)
  fullName.vb: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(String, System.Threading.CancellationToken?)
  name.vb: ValidateAsync(String, CancellationToken?)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
    name: ValidateAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken})
    name: ValidateAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.ValidateAsync(System.String,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  name: RevokeTokenAsync
  nameWithType: TwitchIdentityApiClient.RevokeTokenAsync
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.RevokeTokenAsync
- uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  isExternal: true
  href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  name: RevokeTokenAsync(PostRevokeTokenArgs, CancellationToken?)
  nameWithType: ITwitchIdentityApi.RevokeTokenAsync(PostRevokeTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: RevokeTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs
    name: PostRevokeTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: RevokeTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.RevokeTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs
    name: PostRevokeTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs
  commentId: T:AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs
  parent: AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs.html
  name: PostRevokeTokenArgs
  nameWithType: PostRevokeTokenArgs
  fullName: AuxLabs.Twitch.Rest.Requests.PostRevokeTokenArgs
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: AuxLabs.Twitch.Rest.Requests
  commentId: N:AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Requests
  nameWithType: AuxLabs.Twitch.Rest.Requests
  fullName: AuxLabs.Twitch.Rest.Requests
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  name: PostRefreshTokenAsync
  nameWithType: TwitchIdentityApiClient.PostRefreshTokenAsync
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostRefreshTokenAsync
- uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  isExternal: true
  href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  name: PostRefreshTokenAsync(PostRefreshTokenArgs, CancellationToken?)
  nameWithType: ITwitchIdentityApi.PostRefreshTokenAsync(PostRefreshTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: PostRefreshTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs
    name: PostRefreshTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: PostRefreshTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostRefreshTokenAsync(AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs
    name: PostRefreshTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs
  commentId: T:AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs
  parent: AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs.html
  name: PostRefreshTokenArgs
  nameWithType: PostRefreshTokenArgs
  fullName: AuxLabs.Twitch.Rest.Requests.PostRefreshTokenArgs
- uid: System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.UserIdentity}
  commentId: T:System.Threading.Tasks.Task{AuxLabs.Twitch.Rest.Models.UserIdentity}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserIdentity>
  nameWithType: Task<UserIdentity>
  fullName: System.Threading.Tasks.Task<AuxLabs.Twitch.Rest.Models.UserIdentity>
  nameWithType.vb: Task(Of UserIdentity)
  fullName.vb: System.Threading.Tasks.Task(Of AuxLabs.Twitch.Rest.Models.UserIdentity)
  name.vb: Task(Of UserIdentity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AuxLabs.Twitch.Rest.Models.UserIdentity
    name: UserIdentity
    href: AuxLabs.Twitch.Rest.Models.UserIdentity.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.Rest.Models.UserIdentity
    name: UserIdentity
    href: AuxLabs.Twitch.Rest.Models.UserIdentity.html
  - name: )
- uid: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync*
  commentId: Overload:AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync
  href: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  name: PostAccessTokenAsync
  nameWithType: TwitchIdentityApiClient.PostAccessTokenAsync
  fullName: AuxLabs.Twitch.Rest.Api.TwitchIdentityApiClient.PostAccessTokenAsync
- uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  isExternal: true
  href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  name: PostAccessTokenAsync(PostAppAccessTokenArgs, CancellationToken?)
  nameWithType: ITwitchIdentityApi.PostAccessTokenAsync(PostAppAccessTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: PostAccessTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs
    name: PostAppAccessTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: PostAccessTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs
    name: PostAppAccessTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs
  commentId: T:AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs
  parent: AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs.html
  name: PostAppAccessTokenArgs
  nameWithType: PostAppAccessTokenArgs
  fullName: AuxLabs.Twitch.Rest.Requests.PostAppAccessTokenArgs
- uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  commentId: M:AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
  parent: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi
  isExternal: true
  href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  name: PostAccessTokenAsync(PostUserAccessTokenArgs, CancellationToken?)
  nameWithType: ITwitchIdentityApi.PostAccessTokenAsync(PostUserAccessTokenArgs, CancellationToken?)
  fullName: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs, System.Threading.CancellationToken?)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: PostAccessTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs
    name: PostUserAccessTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken})
    name: PostAccessTokenAsync
    href: AuxLabs.Twitch.Rest.Api.ITwitchIdentityApi.PostAccessTokenAsync(AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs,System.Nullable{System.Threading.CancellationToken}).html
  - name: (
  - uid: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs
    name: PostUserAccessTokenArgs
    href: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: '?'
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs
  commentId: T:AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs
  parent: AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs.html
  name: PostUserAccessTokenArgs
  nameWithType: PostUserAccessTokenArgs
  fullName: AuxLabs.Twitch.Rest.Requests.PostUserAccessTokenArgs
memberLayout: SeparatePages
