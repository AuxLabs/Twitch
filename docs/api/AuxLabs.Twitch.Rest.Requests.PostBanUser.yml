### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser
  commentId: T:AuxLabs.Twitch.Rest.Requests.PostBanUser
  id: PostBanUser
  parent: AuxLabs.Twitch.Rest.Requests
  children:
  - AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor
  - AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor(System.String,System.Nullable{System.Int32},System.String)
  - AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds
  - AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason
  - AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId
  - AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate
  langs:
  - csharp
  - vb
  name: PostBanUser
  nameWithType: PostBanUser
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: PostBanUser
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
    startLine: 19
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public class PostBanUser
    content.vb: Public Class PostBanUser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId
  id: UserId
  parent: AuxLabs.Twitch.Rest.Requests.PostBanUser
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: PostBanUser.UserId
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: UserId
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The ID of the user to ban or put in a timeout.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("user_id")]

      public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("user_id")>

      Public Property UserId As String
  overload: AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_id
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds
  id: DurationSeconds
  parent: AuxLabs.Twitch.Rest.Requests.PostBanUser
  langs:
  - csharp
  - vb
  name: DurationSeconds
  nameWithType: PostBanUser.DurationSeconds
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DurationSeconds
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
    startLine: 27
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The timeout period.
  remarks: The minimum timeout is 1 second and the maximum is 1,209,600 seconds (2 weeks).
  example: []
  syntax:
    content: >-
      [JsonPropertyName("duration")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public int? DurationSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonPropertyName("duration")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property DurationSeconds As Integer?
  overload: AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: duration
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason
  commentId: P:AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason
  id: Reason
  parent: AuxLabs.Twitch.Rest.Requests.PostBanUser
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: PostBanUser.Reason
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Reason
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
    startLine: 33
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  summary: The reason the youâ€™re banning the user or putting them in a timeout.
  remarks: Limited to a maximum of 500 characters.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("reason")]

      [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]

      public string Reason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("reason")>

      <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingNull)>

      Public Property Reason As String
  overload: AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reason
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Condition
      type: System.Text.Json.Serialization.JsonIgnoreCondition
      value: 3
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor
  commentId: M:AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor
  id: '#ctor'
  parent: AuxLabs.Twitch.Rest.Requests.PostBanUser
  langs:
  - csharp
  - vb
  name: PostBanUser()
  nameWithType: PostBanUser.PostBanUser()
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.PostBanUser()
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
    startLine: 37
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public PostBanUser()
    content.vb: Public Sub New()
  overload: AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor*
  nameWithType.vb: PostBanUser.New()
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostBanUser.New()
  name.vb: New()
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor(System.String,System.Nullable{System.Int32},System.String)
  commentId: M:AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor(System.String,System.Nullable{System.Int32},System.String)
  id: '#ctor(System.String,System.Nullable{System.Int32},System.String)'
  parent: AuxLabs.Twitch.Rest.Requests.PostBanUser
  langs:
  - csharp
  - vb
  name: PostBanUser(string, int?, string)
  nameWithType: PostBanUser.PostBanUser(string, int?, string)
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.PostBanUser(string, int?, string)
  type: Constructor
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: .ctor
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
    startLine: 38
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public PostBanUser(string userId, int? durationSeconds = null, string reason = null)
    parameters:
    - id: userId
      type: System.String
    - id: durationSeconds
      type: System.Nullable{System.Int32}
    - id: reason
      type: System.String
    content.vb: Public Sub New(userId As String, durationSeconds As Integer? = Nothing, reason As String = Nothing)
  overload: AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor*
  nameWithType.vb: PostBanUser.New(String, Integer?, String)
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostBanUser.New(String, Integer?, String)
  name.vb: New(String, Integer?, String)
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate
  commentId: M:AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate
  id: Validate
  parent: AuxLabs.Twitch.Rest.Requests.PostBanUser
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: PostBanUser.Validate()
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate()
  type: Method
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Validate
    path: ../src/AuxLabs.Twitch.Rest.Api/Requests/Moderation/PostBanBody.cs
    startLine: 41
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Requests
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate()
  overload: AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate*
references:
- uid: AuxLabs.Twitch.Rest.Requests
  commentId: N:AuxLabs.Twitch.Rest.Requests
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Requests
  nameWithType: AuxLabs.Twitch.Rest.Requests
  fullName: AuxLabs.Twitch.Rest.Requests
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Requests
    name: Requests
    href: AuxLabs.Twitch.Rest.Requests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId
  href: AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId.html
  name: UserId
  nameWithType: PostBanUser.UserId
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.UserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds
  href: AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds.html
  name: DurationSeconds
  nameWithType: PostBanUser.DurationSeconds
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.DurationSeconds
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason
  href: AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason.html
  name: Reason
  nameWithType: PostBanUser.Reason
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.Reason
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor
  href: AuxLabs.Twitch.Rest.Requests.PostBanUser.#ctor.html
  name: PostBanUser
  nameWithType: PostBanUser.PostBanUser
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.PostBanUser
  nameWithType.vb: PostBanUser.New
  fullName.vb: AuxLabs.Twitch.Rest.Requests.PostBanUser.New
  name.vb: New
- uid: AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate*
  commentId: Overload:AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate
  href: AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate.html
  name: Validate
  nameWithType: PostBanUser.Validate
  fullName: AuxLabs.Twitch.Rest.Requests.PostBanUser.Validate
memberLayout: SeparatePages
