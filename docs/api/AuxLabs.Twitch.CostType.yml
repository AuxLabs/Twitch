### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.CostType
  commentId: T:AuxLabs.Twitch.CostType
  id: CostType
  parent: AuxLabs.Twitch
  children:
  - AuxLabs.Twitch.CostType.Bits
  - AuxLabs.Twitch.CostType.None
  langs:
  - csharp
  - vb
  name: CostType
  nameWithType: CostType
  fullName: AuxLabs.Twitch.CostType
  type: Enum
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/Extensions/CostType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CostType
    path: ../src/AuxLabs.Twitch.Core/Models/Extensions/CostType.cs
    startLine: 4
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: public enum CostType
    content.vb: Public Enum CostType
  extensionMethods:
  - AuxLabs.Twitch.CostType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
- uid: AuxLabs.Twitch.CostType.None
  commentId: F:AuxLabs.Twitch.CostType.None
  id: None
  parent: AuxLabs.Twitch.CostType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: CostType.None
  fullName: AuxLabs.Twitch.CostType.None
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/Extensions/CostType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: None
    path: ../src/AuxLabs.Twitch.Core/Models/Extensions/CostType.cs
    startLine: 6
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: None = 0
    return:
      type: AuxLabs.Twitch.CostType
- uid: AuxLabs.Twitch.CostType.Bits
  commentId: F:AuxLabs.Twitch.CostType.Bits
  id: Bits
  parent: AuxLabs.Twitch.CostType
  langs:
  - csharp
  - vb
  name: Bits
  nameWithType: CostType.Bits
  fullName: AuxLabs.Twitch.CostType.Bits
  type: Field
  source:
    remote:
      path: src/AuxLabs.Twitch.Core/Models/Extensions/CostType.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Bits
    path: ../src/AuxLabs.Twitch.Core/Models/Extensions/CostType.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch
  namespace: AuxLabs.Twitch
  syntax:
    content: >-
      [EnumMember(Value = "bits")]

      Bits = 1
    return:
      type: AuxLabs.Twitch.CostType
    content.vb: >-
      <EnumMember(Value:="bits")>

      Bits = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Value
      type: System.String
      value: bits
references:
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.CostType.AuxLabs.Twitch.EnumHelper.GetStringValue``1
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  parent: AuxLabs.Twitch.EnumHelper
  definition: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.CostType).html
  name: GetStringValue<CostType>(CostType)
  nameWithType: EnumHelper.GetStringValue<CostType>(CostType)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<AuxLabs.Twitch.CostType>(AuxLabs.Twitch.CostType)
  nameWithType.vb: EnumHelper.GetStringValue(Of CostType)(CostType)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of AuxLabs.Twitch.CostType)(AuxLabs.Twitch.CostType)
  name.vb: GetStringValue(Of CostType)(CostType)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.CostType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.CostType).html
  - name: <
  - uid: AuxLabs.Twitch.CostType
    name: CostType
    href: AuxLabs.Twitch.CostType.html
  - name: '>'
  - name: (
  - uid: AuxLabs.Twitch.CostType
    name: CostType
    href: AuxLabs.Twitch.CostType.html
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(AuxLabs.Twitch.CostType)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(AuxLabs.Twitch.CostType).html
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.CostType
    name: CostType
    href: AuxLabs.Twitch.CostType.html
  - name: )
  - name: (
  - uid: AuxLabs.Twitch.CostType
    name: CostType
    href: AuxLabs.Twitch.CostType.html
  - name: )
- uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  commentId: M:AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
  href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  name: GetStringValue<T>(T)
  nameWithType: EnumHelper.GetStringValue<T>(T)
  fullName: AuxLabs.Twitch.EnumHelper.GetStringValue<T>(T)
  nameWithType.vb: EnumHelper.GetStringValue(Of T)(T)
  fullName.vb: AuxLabs.Twitch.EnumHelper.GetStringValue(Of T)(T)
  name.vb: GetStringValue(Of T)(T)
  spec.csharp:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AuxLabs.Twitch.EnumHelper.GetStringValue``1(``0)
    name: GetStringValue
    href: AuxLabs.Twitch.EnumHelper.GetStringValue--1(--0).html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AuxLabs.Twitch.EnumHelper
  commentId: T:AuxLabs.Twitch.EnumHelper
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.EnumHelper.html
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: AuxLabs.Twitch.EnumHelper
- uid: AuxLabs.Twitch.CostType
  commentId: T:AuxLabs.Twitch.CostType
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.CostType.html
  name: CostType
  nameWithType: CostType
  fullName: AuxLabs.Twitch.CostType
memberLayout: SeparatePages
