### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.Reward
  commentId: T:AuxLabs.Twitch.Rest.Models.Reward
  id: Reward
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor
  - AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId
  - AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin
  - AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName
  - AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt
  - AuxLabs.Twitch.Rest.Models.Reward.DefaultImages
  - AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting
  - AuxLabs.Twitch.Rest.Models.Reward.Images
  - AuxLabs.Twitch.Rest.Models.Reward.IsEnabled
  - AuxLabs.Twitch.Rest.Models.Reward.IsInStock
  - AuxLabs.Twitch.Rest.Models.Reward.IsPaused
  - AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired
  - AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting
  - AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting
  - AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue
  - AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions
  langs:
  - csharp
  - vb
  name: Reward
  nameWithType: Reward
  fullName: AuxLabs.Twitch.Rest.Models.Reward
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Reward
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 7
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: 'public class Reward : SimpleReward'
    content.vb: Public Class Reward Inherits SimpleReward
  inheritance:
  - System.Object
  - AuxLabs.Twitch.SimpleReward
  inheritedMembers:
  - AuxLabs.Twitch.SimpleReward.Id
  - AuxLabs.Twitch.SimpleReward.Title
  - AuxLabs.Twitch.SimpleReward.Prompt
  - AuxLabs.Twitch.SimpleReward.Cost
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId
  id: BroadcasterId
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: BroadcasterId
  nameWithType: Reward.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterId
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 10
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The ID that uniquely identifies the broadcaster.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_id")]

      public string BroadcasterId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_id")>

      Public Property BroadcasterId As String
  overload: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_id
- uid: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin
  id: BroadcasterLogin
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: BroadcasterLogin
  nameWithType: Reward.BroadcasterLogin
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterLogin
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s login name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_login")]

      public string BroadcasterLogin { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_login")>

      Public Property BroadcasterLogin As String
  overload: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_login
- uid: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName
  id: BroadcasterName
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: BroadcasterName
  nameWithType: Reward.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BroadcasterName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 18
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The broadcaster’s display name.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcaster_name")]

      public string BroadcasterName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcaster_name")>

      Public Property BroadcasterName As String
  overload: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcaster_name
- uid: AuxLabs.Twitch.Rest.Models.Reward.Images
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.Images
  id: Images
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: Images
  nameWithType: Reward.Images
  fullName: AuxLabs.Twitch.Rest.Models.Reward.Images
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Images
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A set of custom images for the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("image")]

      public IReadOnlyCollection<TwitchImage> Images { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.TwitchImage}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("image")>

      Public Property Images As IReadOnlyCollection(Of TwitchImage)
  overload: AuxLabs.Twitch.Rest.Models.Reward.Images*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: image
- uid: AuxLabs.Twitch.Rest.Models.Reward.DefaultImages
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.DefaultImages
  id: DefaultImages
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: DefaultImages
  nameWithType: Reward.DefaultImages
  fullName: AuxLabs.Twitch.Rest.Models.Reward.DefaultImages
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DefaultImages
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A set of default images for the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("default_image")]

      public IReadOnlyCollection<TwitchImage> DefaultImages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.TwitchImage}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("default_image")>

      Public Property DefaultImages As IReadOnlyCollection(Of TwitchImage)
  overload: AuxLabs.Twitch.Rest.Models.Reward.DefaultImages*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: default_image
- uid: AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor
  id: BackgroundColor
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: BackgroundColor
  nameWithType: Reward.BackgroundColor
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: BackgroundColor
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 30
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The background color to use for the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("background_color")]

      public Color BackgroundColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("background_color")>

      Public Property BackgroundColor As Color
  overload: AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: background_color
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsEnabled
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.IsEnabled
  id: IsEnabled
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: Reward.IsEnabled
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsEnabled
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsEnabled
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 34
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the reward is enabled.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_enabled")]

      public bool IsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_enabled")>

      Public Property IsEnabled As Boolean
  overload: AuxLabs.Twitch.Rest.Models.Reward.IsEnabled*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_enabled
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired
  id: IsUserInputRequired
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: IsUserInputRequired
  nameWithType: Reward.IsUserInputRequired
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsUserInputRequired
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 38
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the user must enter information when redeeming the reward.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_user_input_required")]

      public bool IsUserInputRequired { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_user_input_required")>

      Public Property IsUserInputRequired As Boolean
  overload: AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_user_input_required
- uid: AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting
  id: MaxPerStreamSetting
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: MaxPerStreamSetting
  nameWithType: Reward.MaxPerStreamSetting
  fullName: AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MaxPerStreamSetting
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 42
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determiness whether to apply a maximum to the number to the redemptions allowed per live stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("max_per_stream_setting")]

      public RewardSetting MaxPerStreamSetting { get; set; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Models.RewardSetting
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("max_per_stream_setting")>

      Public Property MaxPerStreamSetting As RewardSetting
  overload: AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: max_per_stream_setting
- uid: AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting
  id: MaxPerUserSetting
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: MaxPerUserSetting
  nameWithType: Reward.MaxPerUserSetting
  fullName: AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: MaxPerUserSetting
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 46
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether to apply a maximum to the number of redemptions allowed per user per live stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("max_per_user_per_stream_setting")]

      public RewardSetting MaxPerUserSetting { get; set; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Models.RewardSetting
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("max_per_user_per_stream_setting")>

      Public Property MaxPerUserSetting As RewardSetting
  overload: AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: max_per_user_per_stream_setting
- uid: AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting
  id: GlobalCooldownSetting
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: GlobalCooldownSetting
  nameWithType: Reward.GlobalCooldownSetting
  fullName: AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: GlobalCooldownSetting
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 50
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether to apply a cooldown period between redemptions.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("global_cooldown_setting")]

      public RewardSetting GlobalCooldownSetting { get; set; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Models.RewardSetting
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("global_cooldown_setting")>

      Public Property GlobalCooldownSetting As RewardSetting
  overload: AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: global_cooldown_setting
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsPaused
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.IsPaused
  id: IsPaused
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: IsPaused
  nameWithType: Reward.IsPaused
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsPaused
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsPaused
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 54
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the reward is currently paused.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_paused")]

      public bool IsPaused { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_paused")>

      Public Property IsPaused As Boolean
  overload: AuxLabs.Twitch.Rest.Models.Reward.IsPaused*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_paused
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsInStock
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.IsInStock
  id: IsInStock
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: IsInStock
  nameWithType: Reward.IsInStock
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsInStock
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsInStock
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 58
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the reward is currently in stock.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("is_in_stock")]

      public bool IsInStock { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("is_in_stock")>

      Public Property IsInStock As Boolean
  overload: AuxLabs.Twitch.Rest.Models.Reward.IsInStock*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_in_stock
- uid: AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue
  id: ShouldSkipRequestQueue
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: ShouldSkipRequestQueue
  nameWithType: Reward.ShouldSkipRequestQueue
  fullName: AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ShouldSkipRequestQueue
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 62
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether redemptions should be set to fulfilled status immediately when a reward is redeemed.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("should_redemptions_skip_request_queue")]

      public bool ShouldSkipRequestQueue { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("should_redemptions_skip_request_queue")>

      Public Property ShouldSkipRequestQueue As Boolean
  overload: AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: should_redemptions_skip_request_queue
- uid: AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions
  id: TotalRedemptions
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: TotalRedemptions
  nameWithType: Reward.TotalRedemptions
  fullName: AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TotalRedemptions
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 66
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The number of redemptions redeemed during the current live stream.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("redemptions_redeemed_current_stream")]

      public int TotalRedemptions { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("redemptions_redeemed_current_stream")>

      Public Property TotalRedemptions As Integer
  overload: AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: redemptions_redeemed_current_stream
- uid: AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt
  commentId: P:AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt
  id: CooldownExpiresAt
  parent: AuxLabs.Twitch.Rest.Models.Reward
  langs:
  - csharp
  - vb
  name: CooldownExpiresAt
  nameWithType: Reward.CooldownExpiresAt
  fullName: AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: CooldownExpiresAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/ChannelPoints/Reward.cs
    startLine: 70
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The timestamp of when the cooldown period expires.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("cooldown_expires_at")]

      public DateTime CooldownExpiresAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("cooldown_expires_at")>

      Public Property CooldownExpiresAt As Date
  overload: AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cooldown_expires_at
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.SimpleReward
  commentId: T:AuxLabs.Twitch.SimpleReward
  parent: AuxLabs.Twitch
  href: AuxLabs.Twitch.SimpleReward.html
  name: SimpleReward
  nameWithType: SimpleReward
  fullName: AuxLabs.Twitch.SimpleReward
- uid: AuxLabs.Twitch.SimpleReward.Id
  commentId: P:AuxLabs.Twitch.SimpleReward.Id
  parent: AuxLabs.Twitch.SimpleReward
  href: AuxLabs.Twitch.SimpleReward.Id.html
  name: Id
  nameWithType: SimpleReward.Id
  fullName: AuxLabs.Twitch.SimpleReward.Id
- uid: AuxLabs.Twitch.SimpleReward.Title
  commentId: P:AuxLabs.Twitch.SimpleReward.Title
  parent: AuxLabs.Twitch.SimpleReward
  href: AuxLabs.Twitch.SimpleReward.Title.html
  name: Title
  nameWithType: SimpleReward.Title
  fullName: AuxLabs.Twitch.SimpleReward.Title
- uid: AuxLabs.Twitch.SimpleReward.Prompt
  commentId: P:AuxLabs.Twitch.SimpleReward.Prompt
  parent: AuxLabs.Twitch.SimpleReward
  href: AuxLabs.Twitch.SimpleReward.Prompt.html
  name: Prompt
  nameWithType: SimpleReward.Prompt
  fullName: AuxLabs.Twitch.SimpleReward.Prompt
- uid: AuxLabs.Twitch.SimpleReward.Cost
  commentId: P:AuxLabs.Twitch.SimpleReward.Cost
  parent: AuxLabs.Twitch.SimpleReward
  href: AuxLabs.Twitch.SimpleReward.Cost.html
  name: Cost
  nameWithType: SimpleReward.Cost
  fullName: AuxLabs.Twitch.SimpleReward.Cost
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch
  commentId: N:AuxLabs.Twitch
  href: AuxLabs.html
  name: AuxLabs.Twitch
  nameWithType: AuxLabs.Twitch
  fullName: AuxLabs.Twitch
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
- uid: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId
  href: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId.html
  name: BroadcasterId
  nameWithType: Reward.BroadcasterId
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin
  href: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin.html
  name: BroadcasterLogin
  nameWithType: Reward.BroadcasterLogin
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterLogin
- uid: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName
  href: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName.html
  name: BroadcasterName
  nameWithType: Reward.BroadcasterName
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BroadcasterName
- uid: AuxLabs.Twitch.Rest.Models.Reward.Images*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.Images
  href: AuxLabs.Twitch.Rest.Models.Reward.Images.html
  name: Images
  nameWithType: Reward.Images
  fullName: AuxLabs.Twitch.Rest.Models.Reward.Images
- uid: System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.TwitchImage}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{AuxLabs.Twitch.TwitchImage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<TwitchImage>
  nameWithType: IReadOnlyCollection<TwitchImage>
  fullName: System.Collections.Generic.IReadOnlyCollection<AuxLabs.Twitch.TwitchImage>
  nameWithType.vb: IReadOnlyCollection(Of TwitchImage)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of AuxLabs.Twitch.TwitchImage)
  name.vb: IReadOnlyCollection(Of TwitchImage)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: AuxLabs.Twitch.TwitchImage
    name: TwitchImage
    href: AuxLabs.Twitch.TwitchImage.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: AuxLabs.Twitch.TwitchImage
    name: TwitchImage
    href: AuxLabs.Twitch.TwitchImage.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AuxLabs.Twitch.Rest.Models.Reward.DefaultImages*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.DefaultImages
  href: AuxLabs.Twitch.Rest.Models.Reward.DefaultImages.html
  name: DefaultImages
  nameWithType: Reward.DefaultImages
  fullName: AuxLabs.Twitch.Rest.Models.Reward.DefaultImages
- uid: AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor
  href: AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor.html
  name: BackgroundColor
  nameWithType: Reward.BackgroundColor
  fullName: AuxLabs.Twitch.Rest.Models.Reward.BackgroundColor
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsEnabled*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.IsEnabled
  href: AuxLabs.Twitch.Rest.Models.Reward.IsEnabled.html
  name: IsEnabled
  nameWithType: Reward.IsEnabled
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired
  href: AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired.html
  name: IsUserInputRequired
  nameWithType: Reward.IsUserInputRequired
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsUserInputRequired
- uid: AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting
  href: AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting.html
  name: MaxPerStreamSetting
  nameWithType: Reward.MaxPerStreamSetting
  fullName: AuxLabs.Twitch.Rest.Models.Reward.MaxPerStreamSetting
- uid: AuxLabs.Twitch.Rest.Models.RewardSetting
  commentId: T:AuxLabs.Twitch.Rest.Models.RewardSetting
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.RewardSetting.html
  name: RewardSetting
  nameWithType: RewardSetting
  fullName: AuxLabs.Twitch.Rest.Models.RewardSetting
- uid: AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting
  href: AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting.html
  name: MaxPerUserSetting
  nameWithType: Reward.MaxPerUserSetting
  fullName: AuxLabs.Twitch.Rest.Models.Reward.MaxPerUserSetting
- uid: AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting
  href: AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting.html
  name: GlobalCooldownSetting
  nameWithType: Reward.GlobalCooldownSetting
  fullName: AuxLabs.Twitch.Rest.Models.Reward.GlobalCooldownSetting
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsPaused*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.IsPaused
  href: AuxLabs.Twitch.Rest.Models.Reward.IsPaused.html
  name: IsPaused
  nameWithType: Reward.IsPaused
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsPaused
- uid: AuxLabs.Twitch.Rest.Models.Reward.IsInStock*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.IsInStock
  href: AuxLabs.Twitch.Rest.Models.Reward.IsInStock.html
  name: IsInStock
  nameWithType: Reward.IsInStock
  fullName: AuxLabs.Twitch.Rest.Models.Reward.IsInStock
- uid: AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue
  href: AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue.html
  name: ShouldSkipRequestQueue
  nameWithType: Reward.ShouldSkipRequestQueue
  fullName: AuxLabs.Twitch.Rest.Models.Reward.ShouldSkipRequestQueue
- uid: AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions
  href: AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions.html
  name: TotalRedemptions
  nameWithType: Reward.TotalRedemptions
  fullName: AuxLabs.Twitch.Rest.Models.Reward.TotalRedemptions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt
  href: AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt.html
  name: CooldownExpiresAt
  nameWithType: Reward.CooldownExpiresAt
  fullName: AuxLabs.Twitch.Rest.Models.Reward.CooldownExpiresAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
memberLayout: SeparatePages
