### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1
  commentId: T:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1
  id: TwitchMetaResponse`1
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.DateRange
  - AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Pagination
  - AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Points
  - AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Total
  langs:
  - csharp
  - vb
  name: TwitchMetaResponse<T>
  nameWithType: TwitchMetaResponse<T>
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: TwitchMetaResponse
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
    startLine: 14
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An object that represents data returned by a Twitch request, but with some metadata.
  example: []
  syntax:
    content: 'public class TwitchMetaResponse<T> : TwitchResponse<T> where T : class'
    typeParameters:
    - id: T
    content.vb: Public Class TwitchMetaResponse(Of T As Class) Inherits TwitchResponse(Of T)
  inheritance:
  - System.Object
  - AuxLabs.Twitch.Rest.Models.TwitchResponse{{T}}
  inheritedMembers:
  - AuxLabs.Twitch.Rest.Models.TwitchResponse{{T}}.Data
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TwitchMetaResponse(Of T)
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T)
  name.vb: TwitchMetaResponse(Of T)
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Total
  commentId: P:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Total
  id: Total
  parent: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: TwitchMetaResponse<T>.Total
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.Total
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Total
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
    startLine: 17
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The total number of objects returned in <see cref="!:TwitchResponse.Data"></see>.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("total")]

      public int? Total { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("total")>

      Public Property Total As Integer?
  overload: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Total*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: total
  nameWithType.vb: TwitchMetaResponse(Of T).Total
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).Total
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Points
  commentId: P:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Points
  id: Points
  parent: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: TwitchMetaResponse<T>.Points
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.Points
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Points
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
    startLine: 22
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The current number of subscriber points earned by this broadcaster.
  remarks: Only returned for <see cref="!:ITwitchApi.GetSubscriptionsAsync(GetSubscriptionsArgs)"></see>
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("points")]

      public int? Points { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("points")>

      Public Property Points As Integer?
  overload: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Points*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: points
  nameWithType.vb: TwitchMetaResponse(Of T).Points
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).Points
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.DateRange
  commentId: P:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.DateRange
  id: DateRange
  parent: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1
  langs:
  - csharp
  - vb
  name: DateRange
  nameWithType: TwitchMetaResponse<T>.DateRange
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.DateRange
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DateRange
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
    startLine: 26
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: A range of dates relating to the objects returned in <see cref="!:TwitchResponse.Data"></see>.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("date_range")]

      public DateRange? DateRange { get; }
    parameters: []
    return:
      type: System.Nullable{AuxLabs.Twitch.DateRange}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("date_range")>

      Public Property DateRange As DateRange?
  overload: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.DateRange*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: date_range
  nameWithType.vb: TwitchMetaResponse(Of T).DateRange
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).DateRange
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Pagination
  commentId: P:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Pagination
  id: Pagination
  parent: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1
  langs:
  - csharp
  - vb
  name: Pagination
  nameWithType: TwitchMetaResponse<T>.Pagination
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.Pagination
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Pagination
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/TwitchResponse.cs
    startLine: 30
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Contains information used to page through the list of results.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("pagination")]

      public Pagination? Pagination { get; }
    parameters: []
    return:
      type: System.Nullable{AuxLabs.Twitch.Rest.Models.Pagination}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("pagination")>

      Public Property Pagination As Pagination?
  overload: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Pagination*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pagination
  nameWithType.vb: TwitchMetaResponse(Of T).Pagination
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).Pagination
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AuxLabs.Twitch.Rest.Models.TwitchResponse{{T}}
  commentId: T:AuxLabs.Twitch.Rest.Models.TwitchResponse{`0}
  parent: AuxLabs.Twitch.Rest.Models
  definition: AuxLabs.Twitch.Rest.Models.TwitchResponse`1
  href: AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html
  name: TwitchResponse<T>
  nameWithType: TwitchResponse<T>
  fullName: AuxLabs.Twitch.Rest.Models.TwitchResponse<T>
  nameWithType.vb: TwitchResponse(Of T)
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchResponse(Of T)
  name.vb: TwitchResponse(Of T)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Models.TwitchResponse`1
    name: TwitchResponse
    href: AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Models.TwitchResponse`1
    name: TwitchResponse
    href: AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.TwitchResponse{{T}}.Data
  commentId: P:AuxLabs.Twitch.Rest.Models.TwitchResponse{`0}.Data
  parent: AuxLabs.Twitch.Rest.Models.TwitchResponse{{T}}
  definition: AuxLabs.Twitch.Rest.Models.TwitchResponse`1.Data
  href: AuxLabs.Twitch.Rest.Models.TwitchResponse{-0}.Data.html
  name: Data
  nameWithType: TwitchResponse<T>.Data
  fullName: AuxLabs.Twitch.Rest.Models.TwitchResponse<T>.Data
  nameWithType.vb: TwitchResponse(Of T).Data
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchResponse(Of T).Data
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.TwitchResponse`1
  commentId: T:AuxLabs.Twitch.Rest.Models.TwitchResponse`1
  href: AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html
  name: TwitchResponse<T>
  nameWithType: TwitchResponse<T>
  fullName: AuxLabs.Twitch.Rest.Models.TwitchResponse<T>
  nameWithType.vb: TwitchResponse(Of T)
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchResponse(Of T)
  name.vb: TwitchResponse(Of T)
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Models.TwitchResponse`1
    name: TwitchResponse
    href: AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Models.TwitchResponse`1
    name: TwitchResponse
    href: AuxLabs.Twitch.Rest.Models.TwitchResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.TwitchResponse`1.Data
  commentId: P:AuxLabs.Twitch.Rest.Models.TwitchResponse`1.Data
  href: AuxLabs.Twitch.Rest.Models.TwitchResponse-1.Data.html
  name: Data
  nameWithType: TwitchResponse<T>.Data
  fullName: AuxLabs.Twitch.Rest.Models.TwitchResponse<T>.Data
  nameWithType.vb: TwitchResponse(Of T).Data
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchResponse(Of T).Data
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Total*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Total
  href: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse-1.Total.html
  name: Total
  nameWithType: TwitchMetaResponse<T>.Total
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.Total
  nameWithType.vb: TwitchMetaResponse(Of T).Total
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).Total
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Points*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Points
  href: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse-1.Points.html
  name: Points
  nameWithType: TwitchMetaResponse<T>.Points
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.Points
  nameWithType.vb: TwitchMetaResponse(Of T).Points
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).Points
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.DateRange*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.DateRange
  href: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse-1.DateRange.html
  name: DateRange
  nameWithType: TwitchMetaResponse<T>.DateRange
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.DateRange
  nameWithType.vb: TwitchMetaResponse(Of T).DateRange
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).DateRange
- uid: System.Nullable{AuxLabs.Twitch.DateRange}
  commentId: T:System.Nullable{AuxLabs.Twitch.DateRange}
  parent: System
  definition: System.Nullable`1
  href: AuxLabs.Twitch.DateRange.html
  name: DateRange?
  nameWithType: DateRange?
  fullName: AuxLabs.Twitch.DateRange?
  spec.csharp:
  - uid: AuxLabs.Twitch.DateRange
    name: DateRange
    href: AuxLabs.Twitch.DateRange.html
  - name: '?'
  spec.vb:
  - uid: AuxLabs.Twitch.DateRange
    name: DateRange
    href: AuxLabs.Twitch.DateRange.html
  - name: '?'
- uid: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Pagination*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.TwitchMetaResponse`1.Pagination
  href: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse-1.Pagination.html
  name: Pagination
  nameWithType: TwitchMetaResponse<T>.Pagination
  fullName: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse<T>.Pagination
  nameWithType.vb: TwitchMetaResponse(Of T).Pagination
  fullName.vb: AuxLabs.Twitch.Rest.Models.TwitchMetaResponse(Of T).Pagination
- uid: System.Nullable{AuxLabs.Twitch.Rest.Models.Pagination}
  commentId: T:System.Nullable{AuxLabs.Twitch.Rest.Models.Pagination}
  parent: System
  definition: System.Nullable`1
  href: AuxLabs.Twitch.Rest.Models.Pagination.html
  name: Pagination?
  nameWithType: Pagination?
  fullName: AuxLabs.Twitch.Rest.Models.Pagination?
  spec.csharp:
  - uid: AuxLabs.Twitch.Rest.Models.Pagination
    name: Pagination
    href: AuxLabs.Twitch.Rest.Models.Pagination.html
  - name: '?'
  spec.vb:
  - uid: AuxLabs.Twitch.Rest.Models.Pagination
    name: Pagination
    href: AuxLabs.Twitch.Rest.Models.Pagination.html
  - name: '?'
memberLayout: SeparatePages
