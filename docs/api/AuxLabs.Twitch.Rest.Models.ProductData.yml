### YamlMime:ManagedReference
items:
- uid: AuxLabs.Twitch.Rest.Models.ProductData
  commentId: T:AuxLabs.Twitch.Rest.Models.ProductData
  id: ProductData
  parent: AuxLabs.Twitch.Rest.Models
  children:
  - AuxLabs.Twitch.Rest.Models.ProductData.Cost
  - AuxLabs.Twitch.Rest.Models.ProductData.DisplayName
  - AuxLabs.Twitch.Rest.Models.ProductData.Domain
  - AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt
  - AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast
  - AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment
  - AuxLabs.Twitch.Rest.Models.ProductData.Sku
  langs:
  - csharp
  - vb
  name: ProductData
  nameWithType: ProductData
  fullName: AuxLabs.Twitch.Rest.Models.ProductData
  type: Class
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ProductData
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 5
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  syntax:
    content: public class ProductData
    content.vb: Public Class ProductData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AuxLabs.Twitch.Rest.Models.ProductData.Sku
  commentId: P:AuxLabs.Twitch.Rest.Models.ProductData.Sku
  id: Sku
  parent: AuxLabs.Twitch.Rest.Models.ProductData
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: ProductData.Sku
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.Sku
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Sku
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 8
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: An ID that identifies the digital product.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("sku")]

      public string Sku { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("sku")>

      Public Property Sku As String
  overload: AuxLabs.Twitch.Rest.Models.ProductData.Sku*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sku
- uid: AuxLabs.Twitch.Rest.Models.ProductData.Domain
  commentId: P:AuxLabs.Twitch.Rest.Models.ProductData.Domain
  id: Domain
  parent: AuxLabs.Twitch.Rest.Models.ProductData
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: ProductData.Domain
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.Domain
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Domain
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 12
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Set to <code>twitch.ext.</code> + <code>the extension's ID</code>.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("domain")]

      public string Domain { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("domain")>

      Public Property Domain As String
  overload: AuxLabs.Twitch.Rest.Models.ProductData.Domain*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: domain
- uid: AuxLabs.Twitch.Rest.Models.ProductData.Cost
  commentId: P:AuxLabs.Twitch.Rest.Models.ProductData.Cost
  id: Cost
  parent: AuxLabs.Twitch.Rest.Models.ProductData
  langs:
  - csharp
  - vb
  name: Cost
  nameWithType: ProductData.Cost
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.Cost
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: Cost
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 16
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Contains details about the digital productâ€™s cost.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("cost")]

      public Cost Cost { get; }
    parameters: []
    return:
      type: AuxLabs.Twitch.Rest.Models.Cost
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("cost")>

      Public Property Cost As Cost
  overload: AuxLabs.Twitch.Rest.Models.ProductData.Cost*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cost
- uid: AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment
  commentId: P:AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment
  id: IsInDevelopment
  parent: AuxLabs.Twitch.Rest.Models.ProductData
  langs:
  - csharp
  - vb
  name: IsInDevelopment
  nameWithType: ProductData.IsInDevelopment
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsInDevelopment
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 20
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the product is in development.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("inDevelopment")]

      public bool IsInDevelopment { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("inDevelopment")>

      Public Property IsInDevelopment As Boolean
  overload: AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: inDevelopment
- uid: AuxLabs.Twitch.Rest.Models.ProductData.DisplayName
  commentId: P:AuxLabs.Twitch.Rest.Models.ProductData.DisplayName
  id: DisplayName
  parent: AuxLabs.Twitch.Rest.Models.ProductData
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ProductData.DisplayName
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.DisplayName
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: DisplayName
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 24
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: The name of the digital product.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("displayName")]

      public string DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("displayName")>

      Public Property DisplayName As String
  overload: AuxLabs.Twitch.Rest.Models.ProductData.DisplayName*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: displayName
- uid: AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt
  commentId: P:AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt
  id: ExpiresAt
  parent: AuxLabs.Twitch.Rest.Models.ProductData
  langs:
  - csharp
  - vb
  name: ExpiresAt
  nameWithType: ProductData.ExpiresAt
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: ExpiresAt
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 28
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: This is always null since you may purchase only unexpired products.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("expiration")]

      public DateTime? ExpiresAt { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("expiration")>

      Public Property ExpiresAt As Date?
  overload: AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expiration
- uid: AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast
  commentId: P:AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast
  id: IsBroadcast
  parent: AuxLabs.Twitch.Rest.Models.ProductData
  langs:
  - csharp
  - vb
  name: IsBroadcast
  nameWithType: ProductData.IsBroadcast
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast
  type: Property
  source:
    remote:
      path: src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
      branch: main
      repo: https://github.com/AuxLabs/Twitch.git
    id: IsBroadcast
    path: ../src/AuxLabs.Twitch.Rest.Api/Models/Extensions/ProductData.cs
    startLine: 32
  assemblies:
  - AuxLabs.Twitch.Rest.Api
  namespace: AuxLabs.Twitch.Rest.Models
  summary: Determines whether the data was broadcast to all instances of the extension.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      [JsonPropertyName("broadcast")]

      public bool IsBroadcast { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonInclude>

      <JsonPropertyName("broadcast")>

      Public Property IsBroadcast As Boolean
  overload: AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast*
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: broadcast
references:
- uid: AuxLabs.Twitch.Rest.Models
  commentId: N:AuxLabs.Twitch.Rest.Models
  href: AuxLabs.html
  name: AuxLabs.Twitch.Rest.Models
  nameWithType: AuxLabs.Twitch.Rest.Models
  fullName: AuxLabs.Twitch.Rest.Models
  spec.csharp:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
  spec.vb:
  - uid: AuxLabs
    name: AuxLabs
    href: AuxLabs.html
  - name: .
  - uid: AuxLabs.Twitch
    name: Twitch
    href: AuxLabs.Twitch.html
  - name: .
  - uid: AuxLabs.Twitch.Rest
    name: Rest
    href: AuxLabs.Twitch.Rest.html
  - name: .
  - uid: AuxLabs.Twitch.Rest.Models
    name: Models
    href: AuxLabs.Twitch.Rest.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AuxLabs.Twitch.Rest.Models.ProductData.Sku*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ProductData.Sku
  href: AuxLabs.Twitch.Rest.Models.ProductData.Sku.html
  name: Sku
  nameWithType: ProductData.Sku
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.Sku
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AuxLabs.Twitch.Rest.Models.ProductData.Domain*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ProductData.Domain
  href: AuxLabs.Twitch.Rest.Models.ProductData.Domain.html
  name: Domain
  nameWithType: ProductData.Domain
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.Domain
- uid: AuxLabs.Twitch.Rest.Models.ProductData.Cost*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ProductData.Cost
  href: AuxLabs.Twitch.Rest.Models.ProductData.Cost.html
  name: Cost
  nameWithType: ProductData.Cost
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.Cost
- uid: AuxLabs.Twitch.Rest.Models.Cost
  commentId: T:AuxLabs.Twitch.Rest.Models.Cost
  parent: AuxLabs.Twitch.Rest.Models
  href: AuxLabs.Twitch.Rest.Models.Cost.html
  name: Cost
  nameWithType: Cost
  fullName: AuxLabs.Twitch.Rest.Models.Cost
- uid: AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment
  href: AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment.html
  name: IsInDevelopment
  nameWithType: ProductData.IsInDevelopment
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.IsInDevelopment
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AuxLabs.Twitch.Rest.Models.ProductData.DisplayName*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ProductData.DisplayName
  href: AuxLabs.Twitch.Rest.Models.ProductData.DisplayName.html
  name: DisplayName
  nameWithType: ProductData.DisplayName
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.DisplayName
- uid: AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt
  href: AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt.html
  name: ExpiresAt
  nameWithType: ProductData.ExpiresAt
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.ExpiresAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast*
  commentId: Overload:AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast
  href: AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast.html
  name: IsBroadcast
  nameWithType: ProductData.IsBroadcast
  fullName: AuxLabs.Twitch.Rest.Models.ProductData.IsBroadcast
memberLayout: SeparatePages
